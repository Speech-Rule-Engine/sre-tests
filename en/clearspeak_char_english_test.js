// Copyright 2019 Volker Sorge
//
// Licensed under the Apache License, Version 2.0 (the 'License');
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Abstract class for test cases of single characters.
 * @author Volker.Sorge@gmail.com (Volker Sorge)
 */

goog.provide('sre.ClearspeakCharEnglishTest');

goog.require('sre.AbstractCharacterTest');



/**
 * @constructor
 * @extends {sre.AbstractCharacterTest}
 */
sre.ClearspeakCharEnglishTest = function() {
  sre.ClearspeakCharEnglishTest.base(this, 'constructor');

  this.locale = 'en';
  this.domain = 'clearspeak';
  this.semantics = true;
  
  /**
   * @type {Array.<string>}
   */
  this.styles = ['default'];

  this.setActive('ClearspeakCharactersEnglish');
};
goog.inherits(sre.ClearspeakCharEnglishTest, sre.AbstractCharacterTest);

                                            
sre.ClearspeakCharEnglishTest.prototype.testClearspeakChars = function() {
  this.executeCharTest('0', ['0']);
  this.executeCharTest('1', ['1']);
  this.executeCharTest('2', ['2']);
  this.executeCharTest('3', ['3']);
  this.executeCharTest('4', ['4']);
  this.executeCharTest('5', ['5']);
  this.executeCharTest('6', ['6']);
  this.executeCharTest('7', ['7']);
  this.executeCharTest('8', ['8']);
  this.executeCharTest('9', ['9']);
  this.executeCharTest('Α', ['cap Alpha']);
  this.executeCharTest('Β', ['cap Beta']);
  this.executeCharTest('Γ', ['cap Gamma']);
  this.executeCharTest('Δ', ['triangle']);
  this.executeCharTest('Ε', ['cap Epsilon']);
  this.executeCharTest('Ζ', ['cap Zeta']);
  this.executeCharTest('Η', ['cap Eta']);
  this.executeCharTest('Θ', ['cap Theta']);
  this.executeCharTest('Ι', ['cap Iota']);
  this.executeCharTest('Κ', ['cap Kappa']);
  this.executeCharTest('Λ', ['cap Lamda']);
  this.executeCharTest('Μ', ['cap Mu']);
  this.executeCharTest('Ν', ['cap Nu']);
  this.executeCharTest('Ξ', ['cap Xi']);
  this.executeCharTest('Ο', ['cap Omicron']);
  this.executeCharTest('Π', ['cap Pi']);
  this.executeCharTest('Ρ', ['cap Rho']);
  this.executeCharTest('Σ', ['cap Sigma']);
  this.executeCharTest('Τ', ['cap Tau']);
  this.executeCharTest('Υ', ['cap Upsilon']);
  this.executeCharTest('Φ', ['cap Phi']);
  this.executeCharTest('Χ', ['cap Chi']);
  this.executeCharTest('Ψ', ['cap Psi']);
  this.executeCharTest('Ω', ['cap Omega']);
  this.executeCharTest('α', ['alpha']);
  this.executeCharTest('β', ['beta']);
  this.executeCharTest('γ', ['gamma']);
  this.executeCharTest('δ', ['delta']);
  this.executeCharTest('ε', ['epsilon']);
  this.executeCharTest('ζ', ['zeta']);
  this.executeCharTest('η', ['eta']);
  this.executeCharTest('θ', ['theta']);
  this.executeCharTest('ι', ['iota']);
  this.executeCharTest('κ', ['kappa']);
  this.executeCharTest('λ', ['lamda']);
  this.executeCharTest('μ', ['mu']);
  this.executeCharTest('ν', ['nu']);
  this.executeCharTest('ξ', ['xi']);
  this.executeCharTest('ο', ['omicron']);
  this.executeCharTest('π', ['pi']);
  this.executeCharTest('ρ', ['rho']);
  this.executeCharTest('ς', ['final sigma']);
  this.executeCharTest('σ', ['sigma']);
  this.executeCharTest('τ', ['tau']);
  this.executeCharTest('υ', ['upsilon']);
  this.executeCharTest('φ', ['phi']);
  this.executeCharTest('χ', ['chi']);
  this.executeCharTest('ψ', ['psi']);
  this.executeCharTest('ω', ['omega']);
  this.executeCharTest('ᴦ', ['small upper Gamma']);
  this.executeCharTest('ᴧ', ['small upper Lamda']);
  this.executeCharTest('ᴨ', ['small upper Pi']);
  this.executeCharTest('ᴩ', ['small upper Rho']);
  this.executeCharTest('ᴪ', ['small upper Psi']);
  this.executeCharTest('ᵞ', ['superscript gamma']);
  this.executeCharTest('ᵠ', ['superscript phi']);
  this.executeCharTest('ᵦ', ['subscript beta']);
  this.executeCharTest('ᵧ', ['subscript gamma']);
  this.executeCharTest('ᵨ', ['subscript rho']);
  this.executeCharTest('ᵩ', ['subscript phi']);
  this.executeCharTest('ᵪ', ['subscript chi']);
  this.executeCharTest('ϐ', ['beta']);
  this.executeCharTest('ϑ', ['theta']);
  this.executeCharTest('ϕ', ['phi']);
  this.executeCharTest('ϖ', ['pi']);
  this.executeCharTest('ϗ', ['kai']);
  this.executeCharTest('ϰ', ['kappa']);
  this.executeCharTest('ϱ', ['rho']);
  this.executeCharTest('ϵ', ['epsilon']);
  this.executeCharTest('϶', ['reversed epsilon']);
  this.executeCharTest('ϴ', ['cap Theta']);
  this.executeCharTest('𝚹', ['bold cap Theta']);
  this.executeCharTest('𝛳', ['italic cap Theta']);
  this.executeCharTest('𝝧', ['sans serif bold cap Theta']);
  this.executeCharTest('𝛁', ['mathematical bold nabla']);
  this.executeCharTest('𝛛', ['bold partial differential']);
  this.executeCharTest('𝛜', ['bold epsilon']);
  this.executeCharTest('𝛝', ['bold theta']);
  this.executeCharTest('𝛞', ['bold kappa']);
  this.executeCharTest('𝛟', ['bold phi']);
  this.executeCharTest('𝛠', ['bold rho']);
  this.executeCharTest('𝛡', ['bold pi']);
  this.executeCharTest('𝛻', ['italic nabla']);
  this.executeCharTest('𝜕', ['italic partial differential']);
  this.executeCharTest('𝜖', ['italic epsilon']);
  this.executeCharTest('𝜗', ['italic theta']);
  this.executeCharTest('𝜘', ['italic kappa']);
  this.executeCharTest('𝜙', ['italic phi']);
  this.executeCharTest('𝜚', ['italic rho']);
  this.executeCharTest('𝜛', ['italic pi']);
  this.executeCharTest('𝝯', ['sans serif bold nabla']);
  this.executeCharTest('𝞉', ['sans serif bold partial differential']);
  this.executeCharTest('𝞊', ['sans serif bold epsilon']);
  this.executeCharTest('𝞋', ['sans serif bold theta']);
  this.executeCharTest('𝞌', ['sans serif bold kappa']);
  this.executeCharTest('𝞍', ['sans serif bold phi']);
  this.executeCharTest('𝞎', ['sans serif bold rho']);
  this.executeCharTest('𝞏', ['sans serif bold pi']);
  this.executeCharTest('𝟊', ['bold cap Digamma']);
  this.executeCharTest('𝟋', ['bold digamma']);
  this.executeCharTest('𝚨', ['bold cap Alpha']);
  this.executeCharTest('𝚩', ['bold cap Beta']);
  this.executeCharTest('𝚪', ['bold cap Gamma']);
  this.executeCharTest('𝚫', ['bold cap Delta']);
  this.executeCharTest('𝚬', ['bold cap Epsilon']);
  this.executeCharTest('𝚭', ['bold cap Zeta']);
  this.executeCharTest('𝚮', ['bold cap Eta']);
  this.executeCharTest('𝚯', ['bold cap Theta']);
  this.executeCharTest('𝚰', ['bold cap Iota']);
  this.executeCharTest('𝚱', ['bold cap Kappa']);
  this.executeCharTest('𝚲', ['bold cap Lamda']);
  this.executeCharTest('𝚳', ['bold cap Mu']);
  this.executeCharTest('𝚴', ['bold cap Nu']);
  this.executeCharTest('𝚵', ['bold cap Xi']);
  this.executeCharTest('𝚶', ['bold cap Omicron']);
  this.executeCharTest('𝚷', ['bold cap Pi']);
  this.executeCharTest('𝚸', ['bold cap Rho']);
  this.executeCharTest('𝚺', ['bold cap Sigma']);
  this.executeCharTest('𝚻', ['bold cap Tau']);
  this.executeCharTest('𝚼', ['bold cap Upsilon']);
  this.executeCharTest('𝚽', ['bold cap Phi']);
  this.executeCharTest('𝚾', ['bold cap Chi']);
  this.executeCharTest('𝚿', ['bold cap Psi']);
  this.executeCharTest('𝛀', ['bold cap Omega']);
  this.executeCharTest('𝛂', ['bold alpha']);
  this.executeCharTest('𝛃', ['bold beta']);
  this.executeCharTest('𝛄', ['bold gamma']);
  this.executeCharTest('𝛅', ['bold delta']);
  this.executeCharTest('𝛆', ['bold epsilon']);
  this.executeCharTest('𝛇', ['bold zeta']);
  this.executeCharTest('𝛈', ['bold eta']);
  this.executeCharTest('𝛉', ['bold theta']);
  this.executeCharTest('𝛊', ['bold iota']);
  this.executeCharTest('𝛋', ['bold kappa']);
  this.executeCharTest('𝛌', ['bold lamda']);
  this.executeCharTest('𝛍', ['bold mu']);
  this.executeCharTest('𝛎', ['bold nu']);
  this.executeCharTest('𝛏', ['bold xi']);
  this.executeCharTest('𝛐', ['bold omicron']);
  this.executeCharTest('𝛑', ['bold pi']);
  this.executeCharTest('𝛒', ['bold rho']);
  this.executeCharTest('𝛓', ['bold final sigma']);
  this.executeCharTest('𝛔', ['bold sigma']);
  this.executeCharTest('𝛕', ['bold tau']);
  this.executeCharTest('𝛖', ['bold upsilon']);
  this.executeCharTest('𝛗', ['bold phi']);
  this.executeCharTest('𝛘', ['bold chi']);
  this.executeCharTest('𝛙', ['bold psi']);
  this.executeCharTest('𝛚', ['bold omega']);
  this.executeCharTest('𝛢', ['italic cap Alpha']);
  this.executeCharTest('𝛣', ['italic cap Beta']);
  this.executeCharTest('𝛤', ['italic cap Gamma']);
  this.executeCharTest('𝛥', ['italic cap Delta']);
  this.executeCharTest('𝛦', ['italic cap Epsilon']);
  this.executeCharTest('𝛧', ['italic cap Zeta']);
  this.executeCharTest('𝛨', ['italic cap Eta']);
  this.executeCharTest('𝛩', ['italic cap Theta']);
  this.executeCharTest('𝛪', ['italic cap Iota']);
  this.executeCharTest('𝛫', ['italic cap Kappa']);
  this.executeCharTest('𝛬', ['italic cap Lamda']);
  this.executeCharTest('𝛭', ['italic cap Mu']);
  this.executeCharTest('𝛮', ['italic cap Nu']);
  this.executeCharTest('𝛯', ['italic cap Xi']);
  this.executeCharTest('𝛰', ['italic cap Omicron']);
  this.executeCharTest('𝛱', ['italic cap Pi']);
  this.executeCharTest('𝛲', ['italic cap Rho']);
  this.executeCharTest('𝛴', ['italic cap Sigma']);
  this.executeCharTest('𝛵', ['italic cap Tau']);
  this.executeCharTest('𝛶', ['italic cap Upsilon']);
  this.executeCharTest('𝛷', ['italic cap Phi']);
  this.executeCharTest('𝛸', ['italic cap Chi']);
  this.executeCharTest('𝛹', ['italic cap Psi']);
  this.executeCharTest('𝛺', ['italic cap Omega']);
  this.executeCharTest('𝛼', ['italic alpha']);
  this.executeCharTest('𝛽', ['italic beta']);
  this.executeCharTest('𝛾', ['italic gamma']);
  this.executeCharTest('𝛿', ['italic delta']);
  this.executeCharTest('𝜀', ['italic epsilon']);
  this.executeCharTest('𝜁', ['italic zeta']);
  this.executeCharTest('𝜂', ['italic eta']);
  this.executeCharTest('𝜃', ['italic theta']);
  this.executeCharTest('𝜄', ['italic iota']);
  this.executeCharTest('𝜅', ['italic kappa']);
  this.executeCharTest('𝜆', ['italic lamda']);
  this.executeCharTest('𝜇', ['italic mu']);
  this.executeCharTest('𝜈', ['italic nu']);
  this.executeCharTest('𝜉', ['italic xi']);
  this.executeCharTest('𝜊', ['italic omicron']);
  this.executeCharTest('𝜋', ['italic pi']);
  this.executeCharTest('𝜌', ['italic rho']);
  this.executeCharTest('𝜍', ['italic final sigma']);
  this.executeCharTest('𝜎', ['italic sigma']);
  this.executeCharTest('𝜏', ['italic tau']);
  this.executeCharTest('𝜐', ['italic upsilon']);
  this.executeCharTest('𝜑', ['italic phi']);
  this.executeCharTest('𝜒', ['italic chi']);
  this.executeCharTest('𝜓', ['italic psi']);
  this.executeCharTest('𝜔', ['italic omega']);
  this.executeCharTest('𝜜', ['bold italic cap Alpha']);
  this.executeCharTest('𝜝', ['bold italic cap Beta']);
  this.executeCharTest('𝜞', ['bold italic cap Gamma']);
  this.executeCharTest('𝜟', ['bold italic cap Delta']);
  this.executeCharTest('𝜠', ['bold italic cap Epsilon']);
  this.executeCharTest('𝜡', ['bold italic cap Zeta']);
  this.executeCharTest('𝜢', ['bold italic cap Eta']);
  this.executeCharTest('𝜣', ['bold italic cap Theta']);
  this.executeCharTest('𝜤', ['bold italic cap Iota']);
  this.executeCharTest('𝜥', ['bold italic cap Kappa']);
  this.executeCharTest('𝜦', ['bold italic cap Lamda']);
  this.executeCharTest('𝜧', ['bold italic cap Mu']);
  this.executeCharTest('𝜨', ['bold italic cap Nu']);
  this.executeCharTest('𝜩', ['bold italic cap Xi']);
  this.executeCharTest('𝜪', ['bold italic cap Omicron']);
  this.executeCharTest('𝜫', ['bold italic cap Pi']);
  this.executeCharTest('𝜬', ['bold italic cap Rho']);
  this.executeCharTest('𝜮', ['bold italic cap Sigma']);
  this.executeCharTest('𝜯', ['bold italic cap Tau']);
  this.executeCharTest('𝜰', ['bold italic cap Upsilon']);
  this.executeCharTest('𝜱', ['bold italic cap Phi']);
  this.executeCharTest('𝜲', ['bold italic cap Chi']);
  this.executeCharTest('𝜳', ['bold italic cap Psi']);
  this.executeCharTest('𝜴', ['bold italic cap Omega']);
  this.executeCharTest('𝜶', ['bold italic alpha']);
  this.executeCharTest('𝜷', ['bold italic beta']);
  this.executeCharTest('𝜸', ['bold italic gamma']);
  this.executeCharTest('𝜹', ['bold italic delta']);
  this.executeCharTest('𝜺', ['bold italic epsilon']);
  this.executeCharTest('𝜻', ['bold italic zeta']);
  this.executeCharTest('𝜼', ['bold italic eta']);
  this.executeCharTest('𝜽', ['bold italic theta']);
  this.executeCharTest('𝜾', ['bold italic iota']);
  this.executeCharTest('𝜿', ['bold italic kappa']);
  this.executeCharTest('𝝀', ['bold italic lamda']);
  this.executeCharTest('𝝁', ['bold italic mu']);
  this.executeCharTest('𝝂', ['bold italic nu']);
  this.executeCharTest('𝝃', ['bold italic xi']);
  this.executeCharTest('𝝄', ['bold italic omicron']);
  this.executeCharTest('𝝅', ['bold italic pi']);
  this.executeCharTest('𝝆', ['bold italic rho']);
  this.executeCharTest('𝝇', ['bold italic final sigma']);
  this.executeCharTest('𝝈', ['bold italic sigma']);
  this.executeCharTest('𝝉', ['bold italic tau']);
  this.executeCharTest('𝝊', ['bold italic upsilon']);
  this.executeCharTest('𝝋', ['bold italic phi']);
  this.executeCharTest('𝝌', ['bold italic chi']);
  this.executeCharTest('𝝍', ['bold italic psi']);
  this.executeCharTest('𝝎', ['bold italic omega']);
  this.executeCharTest('𝝖', ['sans serif bold cap Alpha']);
  this.executeCharTest('𝝗', ['sans serif bold cap Beta']);
  this.executeCharTest('𝝘', ['sans serif bold cap Gamma']);
  this.executeCharTest('𝝙', ['sans serif bold cap Delta']);
  this.executeCharTest('𝝚', ['sans serif bold cap Epsilon']);
  this.executeCharTest('𝝛', ['sans serif bold cap Zeta']);
  this.executeCharTest('𝝜', ['sans serif bold cap Eta']);
  this.executeCharTest('𝝝', ['sans serif bold cap Theta']);
  this.executeCharTest('𝝞', ['sans serif bold cap Iota']);
  this.executeCharTest('𝝟', ['sans serif bold cap Kappa']);
  this.executeCharTest('𝝠', ['sans serif bold cap Lamda']);
  this.executeCharTest('𝝡', ['sans serif bold cap Mu']);
  this.executeCharTest('𝝢', ['sans serif bold cap Nu']);
  this.executeCharTest('𝝣', ['sans serif bold cap Xi']);
  this.executeCharTest('𝝤', ['sans serif bold cap Omicron']);
  this.executeCharTest('𝝥', ['sans serif bold cap Pi']);
  this.executeCharTest('𝝦', ['sans serif bold cap Rho']);
  this.executeCharTest('𝝨', ['sans serif bold cap Sigma']);
  this.executeCharTest('𝝩', ['sans serif bold cap Tau']);
  this.executeCharTest('𝝪', ['sans serif bold cap Upsilon']);
  this.executeCharTest('𝝫', ['sans serif bold cap Phi']);
  this.executeCharTest('𝝬', ['sans serif bold cap Chi']);
  this.executeCharTest('𝝭', ['sans serif bold cap Psi']);
  this.executeCharTest('𝝮', ['sans serif bold cap Omega']);
  this.executeCharTest('𝝰', ['sans serif bold alpha']);
  this.executeCharTest('𝝱', ['sans serif bold beta']);
  this.executeCharTest('𝝲', ['sans serif bold gamma']);
  this.executeCharTest('𝝳', ['sans serif bold delta']);
  this.executeCharTest('𝝴', ['sans serif bold epsilon']);
  this.executeCharTest('𝝵', ['sans serif bold zeta']);
  this.executeCharTest('𝝶', ['sans serif bold eta']);
  this.executeCharTest('𝝷', ['sans serif bold theta']);
  this.executeCharTest('𝝸', ['sans serif bold iota']);
  this.executeCharTest('𝝹', ['sans serif bold kappa']);
  this.executeCharTest('𝝺', ['sans serif bold lamda']);
  this.executeCharTest('𝝻', ['sans serif bold mu']);
  this.executeCharTest('𝝼', ['sans serif bold nu']);
  this.executeCharTest('𝝽', ['sans serif bold xi']);
  this.executeCharTest('𝝾', ['sans serif bold omicron']);
  this.executeCharTest('𝝿', ['sans serif bold pi']);
  this.executeCharTest('𝞀', ['sans serif bold rho']);
  this.executeCharTest('𝞁', ['sans serif bold final sigma']);
  this.executeCharTest('𝞂', ['sans serif bold sigma']);
  this.executeCharTest('𝞃', ['sans serif bold tau']);
  this.executeCharTest('𝞄', ['sans serif bold upsilon']);
  this.executeCharTest('𝞅', ['sans serif bold phi']);
  this.executeCharTest('𝞆', ['sans serif bold chi']);
  this.executeCharTest('𝞇', ['sans serif bold psi']);
  this.executeCharTest('𝞈', ['sans serif bold omega']);
  this.executeCharTest('𝞐', ['sans serif bold italic cap Alpha']);
  this.executeCharTest('𝞑', ['sans serif bold italic cap Beta']);
  this.executeCharTest('𝞒', ['sans serif bold italic cap Gamma']);
  this.executeCharTest('𝞓', ['sans serif bold italic cap Delta']);
  this.executeCharTest('𝞔', ['sans serif bold italic cap Epsilon']);
  this.executeCharTest('𝞕', ['sans serif bold italic cap Zeta']);
  this.executeCharTest('𝞖', ['sans serif bold italic cap Eta']);
  this.executeCharTest('𝞗', ['sans serif bold italic cap Theta']);
  this.executeCharTest('𝞘', ['sans serif bold italic cap Iota']);
  this.executeCharTest('𝞙', ['sans serif bold italic cap Kappa']);
  this.executeCharTest('𝞚', ['sans serif bold italic cap Lamda']);
  this.executeCharTest('𝞛', ['sans serif bold italic cap Mu']);
  this.executeCharTest('𝞜', ['sans serif bold italic cap Nu']);
  this.executeCharTest('𝞝', ['sans serif bold italic cap Xi']);
  this.executeCharTest('𝞞', ['sans serif bold italic cap Omicron']);
  this.executeCharTest('𝞟', ['sans serif bold italic cap Pi']);
  this.executeCharTest('𝞠', ['sans serif bold italic cap Rho']);
  this.executeCharTest('𝞢', ['sans serif bold italic cap Sigma']);
  this.executeCharTest('𝞣', ['sans serif bold italic cap Tau']);
  this.executeCharTest('𝞤', ['sans serif bold italic cap Upsilon']);
  this.executeCharTest('𝞥', ['sans serif bold italic cap Phi']);
  this.executeCharTest('𝞦', ['sans serif bold italic cap Chi']);
  this.executeCharTest('𝞧', ['sans serif bold italic cap Psi']);
  this.executeCharTest('𝞨', ['sans serif bold italic cap Omega']);
  this.executeCharTest('𝞪', ['sans serif bold italic alpha']);
  this.executeCharTest('𝞫', ['sans serif bold italic beta']);
  this.executeCharTest('𝞬', ['sans serif bold italic gamma']);
  this.executeCharTest('𝞭', ['sans serif bold italic delta']);
  this.executeCharTest('𝞮', ['sans serif bold italic epsilon']);
  this.executeCharTest('𝞯', ['sans serif bold italic zeta']);
  this.executeCharTest('𝞰', ['sans serif bold italic eta']);
  this.executeCharTest('𝞱', ['sans serif bold italic theta']);
  this.executeCharTest('𝞲', ['sans serif bold italic iota']);
  this.executeCharTest('𝞳', ['sans serif bold italic kappa']);
  this.executeCharTest('𝞴', ['sans serif bold italic lamda']);
  this.executeCharTest('𝞵', ['sans serif bold italic mu']);
  this.executeCharTest('𝞶', ['sans serif bold italic nu']);
  this.executeCharTest('𝞷', ['sans serif bold italic xi']);
  this.executeCharTest('𝞸', ['sans serif bold italic omicron']);
  this.executeCharTest('𝞹', ['sans serif bold italic pi']);
  this.executeCharTest('𝞺', ['sans serif bold italic rho']);
  this.executeCharTest('𝞻', ['sans serif bold italic final sigma']);
  this.executeCharTest('𝞼', ['sans serif bold italic sigma']);
  this.executeCharTest('𝞽', ['sans serif bold italic tau']);
  this.executeCharTest('𝞾', ['sans serif bold italic upsilon']);
  this.executeCharTest('𝞿', ['sans serif bold italic phi']);
  this.executeCharTest('𝟀', ['sans serif bold italic chi']);
  this.executeCharTest('𝟁', ['sans serif bold italic psi']);
  this.executeCharTest('𝟂', ['sans serif bold italic omega']);
  this.executeCharTest('ℵ', ['alef']);
  this.executeCharTest('ℶ', ['bet']);
  this.executeCharTest('ℷ', ['gimel']);
  this.executeCharTest('ℸ', ['dalet']);
  this.executeCharTest('ǖ', ['u double overdot overbar']);
  this.executeCharTest('ǘ', ['u double overdot acute']);
  this.executeCharTest('ǚ', ['u double overdot caron']);
  this.executeCharTest('ǜ', ['u double overdot grave']);
  this.executeCharTest('ǟ', ['a double overdot overbar']);
  this.executeCharTest('ǡ', ['a overdot overbar']);
  this.executeCharTest('ǭ', ['o ogonek overbar']);
  this.executeCharTest('ǻ', ['a ring above acute']);
  this.executeCharTest('ȫ', ['o double overdot overbar']);
  this.executeCharTest('ȭ', ['o tilde overbar']);
  this.executeCharTest('ȱ', ['o overdot overbar']);
  this.executeCharTest('ḉ', ['c cedilla acute']);
  this.executeCharTest('ḕ', ['e overbar grave']);
  this.executeCharTest('ḗ', ['e overbar acute']);
  this.executeCharTest('ḝ', ['e cedilla breve']);
  this.executeCharTest('ḯ', ['i double overdot acute']);
  this.executeCharTest('ḹ', ['l underdot overbar']);
  this.executeCharTest('ṍ', ['o tilde acute']);
  this.executeCharTest('ṏ', ['o tilde double overdot']);
  this.executeCharTest('ṑ', ['o overbar grave']);
  this.executeCharTest('ṓ', ['o overbar acute']);
  this.executeCharTest('ṝ', ['r underdot overbar']);
  this.executeCharTest('ṥ', ['s acute overdot']);
  this.executeCharTest('ṧ', ['s caron overdot']);
  this.executeCharTest('ṩ', ['s underdot overdot']);
  this.executeCharTest('ṹ', ['u tilde acute']);
  this.executeCharTest('ṻ', ['u overbar double overdot']);
  this.executeCharTest('ấ', ['a hat acute']);
  this.executeCharTest('ầ', ['a hat grave']);
  this.executeCharTest('ẩ', ['a hat hook above']);
  this.executeCharTest('ẫ', ['a hat tilde']);
  this.executeCharTest('ậ', ['a hat underdot']);
  this.executeCharTest('ắ', ['a breve acute']);
  this.executeCharTest('ằ', ['a breve grave']);
  this.executeCharTest('ẳ', ['a breve hook above']);
  this.executeCharTest('ẵ', ['a breve tilde']);
  this.executeCharTest('ặ', ['a breve underdot']);
  this.executeCharTest('ế', ['e hat acute']);
  this.executeCharTest('ề', ['e hat grave']);
  this.executeCharTest('ể', ['e hat hook above']);
  this.executeCharTest('ễ', ['e hat tilde']);
  this.executeCharTest('ệ', ['e hat underdot']);
  this.executeCharTest('ố', ['o hat acute']);
  this.executeCharTest('ồ', ['o hat grave']);
  this.executeCharTest('ổ', ['o hat hook above']);
  this.executeCharTest('ỗ', ['o hat tilde']);
  this.executeCharTest('ộ', ['o hat underdot']);
  this.executeCharTest('ớ', ['o acute prime']);
  this.executeCharTest('ờ', ['o grave prime']);
  this.executeCharTest('ở', ['o hook above prime']);
  this.executeCharTest('ỡ', ['o tilde prime']);
  this.executeCharTest('ợ', ['o underdot prime']);
  this.executeCharTest('ứ', ['u acute prime']);
  this.executeCharTest('ừ', ['u grave prime']);
  this.executeCharTest('ử', ['u hook above prime']);
  this.executeCharTest('ữ', ['u tilde prime']);
  this.executeCharTest('ự', ['u underdot prime']);
  this.executeCharTest('a', ['a']);
  this.executeCharTest('b', ['b']);
  this.executeCharTest('c', ['c']);
  this.executeCharTest('d', ['d']);
  this.executeCharTest('e', ['e']);
  this.executeCharTest('f', ['f']);
  this.executeCharTest('g', ['g']);
  this.executeCharTest('h', ['h']);
  this.executeCharTest('i', ['i']);
  this.executeCharTest('j', ['j']);
  this.executeCharTest('k', ['k']);
  this.executeCharTest('l', ['l']);
  this.executeCharTest('m', ['m']);
  this.executeCharTest('n', ['n']);
  this.executeCharTest('o', ['o']);
  this.executeCharTest('p', ['p']);
  this.executeCharTest('q', ['q']);
  this.executeCharTest('r', ['r']);
  this.executeCharTest('s', ['s']);
  this.executeCharTest('t', ['t']);
  this.executeCharTest('u', ['u']);
  this.executeCharTest('v', ['v']);
  this.executeCharTest('w', ['w']);
  this.executeCharTest('x', ['x']);
  this.executeCharTest('y', ['y']);
  this.executeCharTest('z', ['z']);
  this.executeCharTest('ａ', ['a']);
  this.executeCharTest('ｂ', ['b']);
  this.executeCharTest('ｃ', ['c']);
  this.executeCharTest('ｄ', ['d']);
  this.executeCharTest('ｅ', ['e']);
  this.executeCharTest('ｆ', ['f']);
  this.executeCharTest('ｇ', ['g']);
  this.executeCharTest('ｈ', ['h']);
  this.executeCharTest('ｉ', ['i']);
  this.executeCharTest('ｊ', ['j']);
  this.executeCharTest('ｋ', ['k']);
  this.executeCharTest('ｌ', ['l']);
  this.executeCharTest('ｍ', ['m']);
  this.executeCharTest('ｎ', ['n']);
  this.executeCharTest('ｏ', ['o']);
  this.executeCharTest('ｐ', ['p']);
  this.executeCharTest('ｑ', ['q']);
  this.executeCharTest('ｒ', ['r']);
  this.executeCharTest('ｓ', ['s']);
  this.executeCharTest('ｔ', ['t']);
  this.executeCharTest('ｕ', ['u']);
  this.executeCharTest('ｖ', ['v']);
  this.executeCharTest('ｗ', ['w']);
  this.executeCharTest('ｘ', ['x']);
  this.executeCharTest('ｙ', ['y']);
  this.executeCharTest('ｚ', ['z']);
  this.executeCharTest('ø', ['o with stroke']);
  this.executeCharTest('đ', ['d with stroke']);
  this.executeCharTest('ħ', ['h with stroke']);
  this.executeCharTest('ł', ['l with stroke']);
  this.executeCharTest('ŧ', ['t with stroke']);
  this.executeCharTest('ƀ', ['b with stroke']);
  this.executeCharTest('ƛ', ['lambda with stroke']);
  this.executeCharTest('ƶ', ['z with stroke']);
  this.executeCharTest('ƾ', ['latin letter inverted glottal stop with stroke']);
  this.executeCharTest('ǥ', ['g with stroke']);
  this.executeCharTest('ǿ', ['o with stroke and acute']);
  this.executeCharTest('ȼ', ['c with stroke']);
  this.executeCharTest('ɇ', ['e with stroke']);
  this.executeCharTest('ɉ', ['j with stroke']);
  this.executeCharTest('ɍ', ['r with stroke']);
  this.executeCharTest('ɏ', ['y with stroke']);
  this.executeCharTest('ɟ', ['dotless j with stroke']);
  this.executeCharTest('ɨ', ['i with stroke']);
  this.executeCharTest('ʄ', ['dotless j with stroke and hook']);
  this.executeCharTest('ʡ', ['latin letter glottal stop with stroke']);
  this.executeCharTest('ʢ', ['latin letter reversed glottal stop with stroke']);
  this.executeCharTest('ᴓ', ['sideways o with stroke']);
  this.executeCharTest('ᵼ', ['iota with stroke']);
  this.executeCharTest('ᵽ', ['p with stroke']);
  this.executeCharTest('ᵿ', ['upsilon with stroke']);
  this.executeCharTest('ẜ', ['long s with diagonal stroke']);
  this.executeCharTest('ẝ', ['long s with high stroke']);
  this.executeCharTest('ƍ', ['turned delta']);
  this.executeCharTest('ẛ', ['long s with dot above']);
  this.executeCharTest('ẟ', ['delta']);
  this.executeCharTest('ĸ', ['kra']);
  this.executeCharTest('ſ', ['long s']);
  this.executeCharTest('ƃ', ['b with topbar']);
  this.executeCharTest('ƅ', ['tone six']);
  this.executeCharTest('ƈ', ['c with hook']);
  this.executeCharTest('ƌ', ['d with topbar']);
  this.executeCharTest('ƒ', ['f with hook']);
  this.executeCharTest('ƕ', ['hv']);
  this.executeCharTest('ƙ', ['k with hook']);
  this.executeCharTest('ƚ', ['l with bar']);
  this.executeCharTest('ƞ', ['n with long right leg']);
  this.executeCharTest('ơ', ['o with horn']);
  this.executeCharTest('ƣ', ['oi']);
  this.executeCharTest('ƥ', ['p with hook']);
  this.executeCharTest('ƨ', ['tone two']);
  this.executeCharTest('ƪ', ['latin letter reversed esh loop']);
  this.executeCharTest('ƫ', ['t with palatal hook']);
  this.executeCharTest('ƭ', ['t with hook']);
  this.executeCharTest('ư', ['u with horn']);
  this.executeCharTest('ƴ', ['y with hook']);
  this.executeCharTest('ƹ', ['ezh reversed']);
  this.executeCharTest('ƺ', ['ezh with tail']);
  this.executeCharTest('ƽ', ['tone five']);
  this.executeCharTest('ƿ', ['latin letter wynn']);
  this.executeCharTest('ǆ', ['dz with caron']);
  this.executeCharTest('ǉ', ['lj']);
  this.executeCharTest('ǌ', ['nj']);
  this.executeCharTest('ǣ', ['ae with macron']);
  this.executeCharTest('ǯ', ['ezh with caron']);
  this.executeCharTest('ǳ', ['dz']);
  this.executeCharTest('ȝ', ['yogh']);
  this.executeCharTest('ɮ', ['lezh']);
  this.executeCharTest('ʒ', ['ezh']);
  this.executeCharTest('ʓ', ['ezh with curl']);
  this.executeCharTest('ʤ', ['dezh digraph']);
  this.executeCharTest('ǝ', ['turned e']);
  this.executeCharTest('ǽ', ['ae with acute']);
  this.executeCharTest('ȡ', ['d with curl']);
  this.executeCharTest('ȣ', ['ou']);
  this.executeCharTest('ȥ', ['z with hook']);
  this.executeCharTest('ȴ', ['l with curl']);
  this.executeCharTest('ȵ', ['n with curl']);
  this.executeCharTest('ȶ', ['t with curl']);
  this.executeCharTest('ȸ', ['db digraph']);
  this.executeCharTest('ȹ', ['qp digraph']);
  this.executeCharTest('ȿ', ['s with swash tail']);
  this.executeCharTest('ɀ', ['z with swash tail']);
  this.executeCharTest('ɂ', ['glottal stop']);
  this.executeCharTest('ɋ', ['q with hook tail']);
  this.executeCharTest('ɐ', ['turned a']);
  this.executeCharTest('ɑ', ['alpha']);
  this.executeCharTest('ɒ', ['turned alpha']);
  this.executeCharTest('ɓ', ['b with hook']);
  this.executeCharTest('ɔ', ['open o']);
  this.executeCharTest('ɕ', ['c with curl']);
  this.executeCharTest('ɖ', ['d with tail']);
  this.executeCharTest('ɗ', ['d with hook']);
  this.executeCharTest('ɘ', ['reversed e']);
  this.executeCharTest('ə', ['schwa']);
  this.executeCharTest('ɚ', ['schwa with hook']);
  this.executeCharTest('ɛ', ['open e']);
  this.executeCharTest('ɜ', ['reversed open e']);
  this.executeCharTest('ɝ', ['reversed open e with hook']);
  this.executeCharTest('ɞ', ['closed reversed open e']);
  this.executeCharTest('ɠ', ['g with hook']);
  this.executeCharTest('ɡ', ['script g']);
  this.executeCharTest('ɣ', ['gamma']);
  this.executeCharTest('ɤ', ['rams horn']);
  this.executeCharTest('ɥ', ['turned h']);
  this.executeCharTest('ɦ', ['h with hook']);
  this.executeCharTest('ɧ', ['heng with hook']);
  this.executeCharTest('ɩ', ['iota']);
  this.executeCharTest('ɫ', ['l with middle tilde']);
  this.executeCharTest('ɬ', ['l with belt']);
  this.executeCharTest('ɭ', ['l with retroflex hook']);
  this.executeCharTest('ɯ', ['turned m']);
  this.executeCharTest('ɰ', ['turned m with long leg']);
  this.executeCharTest('ɱ', ['m with hook']);
  this.executeCharTest('ɲ', ['n with left hook']);
  this.executeCharTest('ɳ', ['n with retroflex hook']);
  this.executeCharTest('ɵ', ['barred o']);
  this.executeCharTest('ɷ', ['closed omega']);
  this.executeCharTest('ɸ', ['phi']);
  this.executeCharTest('ɹ', ['turned r']);
  this.executeCharTest('ɺ', ['turned r with long leg']);
  this.executeCharTest('ɻ', ['turned r with hook']);
  this.executeCharTest('ɼ', ['r with long leg']);
  this.executeCharTest('ɽ', ['r with tail']);
  this.executeCharTest('ɾ', ['r with fishhook']);
  this.executeCharTest('ɿ', ['reversed r with fishhook']);
  this.executeCharTest('ʂ', ['s with hook']);
  this.executeCharTest('ʃ', ['esh']);
  this.executeCharTest('ʅ', ['squat reversed esh']);
  this.executeCharTest('ʆ', ['esh with curl']);
  this.executeCharTest('ʇ', ['turned t']);
  this.executeCharTest('ʈ', ['t with retroflex hook']);
  this.executeCharTest('ʉ', ['u bar']);
  this.executeCharTest('ʊ', ['upsilon']);
  this.executeCharTest('ʋ', ['v with hook']);
  this.executeCharTest('ʌ', ['turned v']);
  this.executeCharTest('ʍ', ['turned w']);
  this.executeCharTest('ʎ', ['turned y']);
  this.executeCharTest('ʐ', ['z with retroflex hook']);
  this.executeCharTest('ʑ', ['z with curl']);
  this.executeCharTest('ʕ', ['latin letter pharyngeal voiced fricative']);
  this.executeCharTest('ʖ', ['latin letter inverted glottal stop']);
  this.executeCharTest('ʗ', ['latin letter stretched c']);
  this.executeCharTest('ʘ', ['latin letter bilabial click']);
  this.executeCharTest('ʚ', ['closed open e']);
  this.executeCharTest('ʞ', ['turned k']);
  this.executeCharTest('ʠ', ['q with hook']);
  this.executeCharTest('ʣ', ['dz digraph']);
  this.executeCharTest('ʥ', ['dz digraph with curl']);
  this.executeCharTest('ʦ', ['ts digraph']);
  this.executeCharTest('ʧ', ['tesh digraph']);
  this.executeCharTest('ʨ', ['tc digraph with curl']);
  this.executeCharTest('ʩ', ['feng digraph']);
  this.executeCharTest('ʪ', ['ls digraph']);
  this.executeCharTest('ʫ', ['lz digraph']);
  this.executeCharTest('ʬ', ['latin letter bilabial percussive']);
  this.executeCharTest('ʭ', ['latin letter bidental percussive']);
  this.executeCharTest('ʮ', ['turned h with fishhook']);
  this.executeCharTest('ʯ', ['turned h with fishhook and tail']);
  this.executeCharTest('ᴂ', ['turned ae']);
  this.executeCharTest('ᴈ', ['turned open e']);
  this.executeCharTest('ᴉ', ['turned i']);
  this.executeCharTest('ᴑ', ['sideways o']);
  this.executeCharTest('ᴒ', ['sideways open o']);
  this.executeCharTest('ᴔ', ['turned oe']);
  this.executeCharTest('ᴖ', ['top half o']);
  this.executeCharTest('ᴗ', ['bottom half o']);
  this.executeCharTest('ᴝ', ['sideways u']);
  this.executeCharTest('ᴞ', ['sideways diaeresized u']);
  this.executeCharTest('ᴟ', ['sideways turned m']);
  this.executeCharTest('ᴤ', ['latin letter voiced laryngeal spirant']);
  this.executeCharTest('ᴥ', ['latin letter ain']);
  this.executeCharTest('ᵫ', ['ue']);
  this.executeCharTest('ᵬ', ['b with middle tilde']);
  this.executeCharTest('ᵭ', ['d with middle tilde']);
  this.executeCharTest('ᵮ', ['f with middle tilde']);
  this.executeCharTest('ᵯ', ['m with middle tilde']);
  this.executeCharTest('ᵰ', ['n with middle tilde']);
  this.executeCharTest('ᵱ', ['p with middle tilde']);
  this.executeCharTest('ᵲ', ['r with middle tilde']);
  this.executeCharTest('ᵳ', ['r with fishhook and middle tilde']);
  this.executeCharTest('ᵴ', ['s with middle tilde']);
  this.executeCharTest('ᵵ', ['t with middle tilde']);
  this.executeCharTest('ᵶ', ['z with middle tilde']);
  this.executeCharTest('ᵷ', ['turned g']);
  this.executeCharTest('ᵹ', ['insular g']);
  this.executeCharTest('ᵺ', ['th with strikethrough']);
  this.executeCharTest('ᶀ', ['b with palatal hook']);
  this.executeCharTest('ᶁ', ['d with palatal hook']);
  this.executeCharTest('ᶂ', ['f with palatal hook']);
  this.executeCharTest('ᶃ', ['g with palatal hook']);
  this.executeCharTest('ᶄ', ['k with palatal hook']);
  this.executeCharTest('ᶅ', ['l with palatal hook']);
  this.executeCharTest('ᶆ', ['m with palatal hook']);
  this.executeCharTest('ᶇ', ['n with palatal hook']);
  this.executeCharTest('ᶈ', ['p with palatal hook']);
  this.executeCharTest('ᶉ', ['r with palatal hook']);
  this.executeCharTest('ᶊ', ['s with palatal hook']);
  this.executeCharTest('ᶋ', ['esh with palatal hook']);
  this.executeCharTest('ᶌ', ['v with palatal hook']);
  this.executeCharTest('ᶍ', ['x with palatal hook']);
  this.executeCharTest('ᶎ', ['z with palatal hook']);
  this.executeCharTest('ᶏ', ['a with retroflex hook']);
  this.executeCharTest('ᶐ', ['alpha with retroflex hook']);
  this.executeCharTest('ᶑ', ['d with hook and tail']);
  this.executeCharTest('ᶒ', ['e with retroflex hook']);
  this.executeCharTest('ᶓ', ['open e with retroflex hook']);
  this.executeCharTest('ᶔ', ['reversed open e with retroflex hook']);
  this.executeCharTest('ᶕ', ['schwa with retroflex hook']);
  this.executeCharTest('ᶖ', ['i with retroflex hook']);
  this.executeCharTest('ᶗ', ['open o with retroflex hook']);
  this.executeCharTest('ᶘ', ['esh with retroflex hook']);
  this.executeCharTest('ᶙ', ['u with retroflex hook']);
  this.executeCharTest('ᶚ', ['ezh with retroflex hook']);
  this.executeCharTest('ŉ', ['n preceded by apostrophe']);
  this.executeCharTest('ŋ', ['eng']);
  this.executeCharTest('à', ['modifying above a with grave']);
  this.executeCharTest('á', ['modifying above a with acute']);
  this.executeCharTest('â', ['modifying above a with caret']);
  this.executeCharTest('ã', ['a overtilde']);
  this.executeCharTest('ä', ['modifying above a with double dot']);
  this.executeCharTest('å', ['modifying above a with ring']);
  this.executeCharTest('ç', ['modifying above c with cedilla']);
  this.executeCharTest('è', ['modifying above e with grave']);
  this.executeCharTest('é', ['modifying above e with acute']);
  this.executeCharTest('ê', ['modifying above e with caret']);
  this.executeCharTest('ë', ['modifying above e with double dot']);
  this.executeCharTest('ì', ['modifying above i with grave']);
  this.executeCharTest('í', ['modifying above i with acute']);
  this.executeCharTest('î', ['modifying above i with caret']);
  this.executeCharTest('ï', ['modifying above i with double dot']);
  this.executeCharTest('ñ', ['n overtilde']);
  this.executeCharTest('ò', ['modifying above o with grave']);
  this.executeCharTest('ó', ['modifying above o with acute']);
  this.executeCharTest('ô', ['modifying above o with caret']);
  this.executeCharTest('õ', ['o overtilde']);
  this.executeCharTest('ö', ['modifying above o with double dot']);
  this.executeCharTest('ù', ['modifying above u with grave']);
  this.executeCharTest('ú', ['modifying above u with acute']);
  this.executeCharTest('û', ['modifying above u with caret']);
  this.executeCharTest('ü', ['modifying above u with double dot']);
  this.executeCharTest('ý', ['modifying above y with acute']);
  this.executeCharTest('ÿ', ['modifying above y with double dot']);
  this.executeCharTest('ā', ['a overbar']);
  this.executeCharTest('ă', ['modifying above a with breve']);
  this.executeCharTest('ą', ['modifying above a with ogonek']);
  this.executeCharTest('ć', ['modifying above c with acute']);
  this.executeCharTest('ĉ', ['modifying above c with caret']);
  this.executeCharTest('ċ', ['modifying above c with dot']);
  this.executeCharTest('č', ['modifying above c with caron']);
  this.executeCharTest('ď', ['modifying above d with caron']);
  this.executeCharTest('ē', ['e overbar']);
  this.executeCharTest('ĕ', ['modifying above e with breve']);
  this.executeCharTest('ė', ['modifying above e with dot']);
  this.executeCharTest('ę', ['modifying above e with ogonek']);
  this.executeCharTest('ě', ['modifying above e with caron']);
  this.executeCharTest('ĝ', ['modifying above g with caret']);
  this.executeCharTest('ğ', ['modifying above g with breve']);
  this.executeCharTest('ġ', ['modifying above g with dot']);
  this.executeCharTest('ģ', ['modifying above g with cedilla']);
  this.executeCharTest('ĥ', ['modifying above h with caret']);
  this.executeCharTest('ĩ', ['i overtilde']);
  this.executeCharTest('ī', ['i overbar']);
  this.executeCharTest('ĭ', ['modifying above i with breve']);
  this.executeCharTest('į', ['modifying above i with ogonek']);
  this.executeCharTest('ı', ['modifying above dotless i']);
  this.executeCharTest('ĵ', ['modifying above j with caret']);
  this.executeCharTest('ķ', ['modifying above k with cedilla']);
  this.executeCharTest('ĺ', ['modifying above l with acute']);
  this.executeCharTest('ļ', ['modifying above l with cedilla']);
  this.executeCharTest('ľ', ['modifying above l with caron']);
  this.executeCharTest('ŀ', ['modifying above l with middle dot']);
  this.executeCharTest('ń', ['modifying above n with acute']);
  this.executeCharTest('ņ', ['modifying above n with cedilla']);
  this.executeCharTest('ň', ['modifying above n with caron']);
  this.executeCharTest('ō', ['o overbar']);
  this.executeCharTest('ŏ', ['modifying above o with breve']);
  this.executeCharTest('ő', ['modifying above o with double acute']);
  this.executeCharTest('ŕ', ['modifying above r with acute']);
  this.executeCharTest('ŗ', ['modifying above r with cedilla']);
  this.executeCharTest('ř', ['modifying above r with caron']);
  this.executeCharTest('ś', ['modifying above s with acute']);
  this.executeCharTest('ŝ', ['modifying above s with caret']);
  this.executeCharTest('ş', ['modifying above s with cedilla']);
  this.executeCharTest('š', ['modifying above s with caron']);
  this.executeCharTest('ţ', ['modifying above t with cedilla']);
  this.executeCharTest('ť', ['modifying above t with caron']);
  this.executeCharTest('ũ', ['u overtilde']);
  this.executeCharTest('ū', ['u overbar']);
  this.executeCharTest('ŭ', ['modifying above u with breve']);
  this.executeCharTest('ů', ['modifying above u with ring']);
  this.executeCharTest('ű', ['modifying above u with double acute']);
  this.executeCharTest('ų', ['modifying above u with ogonek']);
  this.executeCharTest('ŵ', ['modifying above w with caret']);
  this.executeCharTest('ŷ', ['modifying above y with caret']);
  this.executeCharTest('ź', ['modifying above z with acute']);
  this.executeCharTest('ż', ['modifying above z with dot']);
  this.executeCharTest('ž', ['modifying above z with caron']);
  this.executeCharTest('ǎ', ['modifying above a with caron']);
  this.executeCharTest('ǐ', ['modifying above i with caron']);
  this.executeCharTest('ǒ', ['modifying above o with caron']);
  this.executeCharTest('ǔ', ['modifying above u with caron']);
  this.executeCharTest('ǧ', ['modifying above g with caron']);
  this.executeCharTest('ǩ', ['modifying above k with caron']);
  this.executeCharTest('ǫ', ['modifying above o with ogonek']);
  this.executeCharTest('ǰ', ['modifying above j with caron']);
  this.executeCharTest('ǵ', ['modifying above g with acute']);
  this.executeCharTest('ǹ', ['modifying above n with grave']);
  this.executeCharTest('ȁ', ['modifying above a with double grave']);
  this.executeCharTest('ȃ', ['modifying above a with inverted breve']);
  this.executeCharTest('ȅ', ['modifying above e with double grave']);
  this.executeCharTest('ȇ', ['modifying above e with inverted breve']);
  this.executeCharTest('ȉ', ['modifying above i with double grave']);
  this.executeCharTest('ȋ', ['modifying above i with inverted breve']);
  this.executeCharTest('ȍ', ['modifying above o with double grave']);
  this.executeCharTest('ȏ', ['modifying above o with inverted breve']);
  this.executeCharTest('ȑ', ['modifying above r with double grave']);
  this.executeCharTest('ȓ', ['modifying above r with inverted breve']);
  this.executeCharTest('ȕ', ['modifying above u with double grave']);
  this.executeCharTest('ȗ', ['modifying above u with inverted breve']);
  this.executeCharTest('ș', ['modifying below s with comma below']);
  this.executeCharTest('ț', ['modifying below t with comma below']);
  this.executeCharTest('ȟ', ['modifying above h with caron']);
  this.executeCharTest('ȧ', ['modifying above a with dot']);
  this.executeCharTest('ȩ', ['modifying above e with cedilla']);
  this.executeCharTest('ȯ', ['modifying above o with dot']);
  this.executeCharTest('ȳ', ['y overbar']);
  this.executeCharTest('ȷ', ['modifying above dotless j']);
  this.executeCharTest('ḁ', ['modifying below a with ring below']);
  this.executeCharTest('ḃ', ['modifying above b with dot']);
  this.executeCharTest('ḅ', ['modifying below b with dot']);
  this.executeCharTest('ḇ', ['b underbar']);
  this.executeCharTest('ḋ', ['modifying above d with dot']);
  this.executeCharTest('ḍ', ['modifying below d with dot']);
  this.executeCharTest('ḏ', ['d underbar']);
  this.executeCharTest('ḑ', ['modifying above d with cedilla']);
  this.executeCharTest('ḓ', ['modifying below d with caret']);
  this.executeCharTest('ḙ', ['modifying below e with caret']);
  this.executeCharTest('ḛ', ['e undertilde']);
  this.executeCharTest('ḟ', ['modifying above f with dot']);
  this.executeCharTest('ḡ', ['g overbar']);
  this.executeCharTest('ḣ', ['modifying above h with dot']);
  this.executeCharTest('ḥ', ['modifying below h with dot']);
  this.executeCharTest('ḧ', ['modifying above h with double dot']);
  this.executeCharTest('ḩ', ['modifying above h with cedilla']);
  this.executeCharTest('ḫ', ['modifying below h with breve below']);
  this.executeCharTest('ḭ', ['i undertilde']);
  this.executeCharTest('ḱ', ['modifying above k with acute']);
  this.executeCharTest('ḳ', ['modifying below k with dot']);
  this.executeCharTest('ḵ', ['k underbar']);
  this.executeCharTest('ḷ', ['modifying below l with dot']);
  this.executeCharTest('ḻ', ['l underbar']);
  this.executeCharTest('ḽ', ['modifying below l with caret']);
  this.executeCharTest('ḿ', ['modifying above m with acute']);
  this.executeCharTest('ṁ', ['modifying above m with dot']);
  this.executeCharTest('ṃ', ['modifying below m with dot']);
  this.executeCharTest('ṅ', ['modifying above n with dot']);
  this.executeCharTest('ṇ', ['modifying below n with dot']);
  this.executeCharTest('ṉ', ['n underbar']);
  this.executeCharTest('ṋ', ['modifying below n with caret']);
  this.executeCharTest('ṕ', ['modifying above p with acute']);
  this.executeCharTest('ṗ', ['modifying above p with dot']);
  this.executeCharTest('ṙ', ['modifying above r with dot']);
  this.executeCharTest('ṛ', ['modifying below r with dot']);
  this.executeCharTest('ṟ', ['r underbar']);
  this.executeCharTest('ṡ', ['modifying above s with dot']);
  this.executeCharTest('ṣ', ['modifying below s with dot']);
  this.executeCharTest('ṫ', ['modifying above t with dot']);
  this.executeCharTest('ṭ', ['modifying below t with dot']);
  this.executeCharTest('ṯ', ['t underbar']);
  this.executeCharTest('ṱ', ['modifying below t with caret']);
  this.executeCharTest('ṳ', ['modifying below u with double dot']);
  this.executeCharTest('ṵ', ['u undertilde']);
  this.executeCharTest('ṷ', ['modifying below u with caret']);
  this.executeCharTest('ṽ', ['v overtilde']);
  this.executeCharTest('ṿ', ['modifying below v with dot']);
  this.executeCharTest('ẁ', ['modifying above w with grave']);
  this.executeCharTest('ẃ', ['modifying above w with acute']);
  this.executeCharTest('ẅ', ['modifying above w with double dot']);
  this.executeCharTest('ẇ', ['modifying above w with dot']);
  this.executeCharTest('ẉ', ['modifying below w with dot']);
  this.executeCharTest('ẋ', ['modifying above x with dot']);
  this.executeCharTest('ẍ', ['modifying above x with double dot']);
  this.executeCharTest('ẏ', ['modifying above y with dot']);
  this.executeCharTest('ẑ', ['modifying above z with caret']);
  this.executeCharTest('ẓ', ['modifying below z with dot']);
  this.executeCharTest('ẕ', ['z underbar']);
  this.executeCharTest('ẖ', ['h underbar']);
  this.executeCharTest('ẗ', ['modifying above t with double dot']);
  this.executeCharTest('ẘ', ['modifying above w with ring']);
  this.executeCharTest('ẙ', ['modifying above y with ring']);
  this.executeCharTest('ẚ', ['modifying above a with right half ring']);
  this.executeCharTest('ạ', ['modifying below a with dot']);
  this.executeCharTest('ả', ['modifying above a with hook']);
  this.executeCharTest('ẹ', ['modifying below e with dot']);
  this.executeCharTest('ẻ', ['modifying above e with hook']);
  this.executeCharTest('ẽ', ['e overtilde']);
  this.executeCharTest('ỉ', ['modifying above i with hook']);
  this.executeCharTest('ị', ['modifying below i with dot']);
  this.executeCharTest('ọ', ['modifying below o with dot']);
  this.executeCharTest('ỏ', ['modifying above o with hook']);
  this.executeCharTest('ụ', ['modifying below u with dot']);
  this.executeCharTest('ủ', ['modifying above u with hook']);
  this.executeCharTest('ỳ', ['modifying above y with grave']);
  this.executeCharTest('ỵ', ['modifying below y with dot']);
  this.executeCharTest('ỷ', ['modifying above y with hook']);
  this.executeCharTest('ỹ', ['y overtilde']);
  this.executeCharTest('ͣ', ['combining a']);
  this.executeCharTest('ͤ', ['combining e']);
  this.executeCharTest('ͥ', ['combining i']);
  this.executeCharTest('ͦ', ['combining o']);
  this.executeCharTest('ͧ', ['combining u']);
  this.executeCharTest('ͨ', ['combining c']);
  this.executeCharTest('ͩ', ['combining d']);
  this.executeCharTest('ͪ', ['combining h']);
  this.executeCharTest('ͫ', ['combining m']);
  this.executeCharTest('ͬ', ['combining r']);
  this.executeCharTest('ͭ', ['combining t']);
  this.executeCharTest('ͮ', ['combining v']);
  this.executeCharTest('ͯ', ['combining x']);
  this.executeCharTest('ᵢ', ['subscript i']);
  this.executeCharTest('ᵣ', ['subscript r']);
  this.executeCharTest('ᵤ', ['subscript u']);
  this.executeCharTest('ᵥ', ['subscript v']);
  this.executeCharTest('᷊', ['combining r below']);
  this.executeCharTest('ᷓ', ['combining flattened open a above']);
  this.executeCharTest('ᷔ', ['combining ae']);
  this.executeCharTest('ᷕ', ['combining ao']);
  this.executeCharTest('ᷖ', ['combining av']);
  this.executeCharTest('ᷗ', ['combining c cedilla']);
  this.executeCharTest('ᷘ', ['combining insular d']);
  this.executeCharTest('ᷙ', ['combining eth']);
  this.executeCharTest('ᷚ', ['combining g']);
  this.executeCharTest('ᷛ', ['combining small upper G']);
  this.executeCharTest('ᷜ', ['combining k']);
  this.executeCharTest('ᷝ', ['combining l']);
  this.executeCharTest('ᷞ', ['combining small upper L']);
  this.executeCharTest('ᷟ', ['combining small upper M']);
  this.executeCharTest('ᷠ', ['combining n']);
  this.executeCharTest('ᷡ', ['combining small upper N']);
  this.executeCharTest('ᷢ', ['combining small upper R']);
  this.executeCharTest('ᷣ', ['combining r rotunda']);
  this.executeCharTest('ᷤ', ['combining s']);
  this.executeCharTest('ᷥ', ['combining long s']);
  this.executeCharTest('ᷦ', ['combining z']);
  this.executeCharTest('ⁱ', ['superscript i']);
  this.executeCharTest('ⁿ', ['superscript n']);
  this.executeCharTest('ₐ', ['subscript a']);
  this.executeCharTest('ₑ', ['subscript e']);
  this.executeCharTest('ₒ', ['subscript o']);
  this.executeCharTest('ₓ', ['subscript x']);
  this.executeCharTest('ₔ', ['subscript schwa']);
  this.executeCharTest('ₕ', ['subscript h']);
  this.executeCharTest('ₖ', ['subscript k']);
  this.executeCharTest('ₗ', ['subscript l']);
  this.executeCharTest('ₘ', ['subscript m']);
  this.executeCharTest('ₙ', ['subscript n']);
  this.executeCharTest('ₚ', ['subscript p']);
  this.executeCharTest('ₛ', ['subscript s']);
  this.executeCharTest('ₜ', ['subscript t']);
  this.executeCharTest('⒜', ['parenthesized a']);
  this.executeCharTest('⒝', ['parenthesized b']);
  this.executeCharTest('⒞', ['parenthesized c']);
  this.executeCharTest('⒟', ['parenthesized d']);
  this.executeCharTest('⒠', ['parenthesized e']);
  this.executeCharTest('⒡', ['parenthesized f']);
  this.executeCharTest('⒢', ['parenthesized g']);
  this.executeCharTest('⒣', ['parenthesized h']);
  this.executeCharTest('⒤', ['parenthesized i']);
  this.executeCharTest('⒥', ['parenthesized j']);
  this.executeCharTest('⒦', ['parenthesized k']);
  this.executeCharTest('⒧', ['parenthesized l']);
  this.executeCharTest('⒨', ['parenthesized m']);
  this.executeCharTest('⒩', ['parenthesized n']);
  this.executeCharTest('⒪', ['parenthesized o']);
  this.executeCharTest('⒫', ['parenthesized p']);
  this.executeCharTest('⒬', ['parenthesized q']);
  this.executeCharTest('⒭', ['parenthesized r']);
  this.executeCharTest('⒮', ['parenthesized s']);
  this.executeCharTest('⒯', ['parenthesized t']);
  this.executeCharTest('⒰', ['parenthesized u']);
  this.executeCharTest('⒱', ['parenthesized v']);
  this.executeCharTest('⒲', ['parenthesized w']);
  this.executeCharTest('⒳', ['parenthesized x']);
  this.executeCharTest('⒴', ['parenthesized y']);
  this.executeCharTest('⒵', ['parenthesized z']);
  this.executeCharTest('Ⓐ', ['circled upper A']);
  this.executeCharTest('Ⓑ', ['circled upper B']);
  this.executeCharTest('Ⓒ', ['circled upper C']);
  this.executeCharTest('Ⓓ', ['circled upper D']);
  this.executeCharTest('Ⓔ', ['circled upper E']);
  this.executeCharTest('Ⓕ', ['circled upper F']);
  this.executeCharTest('Ⓖ', ['circled upper G']);
  this.executeCharTest('Ⓗ', ['circled upper H']);
  this.executeCharTest('Ⓘ', ['circled upper I']);
  this.executeCharTest('Ⓙ', ['circled upper J']);
  this.executeCharTest('Ⓚ', ['circled upper K']);
  this.executeCharTest('Ⓛ', ['circled upper L']);
  this.executeCharTest('Ⓜ', ['circled upper M']);
  this.executeCharTest('Ⓝ', ['circled upper N']);
  this.executeCharTest('Ⓞ', ['circled upper O']);
  this.executeCharTest('Ⓟ', ['circled upper P']);
  this.executeCharTest('Ⓠ', ['circled upper Q']);
  this.executeCharTest('Ⓡ', ['circled upper R']);
  this.executeCharTest('Ⓢ', ['circled upper S']);
  this.executeCharTest('Ⓣ', ['circled upper T']);
  this.executeCharTest('Ⓤ', ['circled upper U']);
  this.executeCharTest('Ⓥ', ['circled upper V']);
  this.executeCharTest('Ⓦ', ['circled upper W']);
  this.executeCharTest('Ⓧ', ['circled upper X']);
  this.executeCharTest('Ⓨ', ['circled upper Y']);
  this.executeCharTest('Ⓩ', ['circled upper Z']);
  this.executeCharTest('ⓐ', ['circled a']);
  this.executeCharTest('ⓑ', ['circled b']);
  this.executeCharTest('ⓒ', ['circled c']);
  this.executeCharTest('ⓓ', ['circled d']);
  this.executeCharTest('ⓔ', ['circled e']);
  this.executeCharTest('ⓕ', ['circled f']);
  this.executeCharTest('ⓖ', ['circled g']);
  this.executeCharTest('ⓗ', ['circled h']);
  this.executeCharTest('ⓘ', ['circled i']);
  this.executeCharTest('ⓙ', ['circled j']);
  this.executeCharTest('ⓚ', ['circled k']);
  this.executeCharTest('ⓛ', ['circled l']);
  this.executeCharTest('ⓜ', ['circled m']);
  this.executeCharTest('ⓝ', ['circled n']);
  this.executeCharTest('ⓞ', ['circled o']);
  this.executeCharTest('ⓟ', ['circled p']);
  this.executeCharTest('ⓠ', ['circled q']);
  this.executeCharTest('ⓡ', ['circled r']);
  this.executeCharTest('ⓢ', ['circled s']);
  this.executeCharTest('ⓣ', ['circled t']);
  this.executeCharTest('ⓤ', ['circled u']);
  this.executeCharTest('ⓥ', ['circled v']);
  this.executeCharTest('ⓦ', ['circled w']);
  this.executeCharTest('ⓧ', ['circled x']);
  this.executeCharTest('ⓨ', ['circled y']);
  this.executeCharTest('ⓩ', ['circled z']);
  this.executeCharTest('ⱼ', ['subscript j']);
  this.executeCharTest('🄐', ['parenthesized upper A']);
  this.executeCharTest('🄑', ['parenthesized upper B']);
  this.executeCharTest('🄒', ['parenthesized upper C']);
  this.executeCharTest('🄓', ['parenthesized upper D']);
  this.executeCharTest('🄔', ['parenthesized upper E']);
  this.executeCharTest('🄕', ['parenthesized upper F']);
  this.executeCharTest('🄖', ['parenthesized upper G']);
  this.executeCharTest('🄗', ['parenthesized upper H']);
  this.executeCharTest('🄘', ['parenthesized upper I']);
  this.executeCharTest('🄙', ['parenthesized upper J']);
  this.executeCharTest('🄚', ['parenthesized upper K']);
  this.executeCharTest('🄛', ['parenthesized upper L']);
  this.executeCharTest('🄜', ['parenthesized upper M']);
  this.executeCharTest('🄝', ['parenthesized upper N']);
  this.executeCharTest('🄞', ['parenthesized upper O']);
  this.executeCharTest('🄟', ['parenthesized upper P']);
  this.executeCharTest('🄠', ['parenthesized upper Q']);
  this.executeCharTest('🄡', ['parenthesized upper R']);
  this.executeCharTest('🄢', ['parenthesized upper S']);
  this.executeCharTest('🄣', ['parenthesized upper T']);
  this.executeCharTest('🄤', ['parenthesized upper U']);
  this.executeCharTest('🄥', ['parenthesized upper V']);
  this.executeCharTest('🄦', ['parenthesized upper W']);
  this.executeCharTest('🄧', ['parenthesized upper X']);
  this.executeCharTest('🄨', ['parenthesized upper Y']);
  this.executeCharTest('🄩', ['parenthesized upper Z']);
  this.executeCharTest('🄪', ['tortoise shell bracketed upper S']);
  this.executeCharTest('🄫', ['circled italic upper C']);
  this.executeCharTest('🄬', ['circled italic upper R']);
  this.executeCharTest('🄰', ['squared upper A']);
  this.executeCharTest('🄱', ['squared upper B']);
  this.executeCharTest('🄲', ['squared upper C']);
  this.executeCharTest('🄳', ['squared upper D']);
  this.executeCharTest('🄴', ['squared upper E']);
  this.executeCharTest('🄵', ['squared upper F']);
  this.executeCharTest('🄶', ['squared upper G']);
  this.executeCharTest('🄷', ['squared upper H']);
  this.executeCharTest('🄸', ['squared upper I']);
  this.executeCharTest('🄹', ['squared upper J']);
  this.executeCharTest('🄺', ['squared upper K']);
  this.executeCharTest('🄻', ['squared upper L']);
  this.executeCharTest('🄼', ['squared upper M']);
  this.executeCharTest('🄽', ['squared upper N']);
  this.executeCharTest('🄾', ['squared upper O']);
  this.executeCharTest('🄿', ['squared upper P']);
  this.executeCharTest('🅀', ['squared upper Q']);
  this.executeCharTest('🅁', ['squared upper R']);
  this.executeCharTest('🅂', ['squared upper S']);
  this.executeCharTest('🅃', ['squared upper T']);
  this.executeCharTest('🅄', ['squared upper U']);
  this.executeCharTest('🅅', ['squared upper V']);
  this.executeCharTest('🅆', ['squared upper W']);
  this.executeCharTest('🅇', ['squared upper X']);
  this.executeCharTest('🅈', ['squared upper Y']);
  this.executeCharTest('🅉', ['squared upper Z']);
  this.executeCharTest('🅐', ['negative circled upper A']);
  this.executeCharTest('🅑', ['negative circled upper B']);
  this.executeCharTest('🅒', ['negative circled upper C']);
  this.executeCharTest('🅓', ['negative circled upper D']);
  this.executeCharTest('🅔', ['negative circled upper E']);
  this.executeCharTest('🅕', ['negative circled upper F']);
  this.executeCharTest('🅖', ['negative circled upper G']);
  this.executeCharTest('🅗', ['negative circled upper H']);
  this.executeCharTest('🅘', ['negative circled upper I']);
  this.executeCharTest('🅙', ['negative circled upper J']);
  this.executeCharTest('🅚', ['negative circled upper K']);
  this.executeCharTest('🅛', ['negative circled upper L']);
  this.executeCharTest('🅜', ['negative circled upper M']);
  this.executeCharTest('🅝', ['negative circled upper N']);
  this.executeCharTest('🅞', ['negative circled upper O']);
  this.executeCharTest('🅟', ['negative circled upper P']);
  this.executeCharTest('🅠', ['negative circled upper Q']);
  this.executeCharTest('🅡', ['negative circled upper R']);
  this.executeCharTest('🅢', ['negative circled upper S']);
  this.executeCharTest('🅣', ['negative circled upper T']);
  this.executeCharTest('🅤', ['negative circled upper U']);
  this.executeCharTest('🅥', ['negative circled upper V']);
  this.executeCharTest('🅦', ['negative circled upper W']);
  this.executeCharTest('🅧', ['negative circled upper X']);
  this.executeCharTest('🅨', ['negative circled upper Y']);
  this.executeCharTest('🅩', ['negative circled upper Z']);
  this.executeCharTest('🅰', ['negative squared upper A']);
  this.executeCharTest('🅱', ['negative squared upper B']);
  this.executeCharTest('🅲', ['negative squared upper C']);
  this.executeCharTest('🅳', ['negative squared upper D']);
  this.executeCharTest('🅴', ['negative squared upper E']);
  this.executeCharTest('🅵', ['negative squared upper F']);
  this.executeCharTest('🅶', ['negative squared upper G']);
  this.executeCharTest('🅷', ['negative squared upper H']);
  this.executeCharTest('🅸', ['negative squared upper I']);
  this.executeCharTest('🅹', ['negative squared upper J']);
  this.executeCharTest('🅺', ['negative squared upper K']);
  this.executeCharTest('🅻', ['negative squared upper L']);
  this.executeCharTest('🅼', ['negative squared upper M']);
  this.executeCharTest('🅽', ['negative squared upper N']);
  this.executeCharTest('🅾', ['negative squared upper O']);
  this.executeCharTest('🅿', ['negative squared upper P']);
  this.executeCharTest('🆀', ['negative squared upper Q']);
  this.executeCharTest('🆁', ['negative squared upper R']);
  this.executeCharTest('🆂', ['negative squared upper S']);
  this.executeCharTest('🆃', ['negative squared upper T']);
  this.executeCharTest('🆄', ['negative squared upper U']);
  this.executeCharTest('🆅', ['negative squared upper V']);
  this.executeCharTest('🆆', ['negative squared upper W']);
  this.executeCharTest('🆇', ['negative squared upper X']);
  this.executeCharTest('🆈', ['negative squared upper Y']);
  this.executeCharTest('🆉', ['negative squared upper Z']);
  this.executeCharTest('🆊', ['crossed negative squared upper P']);
  this.executeCharTest('Ǖ', ['upper U double overdot overbar']);
  this.executeCharTest('Ǘ', ['upper U double overdot acute']);
  this.executeCharTest('Ǚ', ['upper U double overdot caron']);
  this.executeCharTest('Ǜ', ['upper U double overdot grave']);
  this.executeCharTest('Ǟ', ['upper A double overdot overbar']);
  this.executeCharTest('Ǡ', ['upper A overdot overbar']);
  this.executeCharTest('Ǭ', ['upper O ogonek overbar']);
  this.executeCharTest('Ǻ', ['upper A ring acute']);
  this.executeCharTest('Ȫ', ['upper O double overdot overbar']);
  this.executeCharTest('Ȭ', ['upper O tilde overbar']);
  this.executeCharTest('Ȱ', ['upper O overdot overbar']);
  this.executeCharTest('Ḉ', ['upper C cedilla acute']);
  this.executeCharTest('Ḕ', ['upper E overbar grave']);
  this.executeCharTest('Ḗ', ['upper E overbar acute']);
  this.executeCharTest('Ḝ', ['upper E cedilla breve']);
  this.executeCharTest('Ḯ', ['upper I double overdot acute']);
  this.executeCharTest('Ḹ', ['upper L underdot overbar']);
  this.executeCharTest('Ṍ', ['upper O tilde acute']);
  this.executeCharTest('Ṏ', ['upper O tilde double overdot']);
  this.executeCharTest('Ṑ', ['upper O overbar grave']);
  this.executeCharTest('Ṓ', ['upper O overbar acute']);
  this.executeCharTest('Ṝ', ['upper R overbar underdot']);
  this.executeCharTest('Ṥ', ['upper S acute overdot']);
  this.executeCharTest('Ṧ', ['upper S caron overdot']);
  this.executeCharTest('Ṩ', ['upper S underdot overdot']);
  this.executeCharTest('Ṹ', ['upper U tilde acute']);
  this.executeCharTest('Ṻ', ['upper U overbar double overdot']);
  this.executeCharTest('Ấ', ['upper A hat acute']);
  this.executeCharTest('Ầ', ['upper A hat grave']);
  this.executeCharTest('Ẩ', ['upper A hat hook']);
  this.executeCharTest('Ẫ', ['upper A hat tilde']);
  this.executeCharTest('Ậ', ['upper A hat underdot']);
  this.executeCharTest('Ắ', ['upper A breve acute']);
  this.executeCharTest('Ằ', ['upper A breve grave']);
  this.executeCharTest('Ẳ', ['upper A breve hook']);
  this.executeCharTest('Ẵ', ['upper A breve tilde']);
  this.executeCharTest('Ặ', ['upper A breve underdot']);
  this.executeCharTest('Ế', ['upper E hat acute']);
  this.executeCharTest('Ề', ['upper E hat grave']);
  this.executeCharTest('Ể', ['upper E hat hook']);
  this.executeCharTest('Ễ', ['upper E hat tilde']);
  this.executeCharTest('Ệ', ['upper E hat underdot']);
  this.executeCharTest('Ố', ['upper O hat acute']);
  this.executeCharTest('Ồ', ['upper O hat grave']);
  this.executeCharTest('Ổ', ['upper O hat hook']);
  this.executeCharTest('Ỗ', ['upper O hat tilde']);
  this.executeCharTest('Ộ', ['upper O hat underdot']);
  this.executeCharTest('Ớ', ['upper O acute prime']);
  this.executeCharTest('Ờ', ['upper O grave prime']);
  this.executeCharTest('Ở', ['upper O hook prime']);
  this.executeCharTest('Ỡ', ['upper O tilde prime']);
  this.executeCharTest('Ợ', ['upper O underdot prime']);
  this.executeCharTest('Ứ', ['upper U acute prime']);
  this.executeCharTest('Ừ', ['upper U grave prime']);
  this.executeCharTest('Ử', ['upper U hook prime']);
  this.executeCharTest('Ữ', ['upper U tilde prime']);
  this.executeCharTest('Ự', ['upper U underdot prime']);
  this.executeCharTest('A', ['cap A']);
  this.executeCharTest('B', ['cap B']);
  this.executeCharTest('C', ['cap C']);
  this.executeCharTest('D', ['cap D']);
  this.executeCharTest('E', ['cap E']);
  this.executeCharTest('F', ['cap F']);
  this.executeCharTest('G', ['cap G']);
  this.executeCharTest('H', ['cap H']);
  this.executeCharTest('I', ['cap I']);
  this.executeCharTest('J', ['cap J']);
  this.executeCharTest('K', ['cap K']);
  this.executeCharTest('L', ['cap L']);
  this.executeCharTest('M', ['cap M']);
  this.executeCharTest('N', ['cap N']);
  this.executeCharTest('O', ['cap O']);
  this.executeCharTest('P', ['cap P']);
  this.executeCharTest('Q', ['cap Q']);
  this.executeCharTest('R', ['cap R']);
  this.executeCharTest('S', ['cap S']);
  this.executeCharTest('T', ['cap T']);
  this.executeCharTest('U', ['cap U']);
  this.executeCharTest('V', ['cap V']);
  this.executeCharTest('W', ['cap W']);
  this.executeCharTest('X', ['cap X']);
  this.executeCharTest('Y', ['cap Y']);
  this.executeCharTest('Z', ['cap Z']);
  this.executeCharTest('Ａ', ['cap A']);
  this.executeCharTest('Ｂ', ['cap B']);
  this.executeCharTest('Ｃ', ['cap C']);
  this.executeCharTest('Ｄ', ['cap D']);
  this.executeCharTest('Ｅ', ['cap E']);
  this.executeCharTest('Ｆ', ['cap F']);
  this.executeCharTest('Ｇ', ['cap G']);
  this.executeCharTest('Ｈ', ['cap H']);
  this.executeCharTest('Ｉ', ['cap I']);
  this.executeCharTest('Ｊ', ['cap J']);
  this.executeCharTest('Ｋ', ['cap K']);
  this.executeCharTest('Ｌ', ['cap L']);
  this.executeCharTest('Ｍ', ['cap M']);
  this.executeCharTest('Ｎ', ['cap N']);
  this.executeCharTest('Ｏ', ['cap O']);
  this.executeCharTest('Ｐ', ['cap P']);
  this.executeCharTest('Ｑ', ['cap Q']);
  this.executeCharTest('Ｒ', ['cap R']);
  this.executeCharTest('Ｓ', ['cap S']);
  this.executeCharTest('Ｔ', ['cap T']);
  this.executeCharTest('Ｕ', ['cap U']);
  this.executeCharTest('Ｖ', ['cap V']);
  this.executeCharTest('Ｗ', ['cap W']);
  this.executeCharTest('Ｘ', ['cap X']);
  this.executeCharTest('Ｙ', ['cap Y']);
  this.executeCharTest('Ｚ', ['cap Z']);
  this.executeCharTest('À', ['modifying above upper A with grave']);
  this.executeCharTest('Á', ['modifying above upper A with acute']);
  this.executeCharTest('Â', ['modifying above upper A with caret']);
  this.executeCharTest('Ã', ['upper A overtilde']);
  this.executeCharTest('Ä', ['modifying above upper A with double dot']);
  this.executeCharTest('Å', ['modifying above upper A with ring']);
  this.executeCharTest('Ç', ['modifying above upper C with cedilla']);
  this.executeCharTest('È', ['modifying above upper E with grave']);
  this.executeCharTest('É', ['modifying above upper E with acute']);
  this.executeCharTest('Ê', ['modifying above upper E with caret']);
  this.executeCharTest('Ë', ['modifying above upper E with double dot']);
  this.executeCharTest('Ì', ['modifying above upper I with grave']);
  this.executeCharTest('Í', ['modifying above upper I with acute']);
  this.executeCharTest('Î', ['modifying above upper I with caret']);
  this.executeCharTest('Ï', ['modifying above upper I with double dot']);
  this.executeCharTest('Ñ', ['upper N overtilde']);
  this.executeCharTest('Ò', ['modifying above upper O with grave']);
  this.executeCharTest('Ó', ['modifying above upper O with acute']);
  this.executeCharTest('Ô', ['modifying above upper O with caret']);
  this.executeCharTest('Õ', ['upper O overtilde']);
  this.executeCharTest('Ö', ['modifying above upper O with double dot']);
  this.executeCharTest('Ù', ['modifying above upper U with grave']);
  this.executeCharTest('Ú', ['modifying above upper U with acute']);
  this.executeCharTest('Û', ['modifying above upper U with caret']);
  this.executeCharTest('Ü', ['modifying above upper U with double dot']);
  this.executeCharTest('Ý', ['modifying above upper Y with acute']);
  this.executeCharTest('Ā', ['upper A overbar']);
  this.executeCharTest('Ă', ['modifying above upper A with breve']);
  this.executeCharTest('Ą', ['modifying above upper A with ogonek']);
  this.executeCharTest('Ć', ['modifying above upper C with acute']);
  this.executeCharTest('Ĉ', ['modifying above upper C with caret']);
  this.executeCharTest('Ċ', ['modifying above upper C with dot']);
  this.executeCharTest('Č', ['modifying above upper C with caron']);
  this.executeCharTest('Ď', ['modifying above upper D with caron']);
  this.executeCharTest('Ē', ['upper E overbar']);
  this.executeCharTest('Ĕ', ['modifying above upper E with breve']);
  this.executeCharTest('Ė', ['modifying above upper E with dot']);
  this.executeCharTest('Ę', ['modifying above upper E with ogonek']);
  this.executeCharTest('Ě', ['modifying above upper E with caron']);
  this.executeCharTest('Ĝ', ['modifying above upper G with caret']);
  this.executeCharTest('Ğ', ['modifying above upper G with breve']);
  this.executeCharTest('Ġ', ['modifying above upper G with dot']);
  this.executeCharTest('Ģ', ['modifying above upper G with cedilla']);
  this.executeCharTest('Ĥ', ['modifying above upper H with caret']);
  this.executeCharTest('Ĩ', ['upper I overtilde']);
  this.executeCharTest('Ī', ['upper I overbar']);
  this.executeCharTest('Ĭ', ['modifying above upper I with breve']);
  this.executeCharTest('Į', ['modifying above upper I with ogonek']);
  this.executeCharTest('İ', ['modifying above upper I with dot']);
  this.executeCharTest('Ĵ', ['modifying above upper J with caret']);
  this.executeCharTest('Ķ', ['modifying above upper K with cedilla']);
  this.executeCharTest('Ĺ', ['modifying above upper L with acute']);
  this.executeCharTest('Ļ', ['modifying above upper L with cedilla']);
  this.executeCharTest('Ľ', ['modifying above upper L with caron']);
  this.executeCharTest('Ŀ', ['modifying above upper L with middle dot']);
  this.executeCharTest('Ń', ['modifying above upper N with acute']);
  this.executeCharTest('Ņ', ['modifying above upper N with cedilla']);
  this.executeCharTest('Ň', ['modifying above upper N with caron']);
  this.executeCharTest('Ō', ['upper O overbar']);
  this.executeCharTest('Ŏ', ['modifying above upper O with breve']);
  this.executeCharTest('Ő', ['modifying above upper O with double acute']);
  this.executeCharTest('Ŕ', ['modifying above upper R with acute']);
  this.executeCharTest('Ŗ', ['modifying above upper R with cedilla']);
  this.executeCharTest('Ř', ['modifying above upper R with caron']);
  this.executeCharTest('Ś', ['modifying above upper S with acute']);
  this.executeCharTest('Ŝ', ['modifying above upper S with caret']);
  this.executeCharTest('Ş', ['modifying above upper S with cedilla']);
  this.executeCharTest('Š', ['modifying above upper S with caron']);
  this.executeCharTest('Ţ', ['modifying above upper T with cedilla']);
  this.executeCharTest('Ť', ['modifying above upper T with caron']);
  this.executeCharTest('Ũ', ['upper U overtilde']);
  this.executeCharTest('Ū', ['upper U overbar']);
  this.executeCharTest('Ŭ', ['modifying above upper U with breve']);
  this.executeCharTest('Ů', ['modifying above upper U with ring']);
  this.executeCharTest('Ű', ['modifying above upper U with double acute']);
  this.executeCharTest('Ų', ['modifying above upper U with ogonek']);
  this.executeCharTest('Ŵ', ['modifying above upper W with caret']);
  this.executeCharTest('Ŷ', ['modifying above upper Y with caret']);
  this.executeCharTest('Ÿ', ['modifying above upper Y with double dot']);
  this.executeCharTest('Ź', ['modifying above upper Z with acute']);
  this.executeCharTest('Ż', ['modifying above upper Z with dot']);
  this.executeCharTest('Ž', ['modifying above upper Z with caron']);
  this.executeCharTest('Ǎ', ['modifying above upper A with caron']);
  this.executeCharTest('Ǐ', ['modifying above upper I with caron']);
  this.executeCharTest('Ǒ', ['modifying above upper O with caron']);
  this.executeCharTest('Ǔ', ['modifying above upper U with caron']);
  this.executeCharTest('Ǧ', ['modifying above upper G with caron']);
  this.executeCharTest('Ǩ', ['modifying above upper K with caron']);
  this.executeCharTest('Ǫ', ['modifying above upper O with ogonek']);
  this.executeCharTest('Ǵ', ['modifying above upper G with acute']);
  this.executeCharTest('Ǹ', ['modifying above upper N with grave']);
  this.executeCharTest('Ȁ', ['modifying above upper A with double grave']);
  this.executeCharTest('Ȃ', ['modifying above upper A with inverted breve']);
  this.executeCharTest('Ȅ', ['modifying above upper E with double grave']);
  this.executeCharTest('Ȇ', ['modifying above upper E with inverted breve']);
  this.executeCharTest('Ȉ', ['modifying above upper I with double grave']);
  this.executeCharTest('Ȋ', ['modifying above upper I with inverted breve']);
  this.executeCharTest('Ȍ', ['modifying above upper O with double grave']);
  this.executeCharTest('Ȏ', ['modifying above upper O with inverted breve']);
  this.executeCharTest('Ȑ', ['modifying above upper R with double grave']);
  this.executeCharTest('Ȓ', ['modifying above upper R with inverted breve']);
  this.executeCharTest('Ȕ', ['modifying above upper U with double grave']);
  this.executeCharTest('Ȗ', ['modifying above upper U with inverted breve']);
  this.executeCharTest('Ș', ['modifying below upper S with comma below']);
  this.executeCharTest('Ț', ['modifying below upper T with comma below']);
  this.executeCharTest('Ȟ', ['modifying above upper H with caron']);
  this.executeCharTest('Ȧ', ['modifying above upper A with dot']);
  this.executeCharTest('Ȩ', ['modifying above upper E with cedilla']);
  this.executeCharTest('Ȯ', ['modifying above upper O with dot']);
  this.executeCharTest('Ȳ', ['upper Y overbar']);
  this.executeCharTest('Ḁ', ['modifying below upper A with ring below']);
  this.executeCharTest('Ḃ', ['modifying above upper B with dot']);
  this.executeCharTest('Ḅ', ['modifying below upper B with dot']);
  this.executeCharTest('Ḇ', ['upper B underbar']);
  this.executeCharTest('Ḋ', ['modifying above upper D with dot']);
  this.executeCharTest('Ḍ', ['modifying below upper D with dot']);
  this.executeCharTest('Ḏ', ['upper D underbar']);
  this.executeCharTest('Ḑ', ['modifying above upper D with cedilla']);
  this.executeCharTest('Ḓ', ['modifying below upper D with caret']);
  this.executeCharTest('Ḙ', ['modifying below upper E with caret']);
  this.executeCharTest('Ḛ', ['upper E undertilde']);
  this.executeCharTest('Ḟ', ['modifying above upper F with dot']);
  this.executeCharTest('Ḡ', ['upper G overbar']);
  this.executeCharTest('Ḣ', ['modifying above upper H with dot']);
  this.executeCharTest('Ḥ', ['modifying below upper H with dot']);
  this.executeCharTest('Ḧ', ['modifying above upper H with double dot']);
  this.executeCharTest('Ḩ', ['modifying above upper H with cedilla']);
  this.executeCharTest('Ḫ', ['modifying below upper H with breve below']);
  this.executeCharTest('Ḭ', ['upper I undertilde']);
  this.executeCharTest('Ḱ', ['modifying above upper K with acute']);
  this.executeCharTest('Ḳ', ['modifying below upper K with dot']);
  this.executeCharTest('Ḵ', ['upper K underbar']);
  this.executeCharTest('Ḷ', ['modifying below upper L with dot']);
  this.executeCharTest('Ḻ', ['upper L underbar']);
  this.executeCharTest('Ḽ', ['modifying below upper L with caret']);
  this.executeCharTest('Ḿ', ['modifying above upper M with acute']);
  this.executeCharTest('Ṁ', ['modifying above upper M with dot']);
  this.executeCharTest('Ṃ', ['modifying below upper M with dot']);
  this.executeCharTest('Ṅ', ['modifying above upper N with dot']);
  this.executeCharTest('Ṇ', ['modifying below upper N with dot']);
  this.executeCharTest('Ṉ', ['upper N underbar']);
  this.executeCharTest('Ṋ', ['modifying below upper N with caret']);
  this.executeCharTest('Ṕ', ['modifying above upper P with acute']);
  this.executeCharTest('Ṗ', ['modifying above upper P with dot']);
  this.executeCharTest('Ṙ', ['modifying above upper R with dot']);
  this.executeCharTest('Ṛ', ['modifying below upper R with dot']);
  this.executeCharTest('Ṟ', ['upper R underbar']);
  this.executeCharTest('Ṡ', ['modifying above upper S with dot']);
  this.executeCharTest('Ṣ', ['modifying below upper S with dot']);
  this.executeCharTest('Ṫ', ['modifying above upper T with dot']);
  this.executeCharTest('Ṭ', ['modifying below upper T with dot']);
  this.executeCharTest('Ṯ', ['upper T underbar']);
  this.executeCharTest('Ṱ', ['modifying below upper T with caret']);
  this.executeCharTest('Ṳ', ['modifying below upper U with double dot']);
  this.executeCharTest('Ṵ', ['upper U undertilde']);
  this.executeCharTest('Ṷ', ['modifying below upper U with caret']);
  this.executeCharTest('Ṽ', ['upper V overtilde']);
  this.executeCharTest('Ṿ', ['modifying below upper V with dot']);
  this.executeCharTest('Ẁ', ['modifying above upper W with grave']);
  this.executeCharTest('Ẃ', ['modifying above upper W with acute']);
  this.executeCharTest('Ẅ', ['modifying above upper W with double dot']);
  this.executeCharTest('Ẇ', ['modifying above upper W with dot']);
  this.executeCharTest('Ẉ', ['modifying below upper W with dot']);
  this.executeCharTest('Ẋ', ['modifying above upper X with dot']);
  this.executeCharTest('Ẍ', ['modifying above upper X with double dot']);
  this.executeCharTest('Ẏ', ['modifying above upper Y with dot']);
  this.executeCharTest('Ẑ', ['modifying above upper Z with circumflex']);
  this.executeCharTest('Ẓ', ['modifying below upper Z with dot']);
  this.executeCharTest('Ẕ', ['upper Z underbar']);
  this.executeCharTest('Ạ', ['modifying below upper A with dot']);
  this.executeCharTest('Ả', ['modifying above upper A with hook']);
  this.executeCharTest('Ẹ', ['modifying below upper E with dot']);
  this.executeCharTest('Ẻ', ['modifying above upper E with hook']);
  this.executeCharTest('Ẽ', ['upper E overtilde']);
  this.executeCharTest('Ỉ', ['modifying above upper I with hook']);
  this.executeCharTest('Ị', ['modifying below upper I with dot']);
  this.executeCharTest('Ọ', ['modifying below upper O with dot']);
  this.executeCharTest('Ỏ', ['modifying above upper O with hook']);
  this.executeCharTest('Ụ', ['modifying below upper U with dot']);
  this.executeCharTest('Ủ', ['modifying above upper U with hook']);
  this.executeCharTest('Ỳ', ['modifying above upper Y with grave']);
  this.executeCharTest('Ỵ', ['modifying below upper Y with dot']);
  this.executeCharTest('Ỷ', ['modifying above upper Y with hook']);
  this.executeCharTest('Ỹ', ['upper Y overtilde']);
  this.executeCharTest('𝕬', ['bold fraktur cap A']);
  this.executeCharTest('𝕭', ['bold fraktur cap B']);
  this.executeCharTest('𝕮', ['bold fraktur cap C']);
  this.executeCharTest('𝕯', ['bold fraktur cap D']);
  this.executeCharTest('𝕰', ['bold fraktur cap E']);
  this.executeCharTest('𝕱', ['bold fraktur cap F']);
  this.executeCharTest('𝕲', ['bold fraktur cap G']);
  this.executeCharTest('𝕳', ['bold fraktur cap H']);
  this.executeCharTest('𝕴', ['bold fraktur cap I']);
  this.executeCharTest('𝕵', ['bold fraktur cap J']);
  this.executeCharTest('𝕶', ['bold fraktur cap K']);
  this.executeCharTest('𝕷', ['bold fraktur cap L']);
  this.executeCharTest('𝕸', ['bold fraktur cap M']);
  this.executeCharTest('𝕹', ['bold fraktur cap N']);
  this.executeCharTest('𝕺', ['bold fraktur cap O']);
  this.executeCharTest('𝕻', ['bold fraktur cap P']);
  this.executeCharTest('𝕼', ['bold fraktur cap Q']);
  this.executeCharTest('𝕽', ['bold fraktur cap R']);
  this.executeCharTest('𝕾', ['bold fraktur cap S']);
  this.executeCharTest('𝕿', ['bold fraktur cap T']);
  this.executeCharTest('𝖀', ['bold fraktur cap U']);
  this.executeCharTest('𝖁', ['bold fraktur cap V']);
  this.executeCharTest('𝖂', ['bold fraktur cap W']);
  this.executeCharTest('𝖃', ['bold fraktur cap X']);
  this.executeCharTest('𝖄', ['bold fraktur cap Y']);
  this.executeCharTest('𝖅', ['bold fraktur cap Z']);
  this.executeCharTest('𝖆', ['bold fraktur a']);
  this.executeCharTest('𝖇', ['bold fraktur b']);
  this.executeCharTest('𝖈', ['bold fraktur c']);
  this.executeCharTest('𝖉', ['bold fraktur d']);
  this.executeCharTest('𝖊', ['bold fraktur e']);
  this.executeCharTest('𝖋', ['bold fraktur f']);
  this.executeCharTest('𝖌', ['bold fraktur g']);
  this.executeCharTest('𝖍', ['bold fraktur h']);
  this.executeCharTest('𝖎', ['bold fraktur i']);
  this.executeCharTest('𝖏', ['bold fraktur j']);
  this.executeCharTest('𝖐', ['bold fraktur k']);
  this.executeCharTest('𝖑', ['bold fraktur l']);
  this.executeCharTest('𝖒', ['bold fraktur m']);
  this.executeCharTest('𝖓', ['bold fraktur n']);
  this.executeCharTest('𝖔', ['bold fraktur o']);
  this.executeCharTest('𝖕', ['bold fraktur p']);
  this.executeCharTest('𝖖', ['bold fraktur q']);
  this.executeCharTest('𝖗', ['bold fraktur r']);
  this.executeCharTest('𝖘', ['bold fraktur s']);
  this.executeCharTest('𝖙', ['bold fraktur t']);
  this.executeCharTest('𝖚', ['bold fraktur u']);
  this.executeCharTest('𝖛', ['bold fraktur v']);
  this.executeCharTest('𝖜', ['bold fraktur w']);
  this.executeCharTest('𝖝', ['bold fraktur x']);
  this.executeCharTest('𝖞', ['bold fraktur y']);
  this.executeCharTest('𝖟', ['bold fraktur z']);
  this.executeCharTest('𝐀', ['bold cap A']);
  this.executeCharTest('𝐁', ['bold cap B']);
  this.executeCharTest('𝐂', ['bold cap C']);
  this.executeCharTest('𝐃', ['bold cap D']);
  this.executeCharTest('𝐄', ['bold cap E']);
  this.executeCharTest('𝐅', ['bold cap F']);
  this.executeCharTest('𝐆', ['bold cap G']);
  this.executeCharTest('𝐇', ['bold cap H']);
  this.executeCharTest('𝐈', ['bold cap I']);
  this.executeCharTest('𝐉', ['bold cap J']);
  this.executeCharTest('𝐊', ['bold cap K']);
  this.executeCharTest('𝐋', ['bold cap L']);
  this.executeCharTest('𝐌', ['bold cap M']);
  this.executeCharTest('𝐍', ['bold cap N']);
  this.executeCharTest('𝐎', ['bold cap O']);
  this.executeCharTest('𝐏', ['bold cap P']);
  this.executeCharTest('𝐐', ['bold cap Q']);
  this.executeCharTest('𝐑', ['bold cap R']);
  this.executeCharTest('𝐒', ['bold cap S']);
  this.executeCharTest('𝐓', ['bold cap T']);
  this.executeCharTest('𝐔', ['bold cap U']);
  this.executeCharTest('𝐕', ['bold cap V']);
  this.executeCharTest('𝐖', ['bold cap W']);
  this.executeCharTest('𝐗', ['bold cap X']);
  this.executeCharTest('𝐘', ['bold cap Y']);
  this.executeCharTest('𝐙', ['bold cap Z']);
  this.executeCharTest('𝐚', ['bold a']);
  this.executeCharTest('𝐛', ['bold b']);
  this.executeCharTest('𝐜', ['bold c']);
  this.executeCharTest('𝐝', ['bold d']);
  this.executeCharTest('𝐞', ['bold e']);
  this.executeCharTest('𝐟', ['bold f']);
  this.executeCharTest('𝐠', ['bold g']);
  this.executeCharTest('𝐡', ['bold h']);
  this.executeCharTest('𝐢', ['bold i']);
  this.executeCharTest('𝐣', ['bold j']);
  this.executeCharTest('𝐤', ['bold k']);
  this.executeCharTest('𝐥', ['bold l']);
  this.executeCharTest('𝐦', ['bold m']);
  this.executeCharTest('𝐧', ['bold n']);
  this.executeCharTest('𝐨', ['bold o']);
  this.executeCharTest('𝐩', ['bold p']);
  this.executeCharTest('𝐪', ['bold q']);
  this.executeCharTest('𝐫', ['bold r']);
  this.executeCharTest('𝐬', ['bold s']);
  this.executeCharTest('𝐭', ['bold t']);
  this.executeCharTest('𝐮', ['bold u']);
  this.executeCharTest('𝐯', ['bold v']);
  this.executeCharTest('𝐰', ['bold w']);
  this.executeCharTest('𝐱', ['bold x']);
  this.executeCharTest('𝐲', ['bold y']);
  this.executeCharTest('𝐳', ['bold z']);
  this.executeCharTest('𝑨', ['bold italic cap A']);
  this.executeCharTest('𝑩', ['bold italic cap B']);
  this.executeCharTest('𝑪', ['bold italic cap C']);
  this.executeCharTest('𝑫', ['bold italic cap D']);
  this.executeCharTest('𝑬', ['bold italic cap E']);
  this.executeCharTest('𝑭', ['bold italic cap F']);
  this.executeCharTest('𝑮', ['bold italic cap G']);
  this.executeCharTest('𝑯', ['bold italic cap H']);
  this.executeCharTest('𝑰', ['bold italic cap I']);
  this.executeCharTest('𝑱', ['bold italic cap J']);
  this.executeCharTest('𝑲', ['bold italic cap K']);
  this.executeCharTest('𝑳', ['bold italic cap L']);
  this.executeCharTest('𝑴', ['bold italic cap M']);
  this.executeCharTest('𝑵', ['bold italic cap N']);
  this.executeCharTest('𝑶', ['bold italic cap O']);
  this.executeCharTest('𝑷', ['bold italic cap P']);
  this.executeCharTest('𝑸', ['bold italic cap Q']);
  this.executeCharTest('𝑹', ['bold italic cap R']);
  this.executeCharTest('𝑺', ['bold italic cap S']);
  this.executeCharTest('𝑻', ['bold italic cap T']);
  this.executeCharTest('𝑼', ['bold italic cap U']);
  this.executeCharTest('𝑽', ['bold italic cap V']);
  this.executeCharTest('𝑾', ['bold italic cap W']);
  this.executeCharTest('𝑿', ['bold italic cap X']);
  this.executeCharTest('𝒀', ['bold italic cap Y']);
  this.executeCharTest('𝒁', ['bold italic cap Z']);
  this.executeCharTest('𝒂', ['bold italic a']);
  this.executeCharTest('𝒃', ['bold italic b']);
  this.executeCharTest('𝒄', ['bold italic c']);
  this.executeCharTest('𝒅', ['bold italic d']);
  this.executeCharTest('𝒆', ['bold italic e']);
  this.executeCharTest('𝒇', ['bold italic f']);
  this.executeCharTest('𝒈', ['bold italic g']);
  this.executeCharTest('𝒉', ['bold italic h']);
  this.executeCharTest('𝒊', ['bold italic i']);
  this.executeCharTest('𝒋', ['bold italic j']);
  this.executeCharTest('𝒌', ['bold italic k']);
  this.executeCharTest('𝒍', ['bold italic l']);
  this.executeCharTest('𝒎', ['bold italic m']);
  this.executeCharTest('𝒏', ['bold italic n']);
  this.executeCharTest('𝒐', ['bold italic o']);
  this.executeCharTest('𝒑', ['bold italic p']);
  this.executeCharTest('𝒒', ['bold italic q']);
  this.executeCharTest('𝒓', ['bold italic r']);
  this.executeCharTest('𝒔', ['bold italic s']);
  this.executeCharTest('𝒕', ['bold italic t']);
  this.executeCharTest('𝒖', ['bold italic u']);
  this.executeCharTest('𝒗', ['bold italic v']);
  this.executeCharTest('𝒘', ['bold italic w']);
  this.executeCharTest('𝒙', ['bold italic x']);
  this.executeCharTest('𝒚', ['bold italic y']);
  this.executeCharTest('𝒛', ['bold italic z']);
  this.executeCharTest('𝓐', ['bold script cap A']);
  this.executeCharTest('𝓑', ['bold script cap B']);
  this.executeCharTest('𝓒', ['bold script cap C']);
  this.executeCharTest('𝓓', ['bold script cap D']);
  this.executeCharTest('𝓔', ['bold script cap E']);
  this.executeCharTest('𝓕', ['bold script cap F']);
  this.executeCharTest('𝓖', ['bold script cap G']);
  this.executeCharTest('𝓗', ['bold script cap H']);
  this.executeCharTest('𝓘', ['bold script cap I']);
  this.executeCharTest('𝓙', ['bold script cap J']);
  this.executeCharTest('𝓚', ['bold script cap K']);
  this.executeCharTest('𝓛', ['bold script cap L']);
  this.executeCharTest('𝓜', ['bold script cap M']);
  this.executeCharTest('𝓝', ['bold script cap N']);
  this.executeCharTest('𝓞', ['bold script cap O']);
  this.executeCharTest('𝓟', ['bold script cap P']);
  this.executeCharTest('𝓠', ['bold script cap Q']);
  this.executeCharTest('𝓡', ['bold script cap R']);
  this.executeCharTest('𝓢', ['bold script cap S']);
  this.executeCharTest('𝓣', ['bold script cap T']);
  this.executeCharTest('𝓤', ['bold script cap U']);
  this.executeCharTest('𝓥', ['bold script cap V']);
  this.executeCharTest('𝓦', ['bold script cap W']);
  this.executeCharTest('𝓧', ['bold script cap X']);
  this.executeCharTest('𝓨', ['bold script cap Y']);
  this.executeCharTest('𝓩', ['bold script cap Z']);
  this.executeCharTest('𝓪', ['bold script a']);
  this.executeCharTest('𝓫', ['bold script b']);
  this.executeCharTest('𝓬', ['bold script c']);
  this.executeCharTest('𝓭', ['bold script d']);
  this.executeCharTest('𝓮', ['bold script e']);
  this.executeCharTest('𝓯', ['bold script f']);
  this.executeCharTest('𝓰', ['bold script g']);
  this.executeCharTest('𝓱', ['bold script h']);
  this.executeCharTest('𝓲', ['bold script i']);
  this.executeCharTest('𝓳', ['bold script j']);
  this.executeCharTest('𝓴', ['bold script k']);
  this.executeCharTest('𝓵', ['bold script l']);
  this.executeCharTest('𝓶', ['bold script m']);
  this.executeCharTest('𝓷', ['bold script n']);
  this.executeCharTest('𝓸', ['bold script o']);
  this.executeCharTest('𝓹', ['bold script p']);
  this.executeCharTest('𝓺', ['bold script q']);
  this.executeCharTest('𝓻', ['bold script r']);
  this.executeCharTest('𝓼', ['bold script s']);
  this.executeCharTest('𝓽', ['bold script t']);
  this.executeCharTest('𝓾', ['bold script u']);
  this.executeCharTest('𝓿', ['bold script v']);
  this.executeCharTest('𝔀', ['bold script w']);
  this.executeCharTest('𝔁', ['bold script x']);
  this.executeCharTest('𝔂', ['bold script y']);
  this.executeCharTest('𝔃', ['bold script z']);
  this.executeCharTest('𝔸', ['double struck cap A']);
  this.executeCharTest('𝔹', ['double struck cap B']);
  this.executeCharTest('ℂ', ['double struck cap C']);
  this.executeCharTest('𝔻', ['double struck cap D']);
  this.executeCharTest('𝔼', ['double struck cap E']);
  this.executeCharTest('𝔽', ['double struck cap F']);
  this.executeCharTest('𝔾', ['double struck cap G']);
  this.executeCharTest('ℍ', ['double struck cap H']);
  this.executeCharTest('𝕀', ['double struck cap I']);
  this.executeCharTest('𝕁', ['double struck cap J']);
  this.executeCharTest('𝕂', ['double struck cap K']);
  this.executeCharTest('𝕃', ['double struck cap L']);
  this.executeCharTest('𝕄', ['double struck cap M']);
  this.executeCharTest('ℕ', ['double struck cap N']);
  this.executeCharTest('𝕆', ['double struck cap O']);
  this.executeCharTest('ℙ', ['double struck cap P']);
  this.executeCharTest('ℚ', ['double struck cap Q']);
  this.executeCharTest('ℝ', ['double struck cap R']);
  this.executeCharTest('𝕊', ['double struck cap S']);
  this.executeCharTest('𝕋', ['double struck cap T']);
  this.executeCharTest('𝕌', ['double struck cap U']);
  this.executeCharTest('𝕍', ['double struck cap V']);
  this.executeCharTest('𝕎', ['double struck cap W']);
  this.executeCharTest('𝕏', ['double struck cap X']);
  this.executeCharTest('𝕐', ['double struck cap Y']);
  this.executeCharTest('ℤ', ['double struck cap Z']);
  this.executeCharTest('𝕒', ['double struck a']);
  this.executeCharTest('𝕓', ['double struck b']);
  this.executeCharTest('𝕔', ['double struck c']);
  this.executeCharTest('𝕕', ['double struck d']);
  this.executeCharTest('𝕖', ['double struck e']);
  this.executeCharTest('𝕗', ['double struck f']);
  this.executeCharTest('𝕘', ['double struck g']);
  this.executeCharTest('𝕙', ['double struck h']);
  this.executeCharTest('𝕚', ['double struck i']);
  this.executeCharTest('𝕛', ['double struck j']);
  this.executeCharTest('𝕜', ['double struck k']);
  this.executeCharTest('𝕝', ['double struck l']);
  this.executeCharTest('𝕞', ['double struck m']);
  this.executeCharTest('𝕟', ['double struck n']);
  this.executeCharTest('𝕠', ['double struck o']);
  this.executeCharTest('𝕡', ['double struck p']);
  this.executeCharTest('𝕢', ['double struck q']);
  this.executeCharTest('𝕣', ['double struck r']);
  this.executeCharTest('𝕤', ['double struck s']);
  this.executeCharTest('𝕥', ['double struck t']);
  this.executeCharTest('𝕦', ['double struck u']);
  this.executeCharTest('𝕧', ['double struck v']);
  this.executeCharTest('𝕨', ['double struck w']);
  this.executeCharTest('𝕩', ['double struck x']);
  this.executeCharTest('𝕪', ['double struck y']);
  this.executeCharTest('𝕫', ['double struck z']);
  this.executeCharTest('𝔄', ['fraktur cap A']);
  this.executeCharTest('𝔅', ['fraktur cap B']);
  this.executeCharTest('ℭ', ['fraktur cap C']);
  this.executeCharTest('𝔇', ['fraktur cap D']);
  this.executeCharTest('𝔈', ['fraktur cap E']);
  this.executeCharTest('𝔉', ['fraktur cap F']);
  this.executeCharTest('𝔊', ['fraktur cap G']);
  this.executeCharTest('ℌ', ['fraktur cap H']);
  this.executeCharTest('ℑ', ['fraktur cap I']);
  this.executeCharTest('𝔍', ['fraktur cap J']);
  this.executeCharTest('𝔎', ['fraktur cap K']);
  this.executeCharTest('𝔏', ['fraktur cap L']);
  this.executeCharTest('𝔐', ['fraktur cap M']);
  this.executeCharTest('𝔑', ['fraktur cap N']);
  this.executeCharTest('𝔒', ['fraktur cap O']);
  this.executeCharTest('𝔓', ['fraktur cap P']);
  this.executeCharTest('𝔔', ['fraktur cap Q']);
  this.executeCharTest('ℜ', ['fraktur cap R']);
  this.executeCharTest('𝔖', ['fraktur cap S']);
  this.executeCharTest('𝔗', ['fraktur cap T']);
  this.executeCharTest('𝔘', ['fraktur cap U']);
  this.executeCharTest('𝔙', ['fraktur cap V']);
  this.executeCharTest('𝔚', ['fraktur cap W']);
  this.executeCharTest('𝔛', ['fraktur cap X']);
  this.executeCharTest('𝔜', ['fraktur cap Y']);
  this.executeCharTest('ℨ', ['fraktur cap Z']);
  this.executeCharTest('𝔞', ['fraktur a']);
  this.executeCharTest('𝔟', ['fraktur b']);
  this.executeCharTest('𝔠', ['fraktur c']);
  this.executeCharTest('𝔡', ['fraktur d']);
  this.executeCharTest('𝔢', ['fraktur e']);
  this.executeCharTest('𝔣', ['fraktur f']);
  this.executeCharTest('𝔤', ['fraktur g']);
  this.executeCharTest('𝔥', ['fraktur h']);
  this.executeCharTest('𝔦', ['fraktur i']);
  this.executeCharTest('𝔧', ['fraktur j']);
  this.executeCharTest('𝔨', ['fraktur k']);
  this.executeCharTest('𝔩', ['fraktur l']);
  this.executeCharTest('𝔪', ['fraktur m']);
  this.executeCharTest('𝔫', ['fraktur n']);
  this.executeCharTest('𝔬', ['fraktur o']);
  this.executeCharTest('𝔭', ['fraktur p']);
  this.executeCharTest('𝔮', ['fraktur q']);
  this.executeCharTest('𝔯', ['fraktur r']);
  this.executeCharTest('𝔰', ['fraktur s']);
  this.executeCharTest('𝔱', ['fraktur t']);
  this.executeCharTest('𝔲', ['fraktur u']);
  this.executeCharTest('𝔳', ['fraktur v']);
  this.executeCharTest('𝔴', ['fraktur w']);
  this.executeCharTest('𝔵', ['fraktur x']);
  this.executeCharTest('𝔶', ['fraktur y']);
  this.executeCharTest('𝔷', ['fraktur z']);
  this.executeCharTest('𝐴', ['italic cap A']);
  this.executeCharTest('𝐵', ['italic cap B']);
  this.executeCharTest('𝐶', ['italic cap C']);
  this.executeCharTest('𝐷', ['italic cap D']);
  this.executeCharTest('𝐸', ['italic cap E']);
  this.executeCharTest('𝐹', ['italic cap F']);
  this.executeCharTest('𝐺', ['italic cap G']);
  this.executeCharTest('𝐻', ['italic cap H']);
  this.executeCharTest('𝐼', ['italic cap I']);
  this.executeCharTest('𝐽', ['italic cap J']);
  this.executeCharTest('𝐾', ['italic cap K']);
  this.executeCharTest('𝐿', ['italic cap L']);
  this.executeCharTest('𝑀', ['italic cap M']);
  this.executeCharTest('𝑁', ['italic cap N']);
  this.executeCharTest('𝑂', ['italic cap O']);
  this.executeCharTest('𝑃', ['italic cap P']);
  this.executeCharTest('𝑄', ['italic cap Q']);
  this.executeCharTest('𝑅', ['italic cap R']);
  this.executeCharTest('𝑆', ['italic cap S']);
  this.executeCharTest('𝑇', ['italic cap T']);
  this.executeCharTest('𝑈', ['italic cap U']);
  this.executeCharTest('𝑉', ['italic cap V']);
  this.executeCharTest('𝑊', ['italic cap W']);
  this.executeCharTest('𝑋', ['italic cap X']);
  this.executeCharTest('𝑌', ['italic cap Y']);
  this.executeCharTest('𝑍', ['italic cap Z']);
  this.executeCharTest('𝑎', ['italic a']);
  this.executeCharTest('𝑏', ['italic b']);
  this.executeCharTest('𝑐', ['italic c']);
  this.executeCharTest('𝑑', ['italic d']);
  this.executeCharTest('𝑒', ['italic e']);
  this.executeCharTest('𝑓', ['italic f']);
  this.executeCharTest('𝑔', ['italic g']);
  this.executeCharTest('ℎ', ['italic h']);
  this.executeCharTest('𝑖', ['italic i']);
  this.executeCharTest('𝑗', ['italic j']);
  this.executeCharTest('𝑘', ['italic k']);
  this.executeCharTest('𝑙', ['italic l']);
  this.executeCharTest('𝑚', ['italic m']);
  this.executeCharTest('𝑛', ['italic n']);
  this.executeCharTest('𝑜', ['italic o']);
  this.executeCharTest('𝑝', ['italic p']);
  this.executeCharTest('𝑞', ['italic q']);
  this.executeCharTest('𝑟', ['italic r']);
  this.executeCharTest('𝑠', ['italic s']);
  this.executeCharTest('𝑡', ['italic t']);
  this.executeCharTest('𝑢', ['italic u']);
  this.executeCharTest('𝑣', ['italic v']);
  this.executeCharTest('𝑤', ['italic w']);
  this.executeCharTest('𝑥', ['italic x']);
  this.executeCharTest('𝑦', ['italic y']);
  this.executeCharTest('𝑧', ['italic z']);
  this.executeCharTest('𝙰', ['monospace upper A']);
  this.executeCharTest('𝙱', ['monospace upper B']);
  this.executeCharTest('𝙲', ['monospace upper C']);
  this.executeCharTest('𝙳', ['monospace upper D']);
  this.executeCharTest('𝙴', ['monospace upper E']);
  this.executeCharTest('𝙵', ['monospace upper F']);
  this.executeCharTest('𝙶', ['monospace upper G']);
  this.executeCharTest('𝙷', ['monospace upper H']);
  this.executeCharTest('𝙸', ['monospace upper I']);
  this.executeCharTest('𝙹', ['monospace upper J']);
  this.executeCharTest('𝙺', ['monospace upper K']);
  this.executeCharTest('𝙻', ['monospace upper L']);
  this.executeCharTest('𝙼', ['monospace upper M']);
  this.executeCharTest('𝙽', ['monospace upper N']);
  this.executeCharTest('𝙾', ['monospace upper O']);
  this.executeCharTest('𝙿', ['monospace upper P']);
  this.executeCharTest('𝚀', ['monospace upper Q']);
  this.executeCharTest('𝚁', ['monospace upper R']);
  this.executeCharTest('𝚂', ['monospace upper S']);
  this.executeCharTest('𝚃', ['monospace upper T']);
  this.executeCharTest('𝚄', ['monospace upper U']);
  this.executeCharTest('𝚅', ['monospace upper V']);
  this.executeCharTest('𝚆', ['monospace upper W']);
  this.executeCharTest('𝚇', ['monospace upper X']);
  this.executeCharTest('𝚈', ['monospace upper Y']);
  this.executeCharTest('𝚉', ['monospace upper Z']);
  this.executeCharTest('𝚊', ['monospace a']);
  this.executeCharTest('𝚋', ['monospace b']);
  this.executeCharTest('𝚌', ['monospace c']);
  this.executeCharTest('𝚍', ['monospace d']);
  this.executeCharTest('𝚎', ['monospace e']);
  this.executeCharTest('𝚏', ['monospace f']);
  this.executeCharTest('𝚐', ['monospace g']);
  this.executeCharTest('𝚑', ['monospace h']);
  this.executeCharTest('𝚒', ['monospace i']);
  this.executeCharTest('𝚓', ['monospace j']);
  this.executeCharTest('𝚔', ['monospace k']);
  this.executeCharTest('𝚕', ['monospace l']);
  this.executeCharTest('𝚖', ['monospace m']);
  this.executeCharTest('𝚗', ['monospace n']);
  this.executeCharTest('𝚘', ['monospace o']);
  this.executeCharTest('𝚙', ['monospace p']);
  this.executeCharTest('𝚚', ['monospace q']);
  this.executeCharTest('𝚛', ['monospace r']);
  this.executeCharTest('𝚜', ['monospace s']);
  this.executeCharTest('𝚝', ['monospace t']);
  this.executeCharTest('𝚞', ['monospace u']);
  this.executeCharTest('𝚟', ['monospace v']);
  this.executeCharTest('𝚠', ['monospace w']);
  this.executeCharTest('𝚡', ['monospace x']);
  this.executeCharTest('𝚢', ['monospace y']);
  this.executeCharTest('𝚣', ['monospace z']);
  this.executeCharTest('𝗔', ['sans serif bold cap A']);
  this.executeCharTest('𝗕', ['sans serif bold cap B']);
  this.executeCharTest('𝗖', ['sans serif bold cap C']);
  this.executeCharTest('𝗗', ['sans serif bold cap D']);
  this.executeCharTest('𝗘', ['sans serif bold cap E']);
  this.executeCharTest('𝗙', ['sans serif bold cap F']);
  this.executeCharTest('𝗚', ['sans serif bold cap G']);
  this.executeCharTest('𝗛', ['sans serif bold cap H']);
  this.executeCharTest('𝗜', ['sans serif bold cap I']);
  this.executeCharTest('𝗝', ['sans serif bold cap J']);
  this.executeCharTest('𝗞', ['sans serif bold cap K']);
  this.executeCharTest('𝗟', ['sans serif bold cap L']);
  this.executeCharTest('𝗠', ['sans serif bold cap M']);
  this.executeCharTest('𝗡', ['sans serif bold cap N']);
  this.executeCharTest('𝗢', ['sans serif bold cap O']);
  this.executeCharTest('𝗣', ['sans serif bold cap P']);
  this.executeCharTest('𝗤', ['sans serif bold cap Q']);
  this.executeCharTest('𝗥', ['sans serif bold cap R']);
  this.executeCharTest('𝗦', ['sans serif bold cap S']);
  this.executeCharTest('𝗧', ['sans serif bold cap T']);
  this.executeCharTest('𝗨', ['sans serif bold cap U']);
  this.executeCharTest('𝗩', ['sans serif bold cap V']);
  this.executeCharTest('𝗪', ['sans serif bold cap W']);
  this.executeCharTest('𝗫', ['sans serif bold cap X']);
  this.executeCharTest('𝗬', ['sans serif bold cap Y']);
  this.executeCharTest('𝗭', ['sans serif bold cap Z']);
  this.executeCharTest('𝗮', ['sans serif bold a']);
  this.executeCharTest('𝗯', ['sans serif bold b']);
  this.executeCharTest('𝗰', ['sans serif bold c']);
  this.executeCharTest('𝗱', ['sans serif bold d']);
  this.executeCharTest('𝗲', ['sans serif bold e']);
  this.executeCharTest('𝗳', ['sans serif bold f']);
  this.executeCharTest('𝗴', ['sans serif bold g']);
  this.executeCharTest('𝗵', ['sans serif bold h']);
  this.executeCharTest('𝗶', ['sans serif bold i']);
  this.executeCharTest('𝗷', ['sans serif bold j']);
  this.executeCharTest('𝗸', ['sans serif bold k']);
  this.executeCharTest('𝗹', ['sans serif bold l']);
  this.executeCharTest('𝗺', ['sans serif bold m']);
  this.executeCharTest('𝗻', ['sans serif bold n']);
  this.executeCharTest('𝗼', ['sans serif bold o']);
  this.executeCharTest('𝗽', ['sans serif bold p']);
  this.executeCharTest('𝗾', ['sans serif bold q']);
  this.executeCharTest('𝗿', ['sans serif bold r']);
  this.executeCharTest('𝘀', ['sans serif bold s']);
  this.executeCharTest('𝘁', ['sans serif bold t']);
  this.executeCharTest('𝘂', ['sans serif bold u']);
  this.executeCharTest('𝘃', ['sans serif bold v']);
  this.executeCharTest('𝘄', ['sans serif bold w']);
  this.executeCharTest('𝘅', ['sans serif bold x']);
  this.executeCharTest('𝘆', ['sans serif bold y']);
  this.executeCharTest('𝘇', ['sans serif bold z']);
  this.executeCharTest('𝘈', ['sans serif italic cap A']);
  this.executeCharTest('𝘉', ['sans serif italic cap B']);
  this.executeCharTest('𝘊', ['sans serif italic cap C']);
  this.executeCharTest('𝘋', ['sans serif italic cap D']);
  this.executeCharTest('𝘌', ['sans serif italic cap E']);
  this.executeCharTest('𝘍', ['sans serif italic cap F']);
  this.executeCharTest('𝘎', ['sans serif italic cap G']);
  this.executeCharTest('𝘏', ['sans serif italic cap H']);
  this.executeCharTest('𝘐', ['sans serif italic cap I']);
  this.executeCharTest('𝘑', ['sans serif italic cap J']);
  this.executeCharTest('𝘒', ['sans serif italic cap K']);
  this.executeCharTest('𝘓', ['sans serif italic cap L']);
  this.executeCharTest('𝘔', ['sans serif italic cap M']);
  this.executeCharTest('𝘕', ['sans serif italic cap N']);
  this.executeCharTest('𝘖', ['sans serif italic cap O']);
  this.executeCharTest('𝘗', ['sans serif italic cap P']);
  this.executeCharTest('𝘘', ['sans serif italic cap Q']);
  this.executeCharTest('𝘙', ['sans serif italic cap R']);
  this.executeCharTest('𝘚', ['sans serif italic cap S']);
  this.executeCharTest('𝘛', ['sans serif italic cap T']);
  this.executeCharTest('𝘜', ['sans serif italic cap U']);
  this.executeCharTest('𝘝', ['sans serif italic cap V']);
  this.executeCharTest('𝘞', ['sans serif italic cap W']);
  this.executeCharTest('𝘟', ['sans serif italic cap X']);
  this.executeCharTest('𝘠', ['sans serif italic cap Y']);
  this.executeCharTest('𝘡', ['sans serif italic cap Z']);
  this.executeCharTest('𝘢', ['sans serif italic a']);
  this.executeCharTest('𝘣', ['sans serif italic b']);
  this.executeCharTest('𝘤', ['sans serif italic c']);
  this.executeCharTest('𝘥', ['sans serif italic d']);
  this.executeCharTest('𝘦', ['sans serif italic e']);
  this.executeCharTest('𝘧', ['sans serif italic f']);
  this.executeCharTest('𝘨', ['sans serif italic g']);
  this.executeCharTest('𝘩', ['sans serif italic h']);
  this.executeCharTest('𝘪', ['sans serif italic i']);
  this.executeCharTest('𝘫', ['sans serif italic j']);
  this.executeCharTest('𝘬', ['sans serif italic k']);
  this.executeCharTest('𝘭', ['sans serif italic l']);
  this.executeCharTest('𝘮', ['sans serif italic m']);
  this.executeCharTest('𝘯', ['sans serif italic n']);
  this.executeCharTest('𝘰', ['sans serif italic o']);
  this.executeCharTest('𝘱', ['sans serif italic p']);
  this.executeCharTest('𝘲', ['sans serif italic q']);
  this.executeCharTest('𝘳', ['sans serif italic r']);
  this.executeCharTest('𝘴', ['sans serif italic s']);
  this.executeCharTest('𝘵', ['sans serif italic t']);
  this.executeCharTest('𝘶', ['sans serif italic u']);
  this.executeCharTest('𝘷', ['sans serif italic v']);
  this.executeCharTest('𝘸', ['sans serif italic w']);
  this.executeCharTest('𝘹', ['sans serif italic x']);
  this.executeCharTest('𝘺', ['sans serif italic y']);
  this.executeCharTest('𝘻', ['sans serif italic z']);
  this.executeCharTest('𝘼', ['sans serif bold italic cap A']);
  this.executeCharTest('𝘽', ['sans serif bold italic cap B']);
  this.executeCharTest('𝘾', ['sans serif bold italic cap C']);
  this.executeCharTest('𝘿', ['sans serif bold italic cap D']);
  this.executeCharTest('𝙀', ['sans serif bold italic cap E']);
  this.executeCharTest('𝙁', ['sans serif bold italic cap F']);
  this.executeCharTest('𝙂', ['sans serif bold italic cap G']);
  this.executeCharTest('𝙃', ['sans serif bold italic cap H']);
  this.executeCharTest('𝙄', ['sans serif bold italic cap I']);
  this.executeCharTest('𝙅', ['sans serif bold italic cap J']);
  this.executeCharTest('𝙆', ['sans serif bold italic cap K']);
  this.executeCharTest('𝙇', ['sans serif bold italic cap L']);
  this.executeCharTest('𝙈', ['sans serif bold italic cap M']);
  this.executeCharTest('𝙉', ['sans serif bold italic cap N']);
  this.executeCharTest('𝙊', ['sans serif bold italic cap O']);
  this.executeCharTest('𝙋', ['sans serif bold italic cap P']);
  this.executeCharTest('𝙌', ['sans serif bold italic cap Q']);
  this.executeCharTest('𝙍', ['sans serif bold italic cap R']);
  this.executeCharTest('𝙎', ['sans serif bold italic cap S']);
  this.executeCharTest('𝙏', ['sans serif bold italic cap T']);
  this.executeCharTest('𝙐', ['sans serif bold italic cap U']);
  this.executeCharTest('𝙑', ['sans serif bold italic cap V']);
  this.executeCharTest('𝙒', ['sans serif bold italic cap W']);
  this.executeCharTest('𝙓', ['sans serif bold italic cap X']);
  this.executeCharTest('𝙔', ['sans serif bold italic cap Y']);
  this.executeCharTest('𝙕', ['sans serif bold italic cap Z']);
  this.executeCharTest('𝙖', ['sans serif bold italic a']);
  this.executeCharTest('𝙗', ['sans serif bold italic b']);
  this.executeCharTest('𝙘', ['sans serif bold italic c']);
  this.executeCharTest('𝙙', ['sans serif bold italic d']);
  this.executeCharTest('𝙚', ['sans serif bold italic e']);
  this.executeCharTest('𝙛', ['sans serif bold italic f']);
  this.executeCharTest('𝙜', ['sans serif bold italic g']);
  this.executeCharTest('𝙝', ['sans serif bold italic h']);
  this.executeCharTest('𝙞', ['sans serif bold italic i']);
  this.executeCharTest('𝙟', ['sans serif bold italic j']);
  this.executeCharTest('𝙠', ['sans serif bold italic k']);
  this.executeCharTest('𝙡', ['sans serif bold italic l']);
  this.executeCharTest('𝙢', ['sans serif bold italic m']);
  this.executeCharTest('𝙣', ['sans serif bold italic n']);
  this.executeCharTest('𝙤', ['sans serif bold italic o']);
  this.executeCharTest('𝙥', ['sans serif bold italic p']);
  this.executeCharTest('𝙦', ['sans serif bold italic q']);
  this.executeCharTest('𝙧', ['sans serif bold italic r']);
  this.executeCharTest('𝙨', ['sans serif bold italic s']);
  this.executeCharTest('𝙩', ['sans serif bold italic t']);
  this.executeCharTest('𝙪', ['sans serif bold italic u']);
  this.executeCharTest('𝙫', ['sans serif bold italic v']);
  this.executeCharTest('𝙬', ['sans serif bold italic w']);
  this.executeCharTest('𝙭', ['sans serif bold italic x']);
  this.executeCharTest('𝙮', ['sans serif bold italic y']);
  this.executeCharTest('𝙯', ['sans serif bold italic z']);
  this.executeCharTest('𝖠', ['sans serif cap A']);
  this.executeCharTest('𝖡', ['sans serif cap B']);
  this.executeCharTest('𝖢', ['sans serif cap C']);
  this.executeCharTest('𝖣', ['sans serif cap D']);
  this.executeCharTest('𝖤', ['sans serif cap E']);
  this.executeCharTest('𝖥', ['sans serif cap F']);
  this.executeCharTest('𝖦', ['sans serif cap G']);
  this.executeCharTest('𝖧', ['sans serif cap H']);
  this.executeCharTest('𝖨', ['sans serif cap I']);
  this.executeCharTest('𝖩', ['sans serif cap J']);
  this.executeCharTest('𝖪', ['sans serif cap K']);
  this.executeCharTest('𝖫', ['sans serif cap L']);
  this.executeCharTest('𝖬', ['sans serif cap M']);
  this.executeCharTest('𝖭', ['sans serif cap N']);
  this.executeCharTest('𝖮', ['sans serif cap O']);
  this.executeCharTest('𝖯', ['sans serif cap P']);
  this.executeCharTest('𝖰', ['sans serif cap Q']);
  this.executeCharTest('𝖱', ['sans serif cap R']);
  this.executeCharTest('𝖲', ['sans serif cap S']);
  this.executeCharTest('𝖳', ['sans serif cap T']);
  this.executeCharTest('𝖴', ['sans serif cap U']);
  this.executeCharTest('𝖵', ['sans serif cap V']);
  this.executeCharTest('𝖶', ['sans serif cap W']);
  this.executeCharTest('𝖷', ['sans serif cap X']);
  this.executeCharTest('𝖸', ['sans serif cap Y']);
  this.executeCharTest('𝖹', ['sans serif cap Z']);
  this.executeCharTest('𝖺', ['sans serif a']);
  this.executeCharTest('𝖻', ['sans serif b']);
  this.executeCharTest('𝖼', ['sans serif c']);
  this.executeCharTest('𝖽', ['sans serif d']);
  this.executeCharTest('𝖾', ['sans serif e']);
  this.executeCharTest('𝖿', ['sans serif f']);
  this.executeCharTest('𝗀', ['sans serif g']);
  this.executeCharTest('𝗁', ['sans serif h']);
  this.executeCharTest('𝗂', ['sans serif i']);
  this.executeCharTest('𝗃', ['sans serif j']);
  this.executeCharTest('𝗄', ['sans serif k']);
  this.executeCharTest('𝗅', ['sans serif l']);
  this.executeCharTest('𝗆', ['sans serif m']);
  this.executeCharTest('𝗇', ['sans serif n']);
  this.executeCharTest('𝗈', ['sans serif o']);
  this.executeCharTest('𝗉', ['sans serif p']);
  this.executeCharTest('𝗊', ['sans serif q']);
  this.executeCharTest('𝗋', ['sans serif r']);
  this.executeCharTest('𝗌', ['sans serif s']);
  this.executeCharTest('𝗍', ['sans serif t']);
  this.executeCharTest('𝗎', ['sans serif u']);
  this.executeCharTest('𝗏', ['sans serif v']);
  this.executeCharTest('𝗐', ['sans serif w']);
  this.executeCharTest('𝗑', ['sans serif x']);
  this.executeCharTest('𝗒', ['sans serif y']);
  this.executeCharTest('𝗓', ['sans serif z']);
  this.executeCharTest('𝒜', ['script cap A']);
  this.executeCharTest('ℬ', ['script cap B']);
  this.executeCharTest('𝒞', ['script cap C']);
  this.executeCharTest('𝒟', ['script cap D']);
  this.executeCharTest('ℰ', ['script cap E']);
  this.executeCharTest('ℱ', ['script cap F']);
  this.executeCharTest('𝒢', ['script cap G']);
  this.executeCharTest('ℋ', ['script cap H']);
  this.executeCharTest('ℐ', ['script cap I']);
  this.executeCharTest('𝒥', ['script cap J']);
  this.executeCharTest('𝒦', ['script cap K']);
  this.executeCharTest('ℒ', ['script cap L']);
  this.executeCharTest('ℳ', ['script cap M']);
  this.executeCharTest('𝒩', ['script cap N']);
  this.executeCharTest('𝒪', ['script cap O']);
  this.executeCharTest('𝒫', ['script cap P']);
  this.executeCharTest('𝒬', ['script cap Q']);
  this.executeCharTest('ℛ', ['script cap R']);
  this.executeCharTest('𝒮', ['script cap S']);
  this.executeCharTest('𝒯', ['script cap T']);
  this.executeCharTest('𝒰', ['script cap U']);
  this.executeCharTest('𝒱', ['script cap V']);
  this.executeCharTest('𝒲', ['script cap W']);
  this.executeCharTest('𝒳', ['script cap X']);
  this.executeCharTest('𝒴', ['script cap Y']);
  this.executeCharTest('𝒵', ['script cap Z']);
  this.executeCharTest('𝒶', ['script a']);
  this.executeCharTest('𝒷', ['script b']);
  this.executeCharTest('𝒸', ['script c']);
  this.executeCharTest('𝒹', ['script d']);
  this.executeCharTest('ℯ', ['script e']);
  this.executeCharTest('𝒻', ['script f']);
  this.executeCharTest('ℊ', ['script g']);
  this.executeCharTest('𝒽', ['script h']);
  this.executeCharTest('𝒾', ['script i']);
  this.executeCharTest('𝒿', ['script j']);
  this.executeCharTest('𝓀', ['script k']);
  this.executeCharTest('𝓁', ['script l']);
  this.executeCharTest('𝓂', ['script m']);
  this.executeCharTest('𝓃', ['script n']);
  this.executeCharTest('ℴ', ['script o']);
  this.executeCharTest('𝓅', ['script p']);
  this.executeCharTest('𝓆', ['script q']);
  this.executeCharTest('𝓇', ['script r']);
  this.executeCharTest('𝓈', ['script s']);
  this.executeCharTest('𝓉', ['script t']);
  this.executeCharTest('𝓊', ['script u']);
  this.executeCharTest('𝓋', ['script v']);
  this.executeCharTest('𝓌', ['script w']);
  this.executeCharTest('𝓍', ['script x']);
  this.executeCharTest('𝓎', ['script y']);
  this.executeCharTest('𝓏', ['script z']);
  this.executeCharTest('⊾', ['right angle with arc']);
  this.executeCharTest('⍼', ['right angle with downwards zigzag arrow']);
  this.executeCharTest('⟀', ['three dimensional angle']);
  this.executeCharTest('⦛', ['measured angle opening left']);
  this.executeCharTest('⦜', ['right angle variant with square']);
  this.executeCharTest('⦝', ['measured right angle with dot']);
  this.executeCharTest('⦞', ['angle with s inside']);
  this.executeCharTest('⦟', ['acute angle']);
  this.executeCharTest('⦠', ['spherical angle opening left']);
  this.executeCharTest('⦡', ['spherical angle opening up']);
  this.executeCharTest('⦢', ['turned angle']);
  this.executeCharTest('⦣', ['reversed angle']);
  this.executeCharTest('⦤', ['angle with underbar']);
  this.executeCharTest('⦥', ['reversed angle with underbar']);
  this.executeCharTest('⦦', ['oblique angle opening up']);
  this.executeCharTest('⦧', ['oblique angle opening down']);
  this.executeCharTest('⦨', ['measured angle with open arm ending in arrow pointing up and right']);
  this.executeCharTest('⦩', ['measured angle with open arm ending in arrow pointing up and left']);
  this.executeCharTest('⦪', ['measured angle with open arm ending in arrow pointing down and right']);
  this.executeCharTest('⦫', ['measured angle with open arm ending in arrow pointing down and left']);
  this.executeCharTest('⦬', ['measured angle with open arm ending in arrow pointing right and up']);
  this.executeCharTest('⦭', ['measured angle with open arm ending in arrow pointing left and up']);
  this.executeCharTest('⦮', ['measured angle with open arm ending in arrow pointing right and down']);
  this.executeCharTest('⦯', ['measured angle with open arm ending in arrow pointing left and down']);
  this.executeCharTest('←', ['left-arrow']);
  this.executeCharTest('↑', ['up-arrow']);
  this.executeCharTest('→', ['right-arrow']);
  this.executeCharTest('↓', ['down-arrow']);
  this.executeCharTest('↔', ['left-right-arrow']);
  this.executeCharTest('↕', ['up down-arrow']);
  this.executeCharTest('↖', ['up left-arrow']);
  this.executeCharTest('↗', ['up right-arrow']);
  this.executeCharTest('↘', ['down right-arrow']);
  this.executeCharTest('↙', ['down left-arrow']);
  this.executeCharTest('↚', ['left-arrow with stroke']);
  this.executeCharTest('↛', ['right-arrow with stroke']);
  this.executeCharTest('↜', ['left wave arrow']);
  this.executeCharTest('↝', ['right wave arrow']);
  this.executeCharTest('↞', ['two headed left-arrow']);
  this.executeCharTest('↟', ['two headed up-arrow']);
  this.executeCharTest('↠', ['two headed right-arrow']);
  this.executeCharTest('↡', ['two headed down-arrow']);
  this.executeCharTest('↢', ['left-arrow with tail']);
  this.executeCharTest('↣', ['right-arrow with tail']);
  this.executeCharTest('↤', ['left-arrow from bar']);
  this.executeCharTest('↥', ['up-arrow from bar']);
  this.executeCharTest('↦', ['right-arrow from bar']);
  this.executeCharTest('↧', ['down-arrow from bar']);
  this.executeCharTest('↨', ['up down-arrow with base']);
  this.executeCharTest('↩', ['left-arrow with hook']);
  this.executeCharTest('↪', ['right-arrow with hook']);
  this.executeCharTest('↫', ['left-arrow with loop']);
  this.executeCharTest('↬', ['right-arrow with loop']);
  this.executeCharTest('↭', ['left right wave arrow']);
  this.executeCharTest('↮', ['left-right-arrow with stroke']);
  this.executeCharTest('↯', ['down zigzag arrow']);
  this.executeCharTest('↰', ['up-arrow with tip left']);
  this.executeCharTest('↱', ['up-arrow with tip right']);
  this.executeCharTest('↲', ['down-arrow with tip left']);
  this.executeCharTest('↳', ['down-arrow with tip right']);
  this.executeCharTest('↴', ['right-arrow with corner down']);
  this.executeCharTest('↵', ['down-arrow with corner left']);
  this.executeCharTest('↶', ['anticlockwise top semicircle arrow']);
  this.executeCharTest('↷', ['clockwise top semicircle arrow']);
  this.executeCharTest('↸', ['up left-arrow to long bar']);
  this.executeCharTest('↹', ['left-arrow to bar over right-arrow to bar']);
  this.executeCharTest('↺', ['anticlockwise open circle arrow']);
  this.executeCharTest('↻', ['clockwise open circle arrow']);
  this.executeCharTest('⇄', ['right-arrow over left-arrow']);
  this.executeCharTest('⇅', ['up-arrow left of down-arrow']);
  this.executeCharTest('⇆', ['left-arrow over right-arrow']);
  this.executeCharTest('⇇', ['left paired arrows']);
  this.executeCharTest('⇈', ['up paired arrows']);
  this.executeCharTest('⇉', ['right paired arrows']);
  this.executeCharTest('⇊', ['down paired arrows']);
  this.executeCharTest('⇍', ['left double arrow with stroke']);
  this.executeCharTest('⇎', ['left right double arrow with stroke']);
  this.executeCharTest('⇏', ['right double arrow with stroke']);
  this.executeCharTest('⇐', ['left double arrow']);
  this.executeCharTest('⇑', ['up double arrow']);
  this.executeCharTest('⇒', ['right double arrow']);
  this.executeCharTest('⇓', ['down double arrow']);
  this.executeCharTest('⇔', ['left right double arrow']);
  this.executeCharTest('⇕', ['up down double arrow']);
  this.executeCharTest('⇖', ['up left double arrow']);
  this.executeCharTest('⇗', ['up right double arrow']);
  this.executeCharTest('⇘', ['down right double arrow']);
  this.executeCharTest('⇙', ['down left double arrow']);
  this.executeCharTest('⇚', ['left triple arrow']);
  this.executeCharTest('⇛', ['right triple arrow']);
  this.executeCharTest('⇜', ['left squiggle arrow']);
  this.executeCharTest('⇝', ['right squiggle arrow']);
  this.executeCharTest('⇞', ['up-arrow with double stroke']);
  this.executeCharTest('⇟', ['down-arrow with double stroke']);
  this.executeCharTest('⇠', ['left dasheD arrow']);
  this.executeCharTest('⇡', ['up dasheD arrow']);
  this.executeCharTest('⇢', ['right dasheD arrow']);
  this.executeCharTest('⇣', ['down dasheD arrow']);
  this.executeCharTest('⇤', ['left-arrow to bar']);
  this.executeCharTest('⇥', ['right-arrow to bar']);
  this.executeCharTest('⇦', ['white left-arrow']);
  this.executeCharTest('⇧', ['white up-arrow']);
  this.executeCharTest('⇨', ['white right-arrow']);
  this.executeCharTest('⇩', ['white down-arrow']);
  this.executeCharTest('⇪', ['white up-arrow from bar']);
  this.executeCharTest('⇫', ['white up-arrow on pedestal']);
  this.executeCharTest('⇬', ['white up-arrow on pedestal with horizontal bar']);
  this.executeCharTest('⇭', ['white up-arrow on pedestal with vertical bar']);
  this.executeCharTest('⇮', ['white double up-arrow']);
  this.executeCharTest('⇯', ['white double up-arrow on pedestal']);
  this.executeCharTest('⇰', ['white right-arrow from wall']);
  this.executeCharTest('⇱', ['north west arrow to corner']);
  this.executeCharTest('⇲', ['south east arrow to corner']);
  this.executeCharTest('⇳', ['up down white arrow']);
  this.executeCharTest('⇴', ['right-arrow with small circle']);
  this.executeCharTest('⇵', ['down-arrow left of up-arrow']);
  this.executeCharTest('⇶', ['three right-arrows']);
  this.executeCharTest('⇷', ['left-arrow with vertical stroke']);
  this.executeCharTest('⇸', ['right-arrow with vertical stroke']);
  this.executeCharTest('⇹', ['left-right-arrow with vertical stroke']);
  this.executeCharTest('⇺', ['left-arrow with double vertical stroke']);
  this.executeCharTest('⇻', ['right-arrow with double vertical stroke']);
  this.executeCharTest('⇼', ['left-right-arrow with double vertical stroke']);
  this.executeCharTest('⇽', ['left open headed arrow']);
  this.executeCharTest('⇾', ['right open headed arrow']);
  this.executeCharTest('⇿', ['left right open headed arrow']);
  this.executeCharTest('⌁', ['electric arrow']);
  this.executeCharTest('⌃', ['up-arrowhead']);
  this.executeCharTest('⌄', ['down-arrowhead']);
  this.executeCharTest('⌤', ['up-arrowhead between two horizontal bars']);
  this.executeCharTest('⎋', ['broken circle with northwest arrow']);
  this.executeCharTest('➔', ['heavy wide headed right-arrow']);
  this.executeCharTest('➘', ['heavy down right-arrow']);
  this.executeCharTest('➙', ['heavy right-arrow']);
  this.executeCharTest('➚', ['heavy up right-arrow']);
  this.executeCharTest('➛', ['drafting point right-arrow']);
  this.executeCharTest('➜', ['heavy round tipped right-arrow']);
  this.executeCharTest('➝', ['triangle headed right-arrow']);
  this.executeCharTest('➞', ['heavy triangle headed right-arrow']);
  this.executeCharTest('➟', ['dashed triangle headed right-arrow']);
  this.executeCharTest('➠', ['heavy dashed triangle headed right-arrow']);
  this.executeCharTest('➡', ['black right-arrow']);
  this.executeCharTest('➢', ['three d top lighted right-arrowhead']);
  this.executeCharTest('➣', ['three d bottom lighted right-arrowhead']);
  this.executeCharTest('➤', ['black right-arrowhead']);
  this.executeCharTest('➥', ['heavy black curved down and right-arrow']);
  this.executeCharTest('➦', ['heavy black curved up and right-arrow']);
  this.executeCharTest('➧', ['squat black right-arrow']);
  this.executeCharTest('➨', ['heavy concave pointed black right-arrow']);
  this.executeCharTest('➩', ['right shaded white right-arrow']);
  this.executeCharTest('➪', ['left shaded white right-arrow']);
  this.executeCharTest('➫', ['back tilted shadowed white right-arrow']);
  this.executeCharTest('➬', ['front tilted shadowed white right-arrow']);
  this.executeCharTest('➭', ['heavy lower right shadowed white right-arrow']);
  this.executeCharTest('➮', ['heavy upper right shadowed white right-arrow']);
  this.executeCharTest('➯', ['notched lower right shadowed white right-arrow']);
  this.executeCharTest('➱', ['notched upper right shadowed white right-arrow']);
  this.executeCharTest('➲', ['circled heavy white right-arrow']);
  this.executeCharTest('➳', ['white feathered right-arrow']);
  this.executeCharTest('➴', ['black feathered down right-arrow']);
  this.executeCharTest('➵', ['black feathered right-arrow']);
  this.executeCharTest('➶', ['black feathered up right-arrow']);
  this.executeCharTest('➷', ['heavy black feathered down right-arrow']);
  this.executeCharTest('➸', ['heavy black feathered right-arrow']);
  this.executeCharTest('➹', ['heavy black feathered up right-arrow']);
  this.executeCharTest('➺', ['teardrop barbed right-arrow']);
  this.executeCharTest('➻', ['heavy teardrop shanked right-arrow']);
  this.executeCharTest('➼', ['wedge tailed right-arrow']);
  this.executeCharTest('➽', ['heavy wedge tailed right-arrow']);
  this.executeCharTest('➾', ['open outlined right-arrow']);
  this.executeCharTest('⟰', ['up quadruple arrow']);
  this.executeCharTest('⟱', ['down quadruple arrow']);
  this.executeCharTest('⟲', ['anticlockwise gapped circle arrow']);
  this.executeCharTest('⟳', ['clockwise gapped circle arrow']);
  this.executeCharTest('⟴', ['right-arrow with circled plus']);
  this.executeCharTest('⟵', ['long left-arrow']);
  this.executeCharTest('⟶', ['long right-arrow']);
  this.executeCharTest('⟷', ['long left-right-arrow']);
  this.executeCharTest('⟸', ['long left double arrow']);
  this.executeCharTest('⟹', ['long right double arrow']);
  this.executeCharTest('⟺', ['long left right double arrow']);
  this.executeCharTest('⟻', ['long left-arrow from bar']);
  this.executeCharTest('⟼', ['long right-arrow from bar']);
  this.executeCharTest('⟽', ['long left double arrow from bar']);
  this.executeCharTest('⟾', ['long right double arrow from bar']);
  this.executeCharTest('⟿', ['long right squiggle arrow']);
  this.executeCharTest('⤀', ['two headed right-arrow with vertical stroke']);
  this.executeCharTest('⤁', ['two headed right-arrow with double vertical stroke']);
  this.executeCharTest('⤂', ['double left-arrow with vertical stroke']);
  this.executeCharTest('⤃', ['double right-arrow with vertical stroke']);
  this.executeCharTest('⤄', ['double left-right-arrow with vertical stroke']);
  this.executeCharTest('⤅', ['two headed right-arrow from bar']);
  this.executeCharTest('⤆', ['double left-arrow from bar']);
  this.executeCharTest('⤇', ['double right-arrow from bar']);
  this.executeCharTest('⤈', ['arrow down with horizontal stroke']);
  this.executeCharTest('⤉', ['up-arrow with horizontal stroke']);
  this.executeCharTest('⤊', ['up triple arrow']);
  this.executeCharTest('⤋', ['down triple arrow']);
  this.executeCharTest('⤌', ['left double dash arrow']);
  this.executeCharTest('⤍', ['right double dash arrow']);
  this.executeCharTest('⤎', ['left triple dash arrow']);
  this.executeCharTest('⤏', ['right triple dash arrow']);
  this.executeCharTest('⤐', ['right two headed triple dash arrow']);
  this.executeCharTest('⤑', ['right-arrow with dotted stem']);
  this.executeCharTest('⤒', ['up-arrow to bar']);
  this.executeCharTest('⤓', ['down-arrow to bar']);
  this.executeCharTest('⤔', ['right-arrow with tail with vertical stroke']);
  this.executeCharTest('⤕', ['right-arrow with tail with double vertical stroke']);
  this.executeCharTest('⤖', ['right two headed arrow with tail']);
  this.executeCharTest('⤗', ['right two headed arrow with tail with vertical stroke']);
  this.executeCharTest('⤘', ['right two headed arrow with tail with double vertical stroke']);
  this.executeCharTest('⤙', ['left-arrow tail']);
  this.executeCharTest('⤚', ['right-arrow tail']);
  this.executeCharTest('⤛', ['left double arrow tail']);
  this.executeCharTest('⤜', ['right double arrow tail']);
  this.executeCharTest('⤝', ['left-arrow to black diamond']);
  this.executeCharTest('⤞', ['right-arrow to black diamond']);
  this.executeCharTest('⤟', ['left-arrow from bar to black diamond']);
  this.executeCharTest('⤠', ['right-arrow from bar to black diamond']);
  this.executeCharTest('⤡', ['north west and south east arrow']);
  this.executeCharTest('⤢', ['north east and south west arrow']);
  this.executeCharTest('⤣', ['north west arrow with hook']);
  this.executeCharTest('⤤', ['north east arrow with hook']);
  this.executeCharTest('⤥', ['south east arrow with hook']);
  this.executeCharTest('⤦', ['south west arrow with hook']);
  this.executeCharTest('⤧', ['north west arrow and north east arrow']);
  this.executeCharTest('⤨', ['north east arrow and south east arrow']);
  this.executeCharTest('⤩', ['south east arrow and south west arrow']);
  this.executeCharTest('⤪', ['south west arrow and north west arrow']);
  this.executeCharTest('⤭', ['south east arrow crossing north east arrow']);
  this.executeCharTest('⤮', ['north east arrow crossing south east arrow']);
  this.executeCharTest('⤯', ['falling diagonal crossing north east arrow']);
  this.executeCharTest('⤰', ['rising diagonal crossing south east arrow']);
  this.executeCharTest('⤱', ['north east arrow crossing north west arrow']);
  this.executeCharTest('⤲', ['north west arrow crossing north east arrow']);
  this.executeCharTest('⤳', ['wave arrow pointing directly right']);
  this.executeCharTest('⤴', ['arrow pointing right then curving up']);
  this.executeCharTest('⤵', ['arrow pointing right then curving down']);
  this.executeCharTest('⤶', ['arrow pointing down then curving left']);
  this.executeCharTest('⤷', ['arrow pointing down then curving right']);
  this.executeCharTest('⤸', ['right side arc clockwise arrow']);
  this.executeCharTest('⤹', ['left side arc anticlockwise arrow']);
  this.executeCharTest('⤺', ['top arc anticlockwise arrow']);
  this.executeCharTest('⤻', ['bottom arc anticlockwise arrow']);
  this.executeCharTest('⤼', ['top arc clockwise arrow with minus']);
  this.executeCharTest('⤽', ['top arc anticlockwise arrow with plus']);
  this.executeCharTest('⤾', ['down right semicircular clockwise arrow']);
  this.executeCharTest('⤿', ['down left semicircular anticlockwise arrow']);
  this.executeCharTest('⥀', ['anticlockwise closed circle arrow']);
  this.executeCharTest('⥁', ['clockwise closed circle arrow']);
  this.executeCharTest('⥂', ['right-arrow above short left-arrow']);
  this.executeCharTest('⥃', ['left-arrow above short right-arrow']);
  this.executeCharTest('⥄', ['short right-arrow above left-arrow']);
  this.executeCharTest('⥅', ['right-arrow with plus below']);
  this.executeCharTest('⥆', ['left-arrow with plus below']);
  this.executeCharTest('⥇', ['right-arrow through x']);
  this.executeCharTest('⥈', ['left-right-arrow through small circle']);
  this.executeCharTest('⥉', ['up two headed arrow from small circle']);
  this.executeCharTest('⥰', ['right double arrow with rounded head']);
  this.executeCharTest('⥱', ['equals sign above right-arrow']);
  this.executeCharTest('⥲', ['tilde operator above right-arrow']);
  this.executeCharTest('⥳', ['left-arrow above tilde operator']);
  this.executeCharTest('⥴', ['right-arrow above tilde operator']);
  this.executeCharTest('⥵', ['right-arrow above almost equals']);
  this.executeCharTest('⥶', ['less than above left-arrow']);
  this.executeCharTest('⥷', ['left-arrow through less than']);
  this.executeCharTest('⥸', ['greater than above right-arrow']);
  this.executeCharTest('⥹', ['subset above right-arrow']);
  this.executeCharTest('⥺', ['left-arrow through subset']);
  this.executeCharTest('⥻', ['superset above left-arrow']);
  this.executeCharTest('⦳', ['empty set with right-arrow above']);
  this.executeCharTest('⦴', ['empty set with left-arrow above']);
  this.executeCharTest('⦽', ['up-arrow through circle']);
  this.executeCharTest('⧪', ['black diamond with down-arrow']);
  this.executeCharTest('⧬', ['white circle with down-arrow']);
  this.executeCharTest('⧭', ['black circle with down-arrow']);
  this.executeCharTest('⨗', ['integral with left-arrow with hook']);
  this.executeCharTest('⬀', ['north east white arrow']);
  this.executeCharTest('⬁', ['north west white arrow']);
  this.executeCharTest('⬂', ['south east white arrow']);
  this.executeCharTest('⬃', ['south west white arrow']);
  this.executeCharTest('⬄', ['left right white arrow']);
  this.executeCharTest('⬅', ['left black arrow']);
  this.executeCharTest('⬆', ['up black arrow']);
  this.executeCharTest('⬇', ['down black arrow']);
  this.executeCharTest('⬈', ['north east black arrow']);
  this.executeCharTest('⬉', ['north west black arrow']);
  this.executeCharTest('⬊', ['south east black arrow']);
  this.executeCharTest('⬋', ['south west black arrow']);
  this.executeCharTest('⬌', ['left right black arrow']);
  this.executeCharTest('⬍', ['up down black arrow']);
  this.executeCharTest('⬎', ['right-arrow with tip down']);
  this.executeCharTest('⬏', ['right-arrow with tip up']);
  this.executeCharTest('⬐', ['left-arrow with tip down']);
  this.executeCharTest('⬑', ['left-arrow with tip up']);
  this.executeCharTest('⬰', ['left-arrow with small circle']);
  this.executeCharTest('⬱', ['three left-arrows']);
  this.executeCharTest('⬲', ['left-arrow with circled plus']);
  this.executeCharTest('⬳', ['long left squiggle arrow']);
  this.executeCharTest('⬴', ['left two headed arrow with vertical stroke']);
  this.executeCharTest('⬵', ['left two headed arrow with double vertical stroke']);
  this.executeCharTest('⬶', ['left two headed arrow from bar']);
  this.executeCharTest('⬷', ['left two headed triple dash arrow']);
  this.executeCharTest('⬸', ['left-arrow with dotted stem']);
  this.executeCharTest('⬹', ['left-arrow with tail with vertical stroke']);
  this.executeCharTest('⬺', ['left-arrow with tail with double vertical stroke']);
  this.executeCharTest('⬻', ['left two headed arrow with tail']);
  this.executeCharTest('⬼', ['left two headed arrow with tail with vertical stroke']);
  this.executeCharTest('⬽', ['left two headed arrow with tail with double vertical stroke']);
  this.executeCharTest('⬾', ['left-arrow through x']);
  this.executeCharTest('⬿', ['wave arrow pointing directly left']);
  this.executeCharTest('⭀', ['equals sign above left-arrow']);
  this.executeCharTest('⭁', ['reverse tilde operator above left-arrow']);
  this.executeCharTest('⭂', ['left-arrow above reverse almost equals']);
  this.executeCharTest('⭃', ['right-arrow through greater than']);
  this.executeCharTest('⭄', ['right-arrow through superset']);
  this.executeCharTest('⭅', ['left quadruple arrow']);
  this.executeCharTest('⭆', ['right quadruple arrow']);
  this.executeCharTest('⭇', ['reverse tilde operator above right-arrow']);
  this.executeCharTest('⭈', ['right-arrow above reverse almost equals']);
  this.executeCharTest('⭉', ['tilde operator above left-arrow']);
  this.executeCharTest('⭊', ['left-arrow above almost equals']);
  this.executeCharTest('⭋', ['left-arrow above reverse tilde operator']);
  this.executeCharTest('⭌', ['right-arrow above reverse tilde operator']);
  this.executeCharTest('￩', ['halfwidth left-arrow']);
  this.executeCharTest('￪', ['halfwidth up-arrow']);
  this.executeCharTest('￫', ['halfwidth right-arrow']);
  this.executeCharTest('￬', ['halfwidth down-arrow']);
  this.executeCharTest('ℓ', ['script l']);
  this.executeCharTest('℘', ['script upper P']);
  this.executeCharTest('ℼ', ['double struck pi']);
  this.executeCharTest('ℽ', ['double struck gamma']);
  this.executeCharTest('ℾ', ['double struck upper Gamma']);
  this.executeCharTest('ℿ', ['double struck upper Pi']);
  this.executeCharTest('⅀', ['double struck n ary summation']);
  this.executeCharTest('ⅅ', ['double struck italic upper D']);
  this.executeCharTest('ⅆ', ['double struck italic d']);
  this.executeCharTest('ⅇ', ['double struck italic e']);
  this.executeCharTest('ⅈ', ['double struck italic i']);
  this.executeCharTest('ⅉ', ['double struck italic j']);
  this.executeCharTest('𝚤', ['italic dotless i']);
  this.executeCharTest('𝚥', ['italic dotless j']);
  this.executeCharTest('(', ['open paren']);
  this.executeCharTest(')', ['close paren']);
  this.executeCharTest('[', ['open bracket']);
  this.executeCharTest(']', ['close bracket']);
  this.executeCharTest('{', ['open brace']);
  this.executeCharTest('}', ['close brace']);
  this.executeCharTest('⁅', ['left-bracket with quill']);
  this.executeCharTest('⁆', ['right-bracket with quill']);
  this.executeCharTest('⌈', ['left ceiling']);
  this.executeCharTest('⌉', ['right ceiling']);
  this.executeCharTest('⌊', ['left floor']);
  this.executeCharTest('⌋', ['right floor']);
  this.executeCharTest('⌌', ['bottom right crop']);
  this.executeCharTest('⌍', ['bottom left crop']);
  this.executeCharTest('⌎', ['top right crop']);
  this.executeCharTest('⌏', ['top left crop']);
  this.executeCharTest('⌜', ['top left corner']);
  this.executeCharTest('⌝', ['top right corner']);
  this.executeCharTest('⌞', ['bottom left corner']);
  this.executeCharTest('⌟', ['bottom right corner']);
  this.executeCharTest('⌠', ['top half integral']);
  this.executeCharTest('⌡', ['bottom half integral']);
  this.executeCharTest('〈', ['left pointing angle']);
  this.executeCharTest('〉', ['right pointing angle']);
  this.executeCharTest('⎛', ['left-parenthesis upper hook']);
  this.executeCharTest('⎜', ['left-parenthesis extension']);
  this.executeCharTest('⎝', ['left-parenthesis lower hook']);
  this.executeCharTest('⎞', ['right-parenthesis upper hook']);
  this.executeCharTest('⎟', ['right-parenthesis extension']);
  this.executeCharTest('⎠', ['right-parenthesis lower hook']);
  this.executeCharTest('⎡', ['left-bracket upper corner']);
  this.executeCharTest('⎢', ['left-bracket extension']);
  this.executeCharTest('⎣', ['left-bracket lower corner']);
  this.executeCharTest('⎤', ['right-bracket upper corner']);
  this.executeCharTest('⎥', ['right-bracket extension']);
  this.executeCharTest('⎦', ['right-bracket lower corner']);
  this.executeCharTest('⎧', ['left-brace upper hook']);
  this.executeCharTest('⎨', ['left-brace middle piece']);
  this.executeCharTest('⎩', ['left-brace lower hook']);
  this.executeCharTest('⎪', ['brace extension']);
  this.executeCharTest('⎫', ['right-brace upper hook']);
  this.executeCharTest('⎬', ['right-brace middle piece']);
  this.executeCharTest('⎭', ['right-brace lower hook']);
  this.executeCharTest('⎮', ['integral extension']);
  this.executeCharTest('⎯', ['horizontal line extension']);
  this.executeCharTest('⎰', ['upper left or lower right-brace section']);
  this.executeCharTest('⎱', ['upper right or lower left-brace section']);
  this.executeCharTest('⎲', ['summation top']);
  this.executeCharTest('⎳', ['summation bottom']);
  this.executeCharTest('⎴', ['top-bracket']);
  this.executeCharTest('⎵', ['bottom-bracket']);
  this.executeCharTest('⎶', ['bottom-bracket over top-bracket']);
  this.executeCharTest('⎷', ['radical symbol bottom']);
  this.executeCharTest('⎸', ['left vertical box line']);
  this.executeCharTest('⎹', ['right vertical box line']);
  this.executeCharTest('⏜', ['top-parenthesis']);
  this.executeCharTest('⏝', ['bottom-parenthesis']);
  this.executeCharTest('⏞', ['top-brace']);
  this.executeCharTest('⏟', ['bottom-brace']);
  this.executeCharTest('⏠', ['top tortoise shell bracket']);
  this.executeCharTest('⏡', ['bottom tortoise shell bracket']);
  this.executeCharTest('❨', ['medium left-parenthesis ornament']);
  this.executeCharTest('❩', ['medium right-parenthesis ornament']);
  this.executeCharTest('❪', ['medium flattened left-parenthesis ornament']);
  this.executeCharTest('❫', ['medium flattened right-parenthesis ornament']);
  this.executeCharTest('❬', ['medium left pointing angle ornament']);
  this.executeCharTest('❭', ['medium right pointing angle ornament']);
  this.executeCharTest('❮', ['heavy left pointing angle quotation mark ornament']);
  this.executeCharTest('❯', ['heavy right pointing angle quotation mark ornament']);
  this.executeCharTest('❰', ['heavy left pointing angle ornament']);
  this.executeCharTest('❱', ['heavy right pointing angle ornament']);
  this.executeCharTest('❲', ['light left tortoise shell bracket ornament']);
  this.executeCharTest('❳', ['light right tortoise shell bracket ornament']);
  this.executeCharTest('❴', ['medium left-brace ornament']);
  this.executeCharTest('❵', ['medium right-brace ornament']);
  this.executeCharTest('⟅', ['left s shaped bag delimiter']);
  this.executeCharTest('⟆', ['right s shaped bag delimiter']);
  this.executeCharTest('⟦', ['mathematical left white bracket']);
  this.executeCharTest('⟧', ['mathematical right white bracket']);
  this.executeCharTest('⟨', ['mathematical left-angle']);
  this.executeCharTest('⟩', ['mathematical right-angle']);
  this.executeCharTest('⟪', ['mathematical left double angle']);
  this.executeCharTest('⟫', ['mathematical right double angle']);
  this.executeCharTest('⟬', ['mathematical left white tortoise shell bracket']);
  this.executeCharTest('⟭', ['mathematical right white tortoise shell bracket']);
  this.executeCharTest('⟮', ['mathematical flattened left-parenthesis']);
  this.executeCharTest('⟯', ['mathematical flattened right-parenthesis']);
  this.executeCharTest('⦃', ['left white brace']);
  this.executeCharTest('⦄', ['right white brace']);
  this.executeCharTest('⦅', ['white left-parenthesis']);
  this.executeCharTest('⦆', ['white right-parenthesis']);
  this.executeCharTest('⦇', ['z notation left image bracket']);
  this.executeCharTest('⦈', ['z notation right image bracket']);
  this.executeCharTest('⦉', ['z notation left binding bracket']);
  this.executeCharTest('⦊', ['z notation right binding bracket']);
  this.executeCharTest('⦋', ['left-bracket with underbar']);
  this.executeCharTest('⦌', ['right-bracket with underbar']);
  this.executeCharTest('⦍', ['left-bracket with tick in top corner']);
  this.executeCharTest('⦎', ['right-bracket with tick in bottom corner']);
  this.executeCharTest('⦏', ['left-bracket with tick in bottom corner']);
  this.executeCharTest('⦐', ['right-bracket with tick in top corner']);
  this.executeCharTest('⦑', ['left-angle with dot']);
  this.executeCharTest('⦒', ['right-angle with dot']);
  this.executeCharTest('⦓', ['left arc less than bracket']);
  this.executeCharTest('⦔', ['right arc greater than bracket']);
  this.executeCharTest('⦕', ['double left arc greater than bracket']);
  this.executeCharTest('⦖', ['double right arc less than bracket']);
  this.executeCharTest('⦗', ['left black tortoise shell bracket']);
  this.executeCharTest('⦘', ['right black tortoise shell bracket']);
  this.executeCharTest('⧘', ['left wiggly fence']);
  this.executeCharTest('⧙', ['right wiggly fence']);
  this.executeCharTest('⧚', ['left double wiggly fence']);
  this.executeCharTest('⧛', ['right double wiggly fence']);
  this.executeCharTest('⧼', ['left pointing curved angle']);
  this.executeCharTest('⧽', ['right pointing curved angle']);
  this.executeCharTest('⸢', ['top half left-bracket']);
  this.executeCharTest('⸣', ['top half right-bracket']);
  this.executeCharTest('⸤', ['bottom half left-bracket']);
  this.executeCharTest('⸥', ['bottom half right-bracket']);
  this.executeCharTest('⸦', ['left sideways U bracket']);
  this.executeCharTest('⸧', ['right sideways U bracket']);
  this.executeCharTest('⸨', ['double left-parenthesis']);
  this.executeCharTest('⸩', ['double right-parenthesis']);
  this.executeCharTest('〈', ['left-angle']);
  this.executeCharTest('〉', ['right-angle']);
  this.executeCharTest('《', ['left double angle']);
  this.executeCharTest('》', ['right double angle']);
  this.executeCharTest('「', ['left corner bracket']);
  this.executeCharTest('」', ['right corner bracket']);
  this.executeCharTest('『', ['left white corner bracket']);
  this.executeCharTest('』', ['right white corner bracket']);
  this.executeCharTest('【', ['left black lenticular bracket']);
  this.executeCharTest('】', ['right black lenticular bracket']);
  this.executeCharTest('〔', ['left tortoise shell bracket']);
  this.executeCharTest('〕', ['right tortoise shell bracket']);
  this.executeCharTest('〖', ['left white lenticular bracket']);
  this.executeCharTest('〗', ['right white lenticular bracket']);
  this.executeCharTest('〘', ['left white tortoise shell bracket']);
  this.executeCharTest('〙', ['right white tortoise shell bracket']);
  this.executeCharTest('〚', ['left white bracket']);
  this.executeCharTest('〛', ['right white bracket']);
  this.executeCharTest('〝', ['reversed double prime quotation mark']);
  this.executeCharTest('〞', ['double prime quotation mark']);
  this.executeCharTest('〟', ['low double prime quotation mark']);
  this.executeCharTest('﴾', ['ornate left-parenthesis']);
  this.executeCharTest('﴿', ['ornate right-parenthesis']);
  this.executeCharTest('︗', ['presentation form for vertical left white lenticular bracket']);
  this.executeCharTest('︘', ['presentation form for vertical right white lenticular brakcet']);
  this.executeCharTest('︵', ['presentation form for vertical left-parenthesis']);
  this.executeCharTest('︶', ['presentation form for vertical right-parenthesis']);
  this.executeCharTest('︷', ['presentation form for vertical left-brace']);
  this.executeCharTest('︸', ['presentation form for vertical right-brace']);
  this.executeCharTest('︹', ['presentation form for vertical left tortoise shell bracket']);
  this.executeCharTest('︺', ['presentation form for vertical right tortoise shell bracket']);
  this.executeCharTest('︻', ['presentation form for vertical left black lenticular bracket']);
  this.executeCharTest('︼', ['presentation form for vertical right black lenticular bracket']);
  this.executeCharTest('︽', ['presentation form for vertical left double angle']);
  this.executeCharTest('︾', ['presentation form for vertical right double angle']);
  this.executeCharTest('︿', ['presentation form for vertical left-angle']);
  this.executeCharTest('﹀', ['presentation form for vertical right-angle']);
  this.executeCharTest('﹁', ['presentation form for vertical left corner bracket']);
  this.executeCharTest('﹂', ['presentation form for vertical right corner bracket']);
  this.executeCharTest('﹃', ['presentation form for vertical left white corner bracket']);
  this.executeCharTest('﹄', ['presentation form for vertical right white corner bracket']);
  this.executeCharTest('﹇', ['presentation form for vertical left-bracket']);
  this.executeCharTest('﹈', ['presentation form for vertical right-bracket']);
  this.executeCharTest('﹙', ['small left-parenthesis']);
  this.executeCharTest('﹚', ['small right-parenthesis']);
  this.executeCharTest('﹛', ['small left-brace']);
  this.executeCharTest('﹜', ['small right-brace']);
  this.executeCharTest('﹝', ['small left tortoise shell bracket']);
  this.executeCharTest('﹞', ['small right tortoise shell bracket']);
  this.executeCharTest('（', ['fullwidth left-parenthesis']);
  this.executeCharTest('）', ['fullwidth right-parenthesis']);
  this.executeCharTest('［', ['fullwidth left-bracket']);
  this.executeCharTest('］', ['fullwidth right-bracket']);
  this.executeCharTest('｛', ['fullwidth left-brace']);
  this.executeCharTest('｝', ['fullwidth right-brace']);
  this.executeCharTest('｟', ['fullwidth white left-parenthesis']);
  this.executeCharTest('｠', ['fullwidth white right-parenthesis']);
  this.executeCharTest('｢', ['halfwidth left corner bracket']);
  this.executeCharTest('｣', ['halfwidth right corner bracket']);
  this.executeCharTest('²', ['9']);
  this.executeCharTest('³', ['cube']);
  this.executeCharTest('¹', ['super one']);
  this.executeCharTest('¼', ['one quarter']);
  this.executeCharTest('½', ['one half']);
  this.executeCharTest('¾', ['three quarters']);
  this.executeCharTest('⁰', ['super zero']);
  this.executeCharTest('⁴', ['super four']);
  this.executeCharTest('⁵', ['super five']);
  this.executeCharTest('⁶', ['super six']);
  this.executeCharTest('⁷', ['super seven']);
  this.executeCharTest('⁸', ['super eight']);
  this.executeCharTest('⁹', ['super nine']);
  this.executeCharTest('₀', ['sub zero']);
  this.executeCharTest('₁', ['sub one']);
  this.executeCharTest('₂', ['sub two']);
  this.executeCharTest('₃', ['sub three']);
  this.executeCharTest('₄', ['sub four']);
  this.executeCharTest('₅', ['sub five']);
  this.executeCharTest('₆', ['sub six']);
  this.executeCharTest('₇', ['sub seven']);
  this.executeCharTest('₈', ['sub eight']);
  this.executeCharTest('₉', ['sub nine']);
  this.executeCharTest('⅐', ['one seventh']);
  this.executeCharTest('⅑', ['one ninth']);
  this.executeCharTest('⅒', ['one tenth']);
  this.executeCharTest('⅓', ['one third']);
  this.executeCharTest('⅔', ['two thirds']);
  this.executeCharTest('⅕', ['one fifth']);
  this.executeCharTest('⅖', ['two fifths']);
  this.executeCharTest('⅗', ['three fifths']);
  this.executeCharTest('⅘', ['four fifths']);
  this.executeCharTest('⅙', ['one sixth']);
  this.executeCharTest('⅚', ['five sixths']);
  this.executeCharTest('⅛', ['one eighth']);
  this.executeCharTest('⅜', ['three eighths']);
  this.executeCharTest('⅝', ['five eighths']);
  this.executeCharTest('⅞', ['seven eighths']);
  this.executeCharTest('⅟', ['numerator one']);
  this.executeCharTest('↉', ['zero thirds']);
  this.executeCharTest('①', ['circled 1']);
  this.executeCharTest('②', ['circled 2']);
  this.executeCharTest('③', ['circled 3']);
  this.executeCharTest('④', ['circled 4']);
  this.executeCharTest('⑤', ['circled 5']);
  this.executeCharTest('⑥', ['circled 6']);
  this.executeCharTest('⑦', ['circled 7']);
  this.executeCharTest('⑧', ['circled 8']);
  this.executeCharTest('⑨', ['circled 9']);
  this.executeCharTest('⑩', ['circled 10']);
  this.executeCharTest('⑪', ['circled 11']);
  this.executeCharTest('⑫', ['circled 12']);
  this.executeCharTest('⑬', ['circled 13']);
  this.executeCharTest('⑭', ['circled 14']);
  this.executeCharTest('⑮', ['circled 15']);
  this.executeCharTest('⑯', ['circled 16']);
  this.executeCharTest('⑰', ['circled 17']);
  this.executeCharTest('⑱', ['circled 18']);
  this.executeCharTest('⑲', ['circled 19']);
  this.executeCharTest('⑳', ['circled 20']);
  this.executeCharTest('⑴', ['parenthesized 1']);
  this.executeCharTest('⑵', ['parenthesized 2']);
  this.executeCharTest('⑶', ['parenthesized 3']);
  this.executeCharTest('⑷', ['parenthesized 4']);
  this.executeCharTest('⑸', ['parenthesized 5']);
  this.executeCharTest('⑹', ['parenthesized 6']);
  this.executeCharTest('⑺', ['parenthesized 7']);
  this.executeCharTest('⑻', ['parenthesized 8']);
  this.executeCharTest('⑼', ['parenthesized 9']);
  this.executeCharTest('⑽', ['parenthesized 10']);
  this.executeCharTest('⑾', ['parenthesized 11']);
  this.executeCharTest('⑿', ['parenthesized 12']);
  this.executeCharTest('⒀', ['parenthesized 13']);
  this.executeCharTest('⒁', ['parenthesized 14']);
  this.executeCharTest('⒂', ['parenthesized 15']);
  this.executeCharTest('⒃', ['parenthesized 16']);
  this.executeCharTest('⒄', ['parenthesized 17']);
  this.executeCharTest('⒅', ['parenthesized 18']);
  this.executeCharTest('⒆', ['parenthesized 19']);
  this.executeCharTest('⒇', ['parenthesized 20']);
  this.executeCharTest('⒈', ['1 period']);
  this.executeCharTest('⒉', ['2 period']);
  this.executeCharTest('⒊', ['3 period']);
  this.executeCharTest('⒋', ['4 period']);
  this.executeCharTest('⒌', ['5 period']);
  this.executeCharTest('⒍', ['6 period']);
  this.executeCharTest('⒎', ['7 period']);
  this.executeCharTest('⒏', ['8 period']);
  this.executeCharTest('⒐', ['9 period']);
  this.executeCharTest('⒑', ['10 period']);
  this.executeCharTest('⒒', ['11 period']);
  this.executeCharTest('⒓', ['12 period']);
  this.executeCharTest('⒔', ['13 period']);
  this.executeCharTest('⒕', ['14 period']);
  this.executeCharTest('⒖', ['15 period']);
  this.executeCharTest('⒗', ['16 period']);
  this.executeCharTest('⒘', ['17 period']);
  this.executeCharTest('⒙', ['18 period']);
  this.executeCharTest('⒚', ['19 period']);
  this.executeCharTest('⒛', ['20 period']);
  this.executeCharTest('⓪', ['circled 0']);
  this.executeCharTest('⓫', ['negative circled 11']);
  this.executeCharTest('⓬', ['negative circled 12']);
  this.executeCharTest('⓭', ['negative circled 13']);
  this.executeCharTest('⓮', ['negative circled 14']);
  this.executeCharTest('⓯', ['negative circled 15']);
  this.executeCharTest('⓰', ['negative circled 16']);
  this.executeCharTest('⓱', ['negative circled 17']);
  this.executeCharTest('⓲', ['negative circled 18']);
  this.executeCharTest('⓳', ['negative circled 19']);
  this.executeCharTest('⓴', ['negative circled 20']);
  this.executeCharTest('⓵', ['double circled 1']);
  this.executeCharTest('⓶', ['double circled 2']);
  this.executeCharTest('⓷', ['double circled 3']);
  this.executeCharTest('⓸', ['double circled 4']);
  this.executeCharTest('⓹', ['double circled 5']);
  this.executeCharTest('⓺', ['double circled 6']);
  this.executeCharTest('⓻', ['double circled 7']);
  this.executeCharTest('⓼', ['double circled 8']);
  this.executeCharTest('⓽', ['double circled 9']);
  this.executeCharTest('⓾', ['double circled 10']);
  this.executeCharTest('⓿', ['negative circled 0']);
  this.executeCharTest('❶', ['inverse circled 1']);
  this.executeCharTest('❷', ['inverse circled 2']);
  this.executeCharTest('❸', ['inverse circled 3']);
  this.executeCharTest('❹', ['inverse circled 4']);
  this.executeCharTest('❺', ['inverse circled 5']);
  this.executeCharTest('❻', ['inverse circled 6']);
  this.executeCharTest('❼', ['inverse circled 7']);
  this.executeCharTest('❽', ['inverse circled 8']);
  this.executeCharTest('❾', ['inverse circled 9']);
  this.executeCharTest('❿', ['inverse circled 10']);
  this.executeCharTest('➀', ['circled one']);
  this.executeCharTest('➁', ['circled two']);
  this.executeCharTest('➂', ['circled three']);
  this.executeCharTest('➃', ['circled four']);
  this.executeCharTest('➄', ['circled five']);
  this.executeCharTest('➅', ['circled six']);
  this.executeCharTest('➆', ['circled seven']);
  this.executeCharTest('➇', ['circled eight']);
  this.executeCharTest('➈', ['circled nine']);
  this.executeCharTest('➉', ['circled ten']);
  this.executeCharTest('➊', ['inverse circled 1']);
  this.executeCharTest('➋', ['inverse circled 2']);
  this.executeCharTest('➌', ['inverse circled 3']);
  this.executeCharTest('➍', ['inverse circled 4']);
  this.executeCharTest('➎', ['inverse circled 5']);
  this.executeCharTest('➏', ['inverse circled 6']);
  this.executeCharTest('➐', ['inverse circled 7']);
  this.executeCharTest('➑', ['inverse circled 8']);
  this.executeCharTest('➒', ['inverse circled 9']);
  this.executeCharTest('➓', ['inverse circled 10']);
  this.executeCharTest('㉈', ['circled ten on black square']);
  this.executeCharTest('㉉', ['circled twenty on black square']);
  this.executeCharTest('㉊', ['circled thirty on black square']);
  this.executeCharTest('㉋', ['circled forty on black square']);
  this.executeCharTest('㉌', ['circled fifty on black square']);
  this.executeCharTest('㉍', ['circled sixty on black square']);
  this.executeCharTest('㉎', ['circled seventy on black square']);
  this.executeCharTest('㉏', ['circled eighty on black square']);
  this.executeCharTest('㉑', ['circled twenty one']);
  this.executeCharTest('㉒', ['circled twenty two']);
  this.executeCharTest('㉓', ['circled twenty three']);
  this.executeCharTest('㉔', ['circled twenty four']);
  this.executeCharTest('㉕', ['circled twenty five']);
  this.executeCharTest('㉖', ['circled twenty six']);
  this.executeCharTest('㉗', ['circled twenty seven']);
  this.executeCharTest('㉘', ['circled twenty eight']);
  this.executeCharTest('㉙', ['circled twenty nine']);
  this.executeCharTest('㉚', ['circled thirty']);
  this.executeCharTest('㉛', ['circled thirty one']);
  this.executeCharTest('㉜', ['circled thirty two']);
  this.executeCharTest('㉝', ['circled thirty three']);
  this.executeCharTest('㉞', ['circled thirty four']);
  this.executeCharTest('㉟', ['circled thirty five']);
  this.executeCharTest('㊱', ['circled thirty six']);
  this.executeCharTest('㊲', ['circled thirty seven']);
  this.executeCharTest('㊳', ['circled thirty eight']);
  this.executeCharTest('㊴', ['circled thirty nine']);
  this.executeCharTest('㊵', ['circled forty']);
  this.executeCharTest('㊶', ['circled forty one']);
  this.executeCharTest('㊷', ['circled forty two']);
  this.executeCharTest('㊸', ['circled forty three']);
  this.executeCharTest('㊹', ['circled forty four']);
  this.executeCharTest('㊺', ['circled forty five']);
  this.executeCharTest('㊻', ['circled forty six']);
  this.executeCharTest('㊼', ['circled forty seven']);
  this.executeCharTest('㊽', ['circled forty eight']);
  this.executeCharTest('㊾', ['circled forty nine']);
  this.executeCharTest('㊿', ['circled fifty']);
  this.executeCharTest('０', ['0']);
  this.executeCharTest('１', ['1']);
  this.executeCharTest('２', ['2']);
  this.executeCharTest('３', ['3']);
  this.executeCharTest('４', ['4']);
  this.executeCharTest('５', ['5']);
  this.executeCharTest('６', ['6']);
  this.executeCharTest('７', ['7']);
  this.executeCharTest('８', ['8']);
  this.executeCharTest('９', ['9']);
  this.executeCharTest('𝟎', ['bold 0']);
  this.executeCharTest('𝟏', ['bold 1']);
  this.executeCharTest('𝟐', ['bold 2']);
  this.executeCharTest('𝟑', ['bold 3']);
  this.executeCharTest('𝟒', ['bold 4']);
  this.executeCharTest('𝟓', ['bold 5']);
  this.executeCharTest('𝟔', ['bold 6']);
  this.executeCharTest('𝟕', ['bold 7']);
  this.executeCharTest('𝟖', ['bold 8']);
  this.executeCharTest('𝟗', ['bold 9']);
  this.executeCharTest('𝟘', ['blackboard 0']);
  this.executeCharTest('𝟙', ['blackboard 1']);
  this.executeCharTest('𝟚', ['blackboard 2']);
  this.executeCharTest('𝟛', ['blackboard 3']);
  this.executeCharTest('𝟜', ['blackboard 4']);
  this.executeCharTest('𝟝', ['blackboard 5']);
  this.executeCharTest('𝟞', ['blackboard 6']);
  this.executeCharTest('𝟟', ['blackboard 7']);
  this.executeCharTest('𝟠', ['blackboard 8']);
  this.executeCharTest('𝟡', ['blackboard 9']);
  this.executeCharTest('𝟢', ['sans serif 0']);
  this.executeCharTest('𝟣', ['sans serif 1']);
  this.executeCharTest('𝟤', ['sans serif 2']);
  this.executeCharTest('𝟥', ['sans serif 3']);
  this.executeCharTest('𝟦', ['sans serif 4']);
  this.executeCharTest('𝟧', ['sans serif 5']);
  this.executeCharTest('𝟨', ['sans serif 6']);
  this.executeCharTest('𝟩', ['sans serif 7']);
  this.executeCharTest('𝟪', ['sans serif 8']);
  this.executeCharTest('𝟫', ['sans serif 9']);
  this.executeCharTest('𝟬', ['sans serif bold 0']);
  this.executeCharTest('𝟭', ['sans serif bold 1']);
  this.executeCharTest('𝟮', ['sans serif bold 2']);
  this.executeCharTest('𝟯', ['sans serif bold 3']);
  this.executeCharTest('𝟰', ['sans serif bold 4']);
  this.executeCharTest('𝟱', ['sans serif bold 5']);
  this.executeCharTest('𝟲', ['sans serif bold 6']);
  this.executeCharTest('𝟳', ['sans serif bold 7']);
  this.executeCharTest('𝟴', ['sans serif bold 8']);
  this.executeCharTest('𝟵', ['sans serif bold 9']);
  this.executeCharTest('𝟶', ['monospace 0']);
  this.executeCharTest('𝟷', ['monospace 1']);
  this.executeCharTest('𝟸', ['monospace 2']);
  this.executeCharTest('𝟹', ['monospace 3']);
  this.executeCharTest('𝟺', ['monospace 4']);
  this.executeCharTest('𝟻', ['monospace 5']);
  this.executeCharTest('𝟼', ['monospace 6']);
  this.executeCharTest('𝟽', ['monospace 7']);
  this.executeCharTest('𝟾', ['monospace 8']);
  this.executeCharTest('𝟿', ['monospace 9']);
  this.executeCharTest('🄀', ['0 period']);
  this.executeCharTest('🄁', ['0 comma']);
  this.executeCharTest('🄂', ['1 comma']);
  this.executeCharTest('🄃', ['2 comma']);
  this.executeCharTest('🄄', ['3 comma']);
  this.executeCharTest('🄅', ['4 comma']);
  this.executeCharTest('🄆', ['5 comma']);
  this.executeCharTest('🄇', ['6 comma']);
  this.executeCharTest('🄈', ['7 comma']);
  this.executeCharTest('🄉', ['8 comma']);
  this.executeCharTest('🄊', ['9 comma']);
  this.executeCharTest('─', ['box drawings light horizontal']);
  this.executeCharTest('━', ['box drawings heavy horizontal']);
  this.executeCharTest('│', ['box drawings light vertical']);
  this.executeCharTest('┃', ['box drawings heavy vertical']);
  this.executeCharTest('┄', ['box drawings light triple dash horizontal']);
  this.executeCharTest('┅', ['box drawings heavy triple dash horizontal']);
  this.executeCharTest('┆', ['box drawings light triple dash vertical']);
  this.executeCharTest('┇', ['box drawings heavy triple dash vertical']);
  this.executeCharTest('┈', ['box drawings light quadruple dash horizontal']);
  this.executeCharTest('┉', ['box drawings heavy quadruple dash horizontal']);
  this.executeCharTest('┊', ['box drawings light quadruple dash vertical']);
  this.executeCharTest('┋', ['box drawings heavy quadruple dash vertical']);
  this.executeCharTest('┌', ['box drawings light down and right']);
  this.executeCharTest('┍', ['box drawings down light and right heavy']);
  this.executeCharTest('┎', ['box drawings down heavy and right light']);
  this.executeCharTest('┏', ['box drawings heavy down and right']);
  this.executeCharTest('┐', ['box drawings light down and left']);
  this.executeCharTest('┑', ['box drawings down light and left heavy']);
  this.executeCharTest('┒', ['box drawings down heavy and left light']);
  this.executeCharTest('┓', ['box drawings heavy down and left']);
  this.executeCharTest('└', ['box drawings light up and right']);
  this.executeCharTest('┕', ['box drawings up light and right heavy']);
  this.executeCharTest('┖', ['box drawings up heavy and right light']);
  this.executeCharTest('┗', ['box drawings heavy up and right']);
  this.executeCharTest('┘', ['box drawings light up and left']);
  this.executeCharTest('┙', ['box drawings up light and left heavy']);
  this.executeCharTest('┚', ['box drawings up heavy and left light']);
  this.executeCharTest('┛', ['box drawings heavy up and left']);
  this.executeCharTest('├', ['box drawings light vertical and right']);
  this.executeCharTest('┝', ['box drawings vertical light and right heavy']);
  this.executeCharTest('┞', ['box drawings up heavy and right down light']);
  this.executeCharTest('┟', ['box drawings down heavy and right up light']);
  this.executeCharTest('┠', ['box drawings vertical heavy and right light']);
  this.executeCharTest('┡', ['box drawings down light and right up heavy']);
  this.executeCharTest('┢', ['box drawings up light and right down heavy']);
  this.executeCharTest('┣', ['box drawings heavy vertical and right']);
  this.executeCharTest('┤', ['box drawings light vertical and left']);
  this.executeCharTest('┥', ['box drawings vertical light and left heavy']);
  this.executeCharTest('┦', ['box drawings up heavy and left down light']);
  this.executeCharTest('┧', ['box drawings down heavy and left up light']);
  this.executeCharTest('┨', ['box drawings vertical heavy and left light']);
  this.executeCharTest('┩', ['box drawings down light and left up heavy']);
  this.executeCharTest('┪', ['box drawings up light and left down heavy']);
  this.executeCharTest('┫', ['box drawings heavy vertical and left']);
  this.executeCharTest('┬', ['box drawings light down and horizontal']);
  this.executeCharTest('┭', ['box drawings left heavy and right down light']);
  this.executeCharTest('┮', ['box drawings right heavy and left down light']);
  this.executeCharTest('┯', ['box drawings down light and horizontal heavy']);
  this.executeCharTest('┰', ['box drawings down heavy and horizontal light']);
  this.executeCharTest('┱', ['box drawings right light and left down heavy']);
  this.executeCharTest('┲', ['box drawings left light and right down heavy']);
  this.executeCharTest('┳', ['box drawings heavy down and horizontal']);
  this.executeCharTest('┴', ['box drawings light up and horizontal']);
  this.executeCharTest('┵', ['box drawings left heavy and right up light']);
  this.executeCharTest('┶', ['box drawings right heavy and left up light']);
  this.executeCharTest('┷', ['box drawings up light and horizontal heavy']);
  this.executeCharTest('┸', ['box drawings up heavy and horizontal light']);
  this.executeCharTest('┹', ['box drawings right light and left up heavy']);
  this.executeCharTest('┺', ['box drawings left light and right up heavy']);
  this.executeCharTest('┻', ['box drawings heavy up and horizontal']);
  this.executeCharTest('┼', ['box drawings light vertical and horizontal']);
  this.executeCharTest('┽', ['box drawings left heavy and right vertical light']);
  this.executeCharTest('┾', ['box drawings right heavy and left vertical light']);
  this.executeCharTest('┿', ['box drawings vertical light and horizontal heavy']);
  this.executeCharTest('╀', ['box drawings up heavy and down horizontal light']);
  this.executeCharTest('╁', ['box drawings down heavy and up horizontal light']);
  this.executeCharTest('╂', ['box drawings vertical heavy and horizontal light']);
  this.executeCharTest('╃', ['box drawings left up heavy and right down light']);
  this.executeCharTest('╄', ['box drawings right up heavy and left down light']);
  this.executeCharTest('╅', ['box drawings left down heavy and right up light']);
  this.executeCharTest('╆', ['box drawings right down heavy and left up light']);
  this.executeCharTest('╇', ['box drawings down light and up horizontal heavy']);
  this.executeCharTest('╈', ['box drawings up light and down horizontal heavy']);
  this.executeCharTest('╉', ['box drawings right light and left vertical heavy']);
  this.executeCharTest('╊', ['box drawings left light and right vertical heavy']);
  this.executeCharTest('╋', ['box drawings heavy vertical and horizontal']);
  this.executeCharTest('╌', ['box drawings light double dash horizontal']);
  this.executeCharTest('╍', ['box drawings heavy double dash horizontal']);
  this.executeCharTest('╎', ['box drawings light double dash vertical']);
  this.executeCharTest('╏', ['box drawings heavy double dash vertical']);
  this.executeCharTest('═', ['box drawings double horizontal']);
  this.executeCharTest('║', ['box drawings double vertical']);
  this.executeCharTest('╒', ['box drawings down single and right double']);
  this.executeCharTest('╓', ['box drawings down double and right single']);
  this.executeCharTest('╔', ['box drawings double down and right']);
  this.executeCharTest('╕', ['box drawings down single and left double']);
  this.executeCharTest('╖', ['box drawings down double and left single']);
  this.executeCharTest('╗', ['box drawings double down and left']);
  this.executeCharTest('╘', ['box drawings up single and right double']);
  this.executeCharTest('╙', ['box drawings up double and right single']);
  this.executeCharTest('╚', ['box drawings double up and right']);
  this.executeCharTest('╛', ['box drawings up single and left double']);
  this.executeCharTest('╜', ['box drawings up double and left single']);
  this.executeCharTest('╝', ['box drawings double up and left']);
  this.executeCharTest('╞', ['box drawings vertical single and right double']);
  this.executeCharTest('╟', ['box drawings vertical double and right single']);
  this.executeCharTest('╠', ['box drawings double vertical and right']);
  this.executeCharTest('╡', ['box drawings vertical single and left double']);
  this.executeCharTest('╢', ['box drawings vertical double and left single']);
  this.executeCharTest('╣', ['box drawings double vertical and left']);
  this.executeCharTest('╤', ['box drawings down single and horizontal double']);
  this.executeCharTest('╥', ['box drawings down double and horizontal single']);
  this.executeCharTest('╦', ['box drawings double down and horizontal']);
  this.executeCharTest('╧', ['box drawings up single and horizontal double']);
  this.executeCharTest('╨', ['box drawings up double and horizontal single']);
  this.executeCharTest('╩', ['box drawings double up and horizontal']);
  this.executeCharTest('╪', ['box drawings vertical single and horizontal double']);
  this.executeCharTest('╫', ['box drawings vertical double and horizontal single']);
  this.executeCharTest('╬', ['box drawings double vertical and horizontal']);
  this.executeCharTest('╭', ['box drawings light arc down and right']);
  this.executeCharTest('╮', ['box drawings light arc down and left']);
  this.executeCharTest('╯', ['box drawings light arc up and left']);
  this.executeCharTest('╰', ['box drawings light arc up and right']);
  this.executeCharTest('╱', ['box drawings light diagonal upper right to lower left']);
  this.executeCharTest('╲', ['box drawings light diagonal upper left to lower right']);
  this.executeCharTest('╳', ['box drawings light diagonal cross']);
  this.executeCharTest('╴', ['box drawings light left']);
  this.executeCharTest('╵', ['box drawings light up']);
  this.executeCharTest('╶', ['box drawings light right']);
  this.executeCharTest('╷', ['box drawings light down']);
  this.executeCharTest('╸', ['box drawings heavy left']);
  this.executeCharTest('╹', ['box drawings heavy up']);
  this.executeCharTest('╺', ['box drawings heavy right']);
  this.executeCharTest('╻', ['box drawings heavy down']);
  this.executeCharTest('╼', ['box drawings light left and heavy right']);
  this.executeCharTest('╽', ['box drawings light up and heavy down']);
  this.executeCharTest('╾', ['box drawings heavy left and light right']);
  this.executeCharTest('╿', ['box drawings heavy up and light down']);
  this.executeCharTest('▀', ['upper half block']);
  this.executeCharTest('▁', ['lower one eighth block']);
  this.executeCharTest('▂', ['lower one quarter block']);
  this.executeCharTest('▃', ['lower three eighths block']);
  this.executeCharTest('▄', ['lower half block']);
  this.executeCharTest('▅', ['lower five eighths block']);
  this.executeCharTest('▆', ['lower three quarters block']);
  this.executeCharTest('▇', ['lower seven eighths block']);
  this.executeCharTest('█', ['full block']);
  this.executeCharTest('▉', ['left seven eighths block']);
  this.executeCharTest('▊', ['left three quarters block']);
  this.executeCharTest('▋', ['left five eighths block']);
  this.executeCharTest('▌', ['left half block']);
  this.executeCharTest('▍', ['left three eighths block']);
  this.executeCharTest('▎', ['left one quarter block']);
  this.executeCharTest('▏', ['left one eighth block']);
  this.executeCharTest('▐', ['right half block']);
  this.executeCharTest('░', ['light shade']);
  this.executeCharTest('▒', ['medium shade']);
  this.executeCharTest('▓', ['dark shade']);
  this.executeCharTest('▔', ['upper one eighth block']);
  this.executeCharTest('▕', ['right one eighth block']);
  this.executeCharTest('▖', ['quadrant lower left']);
  this.executeCharTest('▗', ['quadrant lower right']);
  this.executeCharTest('▘', ['quadrant upper left']);
  this.executeCharTest('▙', ['quadrant upper left and lower left and lower right']);
  this.executeCharTest('▚', ['quadrant upper left and lower right']);
  this.executeCharTest('▛', ['quadrant upper left and upper right and lower left']);
  this.executeCharTest('▜', ['quadrant upper left and upper right and lower right']);
  this.executeCharTest('▝', ['quadrant upper right']);
  this.executeCharTest('▞', ['quadrant upper right and lower left']);
  this.executeCharTest('▟', ['quadrant upper right and lower left and lower right']);
  this.executeCharTest('■', ['black square']);
  this.executeCharTest('□', ['white square']);
  this.executeCharTest('▢', ['white square with rounded corners']);
  this.executeCharTest('▣', ['white square containing black small square']);
  this.executeCharTest('▤', ['square with horizontal fill']);
  this.executeCharTest('▥', ['square with vertical fill']);
  this.executeCharTest('▦', ['square with orthogonal crosshatch fill']);
  this.executeCharTest('▧', ['square with upper left to lower right fill']);
  this.executeCharTest('▨', ['square with upper right to lower left fill']);
  this.executeCharTest('▩', ['square with diagonal crosshatch fill']);
  this.executeCharTest('▪', ['black small square']);
  this.executeCharTest('▫', ['white small square']);
  this.executeCharTest('▬', ['black rectangle']);
  this.executeCharTest('▭', ['white rectangle']);
  this.executeCharTest('▮', ['black vertical rectangle']);
  this.executeCharTest('▯', ['white vertical rectangle']);
  this.executeCharTest('▰', ['black parallelogram']);
  this.executeCharTest('▱', ['white parallelogram']);
  this.executeCharTest('▲', ['black up pointing triangle']);
  this.executeCharTest('△', ['white up pointing triangle']);
  this.executeCharTest('▴', ['black up pointing small triangle']);
  this.executeCharTest('▵', ['white up pointing small triangle']);
  this.executeCharTest('▶', ['black right pointing triangle']);
  this.executeCharTest('▷', ['white right pointing triangle']);
  this.executeCharTest('▸', ['black right pointing small triangle']);
  this.executeCharTest('▹', ['white right pointing small triangle']);
  this.executeCharTest('►', ['black right pointing pointer']);
  this.executeCharTest('▻', ['white right pointing pointer']);
  this.executeCharTest('▼', ['black down pointing triangle']);
  this.executeCharTest('▽', ['white down pointing triangle']);
  this.executeCharTest('▾', ['black down pointing small triangle']);
  this.executeCharTest('▿', ['white down pointing small triangle']);
  this.executeCharTest('◀', ['black left pointing triangle']);
  this.executeCharTest('◁', ['white left pointing triangle']);
  this.executeCharTest('◂', ['black left pointing small triangle']);
  this.executeCharTest('◃', ['white left pointing small triangle']);
  this.executeCharTest('◄', ['black left pointing pointer']);
  this.executeCharTest('◅', ['white left pointing pointer']);
  this.executeCharTest('◆', ['black diamond']);
  this.executeCharTest('◇', ['white diamond']);
  this.executeCharTest('◈', ['white diamond containing black small diamond']);
  this.executeCharTest('◉', ['fisheye']);
  this.executeCharTest('◊', ['lozenge']);
  this.executeCharTest('○', ['white circle']);
  this.executeCharTest('◌', ['dotted circle']);
  this.executeCharTest('◍', ['circle with vertical fill']);
  this.executeCharTest('◎', ['bullseye']);
  this.executeCharTest('●', ['black circle']);
  this.executeCharTest('◐', ['circle with left half black']);
  this.executeCharTest('◑', ['circle with right half black']);
  this.executeCharTest('◒', ['circle with lower half black']);
  this.executeCharTest('◓', ['circle with upper half black']);
  this.executeCharTest('◔', ['circle with upper right quadrant black']);
  this.executeCharTest('◕', ['circle with all but upper left quadrant black']);
  this.executeCharTest('◖', ['left half black circle']);
  this.executeCharTest('◗', ['right half black circle']);
  this.executeCharTest('◘', ['inverse bullet']);
  this.executeCharTest('◙', ['inverse white circle']);
  this.executeCharTest('◚', ['upper half inverse white circle']);
  this.executeCharTest('◛', ['lower half inverse white circle']);
  this.executeCharTest('◜', ['upper left quadrant circular arc']);
  this.executeCharTest('◝', ['upper right quadrant circular arc']);
  this.executeCharTest('◞', ['lower right quadrant circular arc']);
  this.executeCharTest('◟', ['lower left quadrant circular arc']);
  this.executeCharTest('◠', ['upper half circle']);
  this.executeCharTest('◡', ['lower half circle']);
  this.executeCharTest('◢', ['black lower right triangle']);
  this.executeCharTest('◣', ['black lower left triangle']);
  this.executeCharTest('◤', ['black upper left triangle']);
  this.executeCharTest('◥', ['black upper right triangle']);
  this.executeCharTest('◦', ['white bullet']);
  this.executeCharTest('◧', ['square with left half black']);
  this.executeCharTest('◨', ['square with right half black']);
  this.executeCharTest('◩', ['square with upper left diagonal half black']);
  this.executeCharTest('◪', ['square with lower right diagonal half black']);
  this.executeCharTest('◫', ['white square with vertical bisecting line']);
  this.executeCharTest('◬', ['white up pointing triangle with dot']);
  this.executeCharTest('◭', ['up pointing triangle with left half black']);
  this.executeCharTest('◮', ['up pointing triangle with right half black']);
  this.executeCharTest('◯', ['large circle']);
  this.executeCharTest('◰', ['white square with upper left quadrant']);
  this.executeCharTest('◱', ['white square with lower left quadrant']);
  this.executeCharTest('◲', ['white square with lower right quadrant']);
  this.executeCharTest('◳', ['white square with upper right quadrant']);
  this.executeCharTest('◴', ['white circle with upper left quadrant']);
  this.executeCharTest('◵', ['white circle with lower left quadrant']);
  this.executeCharTest('◶', ['white circle with lower right quadrant']);
  this.executeCharTest('◷', ['white circle with upper right quadrant']);
  this.executeCharTest('◸', ['upper left triangle']);
  this.executeCharTest('◹', ['upper right triangle']);
  this.executeCharTest('◺', ['lower left triangle']);
  this.executeCharTest('◻', ['white medium square']);
  this.executeCharTest('◼', ['black medium square']);
  this.executeCharTest('◽', ['white medium small square']);
  this.executeCharTest('◾', ['black medium small square']);
  this.executeCharTest('◿', ['lower right triangle']);
  this.executeCharTest('⬒', ['square with top half black']);
  this.executeCharTest('⬓', ['square with bottom half black']);
  this.executeCharTest('⬔', ['square with upper right diagonal half black']);
  this.executeCharTest('⬕', ['square with lower left diagonal half black']);
  this.executeCharTest('⬖', ['diamond with left half black']);
  this.executeCharTest('⬗', ['diamond with right half black']);
  this.executeCharTest('⬘', ['diamond with top half black']);
  this.executeCharTest('⬙', ['diamond with bottom half black']);
  this.executeCharTest('⬚', ['dotted square']);
  this.executeCharTest('⬛', ['black large square']);
  this.executeCharTest('⬜', ['white large square']);
  this.executeCharTest('⬝', ['black very small square']);
  this.executeCharTest('⬞', ['white very small square']);
  this.executeCharTest('⬟', ['black pentagon']);
  this.executeCharTest('⬠', ['white pentagon']);
  this.executeCharTest('⬡', ['white hexagon']);
  this.executeCharTest('⬢', ['black hexagon']);
  this.executeCharTest('⬣', ['horizontal black hexagon']);
  this.executeCharTest('⬤', ['black large circle']);
  this.executeCharTest('⬥', ['black medium diamond']);
  this.executeCharTest('⬦', ['white medium diamond']);
  this.executeCharTest('⬧', ['black medium lozenge']);
  this.executeCharTest('⬨', ['white medium lozenge']);
  this.executeCharTest('⬩', ['black small diamond']);
  this.executeCharTest('⬪', ['black small lozenge']);
  this.executeCharTest('⬫', ['white small lozenge']);
  this.executeCharTest('⬬', ['black horizontal ellipse']);
  this.executeCharTest('⬭', ['white horizontal ellipse']);
  this.executeCharTest('⬮', ['black vertical ellipse']);
  this.executeCharTest('⬯', ['white vertical ellipse']);
  this.executeCharTest('⭐', ['white medium star']);
  this.executeCharTest('⭑', ['black small star']);
  this.executeCharTest('⭒', ['white small star']);
  this.executeCharTest('⭓', ['black right pointing pentagon']);
  this.executeCharTest('⭔', ['white right pointing pentagon']);
  this.executeCharTest('⭕', ['heavy large circle']);
  this.executeCharTest('⭖', ['heavy oval with oval inside']);
  this.executeCharTest('⭗', ['heavy circle with circle inside']);
  this.executeCharTest('⭘', ['heavy circle']);
  this.executeCharTest('⭙', ['heavy circled saltire']);
  this.executeCharTest('↼', ['left harpoon with barb up']);
  this.executeCharTest('↽', ['left harpoon with barb down']);
  this.executeCharTest('↾', ['up harpoon with barb right']);
  this.executeCharTest('↿', ['up harpoon with barb left']);
  this.executeCharTest('⇀', ['right harpoon with barb up']);
  this.executeCharTest('⇁', ['right harpoon with barb down']);
  this.executeCharTest('⇂', ['down harpoon with barb right']);
  this.executeCharTest('⇃', ['down harpoon with barb left']);
  this.executeCharTest('⇋', ['left harpoon over right harpoon']);
  this.executeCharTest('⇌', ['right harpoon over left harpoon']);
  this.executeCharTest('⥊', ['left barb up right barb down harpoon']);
  this.executeCharTest('⥋', ['left barb down right barb up harpoon']);
  this.executeCharTest('⥌', ['up barb right down barb left harpoon']);
  this.executeCharTest('⥍', ['up barb left down barb right harpoon']);
  this.executeCharTest('⥎', ['left barb up right barb up harpoon']);
  this.executeCharTest('⥏', ['up barb right down barb right harpoon']);
  this.executeCharTest('⥐', ['left barb down right barb down harpoon']);
  this.executeCharTest('⥑', ['up barb left down barb left harpoon']);
  this.executeCharTest('⥒', ['left harpoon with barb up to bar']);
  this.executeCharTest('⥓', ['right harpoon with barb up to bar']);
  this.executeCharTest('⥔', ['up harpoon with barb right to bar']);
  this.executeCharTest('⥕', ['down harpoon with barb right to bar']);
  this.executeCharTest('⥖', ['left harpoon with barb down to bar']);
  this.executeCharTest('⥗', ['right harpoon with barb down to bar']);
  this.executeCharTest('⥘', ['up harpoon with barb left to bar']);
  this.executeCharTest('⥙', ['down harpoon with barb left to bar']);
  this.executeCharTest('⥚', ['left harpoon with barb up from bar']);
  this.executeCharTest('⥛', ['right harpoon with barb up from bar']);
  this.executeCharTest('⥜', ['up harpoon with barb right from bar']);
  this.executeCharTest('⥝', ['down harpoon with barb right from bar']);
  this.executeCharTest('⥞', ['left harpoon with barb down from bar']);
  this.executeCharTest('⥟', ['right harpoon with barb down from bar']);
  this.executeCharTest('⥠', ['up harpoon with barb left from bar']);
  this.executeCharTest('⥡', ['down harpoon with barb left from bar']);
  this.executeCharTest('⥢', ['left harpoon with barb up above left harpoon with barb down']);
  this.executeCharTest('⥣', ['up harpoon with barb left beside up harpoon with barb right']);
  this.executeCharTest('⥤', ['right harpoon with barb up above right harpoon with barb down']);
  this.executeCharTest('⥥', ['down harpoon with barb left beside down harpoon with barb right']);
  this.executeCharTest('⥦', ['left harpoon with barb up above right harpoon with barb up']);
  this.executeCharTest('⥧', ['left harpoon with barb down above right harpoon with barb down']);
  this.executeCharTest('⥨', ['right harpoon with barb up above left harpoon with barb up']);
  this.executeCharTest('⥩', ['right harpoon with barb down above left harpoon with barb down']);
  this.executeCharTest('⥪', ['left harpoon with barb up above long dash']);
  this.executeCharTest('⥫', ['left harpoon with barb down below long dash']);
  this.executeCharTest('⥬', ['right harpoon with barb up above long dash']);
  this.executeCharTest('⥭', ['right harpoon with barb down below long dash']);
  this.executeCharTest('⥮', ['up harpoon with barb left beside down harpoon with barb right']);
  this.executeCharTest('⥯', ['down harpoon with barb left beside up harpoon with barb right']);
  this.executeCharTest('⥼', ['left fish tail']);
  this.executeCharTest('⥽', ['right fish tail']);
  this.executeCharTest('⥾', ['up fish tail']);
  this.executeCharTest('⥿', ['down fish tail']);
  this.executeCharTest('ℏ', ['italic h over two pi']);
  this.executeCharTest('℔', ['l b bar']);
  this.executeCharTest('№', ['numero']);
  this.executeCharTest('℗', ['sound recording copyright']);
  this.executeCharTest('℞', ['prescription take']);
  this.executeCharTest('℟', ['response']);
  this.executeCharTest('℠', ['service mark']);
  this.executeCharTest('℡', ['telephone sign']);
  this.executeCharTest('™', ['trade mark']);
  this.executeCharTest('℣', ['versicle']);
  this.executeCharTest('℥', ['ounce']);
  this.executeCharTest('Ω', ['ohm']);
  this.executeCharTest('℧', ['inverted ohm']);
  this.executeCharTest('K', ['kelvin']);
  this.executeCharTest('Å', ['angstrom']);
  this.executeCharTest('℮', ['estimated']);
  this.executeCharTest('Ⅎ', ['turned upper F']);
  this.executeCharTest('ℹ', ['information source']);
  this.executeCharTest('℺', ['rotated upper Q']);
  this.executeCharTest('℻', ['facsimile sign']);
  this.executeCharTest('⅁', ['turned sans serif upper G']);
  this.executeCharTest('⅂', ['turned sans serif upper L']);
  this.executeCharTest('⅃', ['reversed sans serif upper L']);
  this.executeCharTest('⅄', ['turned sans serif upper Y']);
  this.executeCharTest('!', ['exclamation mark']);
  this.executeCharTest('#', ['number sign']);
  this.executeCharTest('$', ['dollar sign']);
  this.executeCharTest('%', ['percent sign']);
  this.executeCharTest('&', ['ampersand']);
  this.executeCharTest('\'', ['prime']);
  this.executeCharTest('*', ['asterisk']);
  this.executeCharTest('+', ['plus']);
  this.executeCharTest(',', ['comma']);
  this.executeCharTest('-', ['hyphen']);
  this.executeCharTest('.', ['period']);
  this.executeCharTest('/', ['slash']);
  this.executeCharTest(':', ['colon']);
  this.executeCharTest(';', ['semicolon']);
  this.executeCharTest('<', ['is less than']);
  this.executeCharTest('=', ['equals']);
  this.executeCharTest('>', ['is greater than']);
  this.executeCharTest('?', ['question mark']);
  this.executeCharTest('@', ['commercial-at']);
  this.executeCharTest('\\', ['reverse-solidus']);
  this.executeCharTest('^', ['caret']);
  this.executeCharTest('_', ['bar']);
  this.executeCharTest('`', ['grave']);
  this.executeCharTest('|', ['divides']);
  this.executeCharTest('~', ['tilde']);
  this.executeCharTest('¡', ['inverted exclamation mark']);
  this.executeCharTest('¢', ['cent sign']);
  this.executeCharTest('£', ['pound sign']);
  this.executeCharTest('¤', ['currency sign']);
  this.executeCharTest('¥', ['yen-sign']);
  this.executeCharTest('¦', ['broken-vertical-bar']);
  this.executeCharTest('§', ['section sign']);
  this.executeCharTest('¨', ['two-dots']);
  this.executeCharTest('©', ['copyright sign']);
  this.executeCharTest('ª', ['feminine-ordinal-indicator']);
  this.executeCharTest('«', ['left-pointing-guillemet']);
  this.executeCharTest('¬', ['not sign']);
  this.executeCharTest('®', ['trade mark sign']);
  this.executeCharTest('¯', ['bar']);
  this.executeCharTest('°', ['degrees']);
  this.executeCharTest('±', ['plus or minus']);
  this.executeCharTest('´', ['acute']);
  this.executeCharTest('µ', ['micro sign']);
  this.executeCharTest('¶', ['paragraph sign']);
  this.executeCharTest('·', ['times']);
  this.executeCharTest('¸', ['cedilla']);
  this.executeCharTest('º', ['masculine-ordinal-indicator']);
  this.executeCharTest('»', ['right-pointing-guillemet']);
  this.executeCharTest('¿', ['inverted question mark']);
  this.executeCharTest('×', ['times']);
  this.executeCharTest('÷', ['division sign']);
  this.executeCharTest('˘', ['breve']);
  this.executeCharTest('˙', ['dot']);
  this.executeCharTest('˚', ['ring-above']);
  this.executeCharTest('˛', ['ogonek']);
  this.executeCharTest('˜', ['tilde']);
  this.executeCharTest('˝', ['double-acute']);
  this.executeCharTest('‐', ['hyphen']);
  this.executeCharTest('‑', ['non-breaking-hyphen']);
  this.executeCharTest('‒', ['figure-dash']);
  this.executeCharTest('–', ['en-dash']);
  this.executeCharTest('—', ['em-dash']);
  this.executeCharTest('―', ['quotation-dash']);
  this.executeCharTest('‖', ['double-vertical-bar']);
  this.executeCharTest('‗', ['double-underscore']);
  this.executeCharTest('‘', ['single-turned-comma-quotation-mark']);
  this.executeCharTest('’', ['single-comma-quotation-mark']);
  this.executeCharTest('‚', ['low-single-comma-quotation-mark']);
  this.executeCharTest('‛', ['single-reversed-comma-quotation-mark']);
  this.executeCharTest('“', ['double-turned-comma-quotation-mark']);
  this.executeCharTest('”', ['double-comma-quotation-mark']);
  this.executeCharTest('„', ['low-double-comma-quotation-mark']);
  this.executeCharTest('‟', ['double-reversed-comma-quotation-mark']);
  this.executeCharTest('†', ['dagger']);
  this.executeCharTest('‡', ['double-dagger']);
  this.executeCharTest('•', ['bullet']);
  this.executeCharTest('‣', ['triangular-bullet']);
  this.executeCharTest('․', ['one-dot-leader']);
  this.executeCharTest('‥', ['two-dot-leader']);
  this.executeCharTest('…', ['dot dot dot']);
  this.executeCharTest('‧', ['hyphenation-point']);
  this.executeCharTest('‰', ['per-mille']);
  this.executeCharTest('‱', ['per-ten-thousand']);
  this.executeCharTest('′', ['prime']);
  this.executeCharTest('″', ['double prime']);
  this.executeCharTest('‴', ['triple prime']);
  this.executeCharTest('‵', ['reversed-prime']);
  this.executeCharTest('‶', ['reversed-double-prime']);
  this.executeCharTest('‷', ['reversed-triple-prime']);
  this.executeCharTest('‸', ['caret']);
  this.executeCharTest('‹', ['left-pointing-single-guillemet']);
  this.executeCharTest('›', ['right-pointing-single-guillemet']);
  this.executeCharTest('※', ['reference-mark']);
  this.executeCharTest('‼', ['double-exclamation-mark']);
  this.executeCharTest('‽', ['interrobang']);
  this.executeCharTest('‾', ['bar']);
  this.executeCharTest('‿', ['undertie']);
  this.executeCharTest('⁀', ['character-tie']);
  this.executeCharTest('⁁', ['caret-insertion-point']);
  this.executeCharTest('⁂', ['asterism']);
  this.executeCharTest('⁃', ['hyphen-bullet']);
  this.executeCharTest('⁄', ['fraction-slash']);
  this.executeCharTest('⁇', ['double-question-mark']);
  this.executeCharTest('⁈', ['question-exclamation-mark']);
  this.executeCharTest('⁉', ['exclamation-question-mark']);
  this.executeCharTest('⁋', ['reversed-pilcrow']);
  this.executeCharTest('⁌', ['black-leftwards-bullet']);
  this.executeCharTest('⁍', ['black-rightwards-bullet']);
  this.executeCharTest('⁎', ['low-asterisk']);
  this.executeCharTest('⁏', ['reversed-semicolon']);
  this.executeCharTest('⁐', ['close-up']);
  this.executeCharTest('⁑', ['two-asterisks-aligned-vertically']);
  this.executeCharTest('⁒', ['commercial-minus']);
  this.executeCharTest('⁓', ['swung-dash']);
  this.executeCharTest('⁔', ['inverted-undertie']);
  this.executeCharTest('⁕', ['flower-punctuation-mark']);
  this.executeCharTest('⁖', ['three-dot-punctuation']);
  this.executeCharTest('⁗', ['quadruple prime']);
  this.executeCharTest('⁘', ['four-dot-punctuation']);
  this.executeCharTest('⁙', ['five-dot-punctuation']);
  this.executeCharTest('⁚', ['two-dot-punctuation']);
  this.executeCharTest('⁛', ['four-dot-mark']);
  this.executeCharTest('⁜', ['dotted-cross']);
  this.executeCharTest('⁝', ['tricolon']);
  this.executeCharTest('⁞', ['vertical-four-dots']);
  this.executeCharTest('⁺', ['superscript-plus']);
  this.executeCharTest('⁻', ['superscript-hyphen-minus']);
  this.executeCharTest('⁼', ['superscript-equals']);
  this.executeCharTest('⁽', ['superscript-opening-parenthesis']);
  this.executeCharTest('⁾', ['superscript-closing-parenthesis']);
  this.executeCharTest('₊', ['subscript-plus']);
  this.executeCharTest('₋', ['subscript-hyphen-minus']);
  this.executeCharTest('₌', ['subscript-equals']);
  this.executeCharTest('₍', ['subscript-opening-parenthesis']);
  this.executeCharTest('₎', ['subscript-closing-parenthesis']);
  this.executeCharTest('⅊', ['property-line']);
  this.executeCharTest('⅋', ['turned-ampersand']);
  this.executeCharTest('⅌', ['per-sign']);
  this.executeCharTest('⅍', ['aktieselskab']);
  this.executeCharTest('ⅎ', ['turned-small-f']);
  this.executeCharTest('∀', ['for-all']);
  this.executeCharTest('∁', ['complement']);
  this.executeCharTest('∂', ['partial-differential']);
  this.executeCharTest('∃', ['there-exists']);
  this.executeCharTest('∄', ['there-does-not-exist']);
  this.executeCharTest('∅', ['empty-set']);
  this.executeCharTest('∆', ['increment']);
  this.executeCharTest('∇', ['nabla']);
  this.executeCharTest('∈', ['is a member of']);
  this.executeCharTest('∉', ['is not a member of']);
  this.executeCharTest('∊', ['is a member of']);
  this.executeCharTest('∋', ['contains-as-member']);
  this.executeCharTest('∌', ['does-not-contain-as-member']);
  this.executeCharTest('∍', ['small-contains-as-member']);
  this.executeCharTest('∎', ['end-of-proof']);
  this.executeCharTest('∏', ['product']);
  this.executeCharTest('∐', ['coproduct']);
  this.executeCharTest('∑', ['sum']);
  this.executeCharTest('−', ['minus']);
  this.executeCharTest('∓', ['minus or plus']);
  this.executeCharTest('∔', ['dot-plus']);
  this.executeCharTest('∕', ['division-slash']);
  this.executeCharTest('∖', ['set-minus']);
  this.executeCharTest('∗', ['asterisk']);
  this.executeCharTest('∘', ['composed with']);
  this.executeCharTest('∙', ['bullet']);
  this.executeCharTest('√', ['square-root']);
  this.executeCharTest('∛', ['cube-root']);
  this.executeCharTest('∜', ['fourth-root']);
  this.executeCharTest('∝', ['proportional-to']);
  this.executeCharTest('∞', ['infinity']);
  this.executeCharTest('∟', ['right-angle']);
  this.executeCharTest('∠', ['angle']);
  this.executeCharTest('∡', ['measured-angle']);
  this.executeCharTest('∢', ['spherical-angle']);
  this.executeCharTest('∣', ['bar']);
  this.executeCharTest('∤', ['does-not-divide']);
  this.executeCharTest('∥', ['parallel-to']);
  this.executeCharTest('∦', ['not-parallel-to']);
  this.executeCharTest('∧', ['logical-and']);
  this.executeCharTest('∨', ['logical-or']);
  this.executeCharTest('∩', ['intersection']);
  this.executeCharTest('∪', ['union']);
  this.executeCharTest('∫', ['integral']);
  this.executeCharTest('∬', ['double-integral']);
  this.executeCharTest('∭', ['triple-integral']);
  this.executeCharTest('∮', ['contour-integral']);
  this.executeCharTest('∯', ['surface-integral']);
  this.executeCharTest('∰', ['volume-integral']);
  this.executeCharTest('∱', ['clockwise-integral']);
  this.executeCharTest('∲', ['clockwise-contour-integral']);
  this.executeCharTest('∳', ['anticlockwise-contour-integral']);
  this.executeCharTest('∴', ['therefore']);
  this.executeCharTest('∵', ['because']);
  this.executeCharTest('∶', ['ratio']);
  this.executeCharTest('∷', ['proportion']);
  this.executeCharTest('∸', ['dot-minus']);
  this.executeCharTest('∹', ['excess']);
  this.executeCharTest('∺', ['geometric-proportion']);
  this.executeCharTest('∻', ['homothetic']);
  this.executeCharTest('∼', ['tilde']);
  this.executeCharTest('∽', ['reversed-tilde']);
  this.executeCharTest('∾', ['inverted-lazy-s']);
  this.executeCharTest('∿', ['sine-wave']);
  this.executeCharTest('≀', ['wreath-product']);
  this.executeCharTest('≁', ['not-tilde']);
  this.executeCharTest('≂', ['minus-tilde']);
  this.executeCharTest('≃', ['asymptotically-equals']);
  this.executeCharTest('≄', ['not-asymptotically-equals']);
  this.executeCharTest('≅', ['approximately-equals']);
  this.executeCharTest('≆', ['approximately-but-not-actually-equals']);
  this.executeCharTest('≇', ['neither-approximately-nor-actually-equals']);
  this.executeCharTest('≈', ['almost-equals']);
  this.executeCharTest('≉', ['not-almost-equals']);
  this.executeCharTest('≊', ['almost-equal-or-equal-to']);
  this.executeCharTest('≋', ['triple-tilde']);
  this.executeCharTest('≌', ['all-equals']);
  this.executeCharTest('≍', ['equivalent-to']);
  this.executeCharTest('≎', ['geometrically-equivalent-to']);
  this.executeCharTest('≏', ['difference-between']);
  this.executeCharTest('≐', ['approaches-the-limit']);
  this.executeCharTest('≑', ['geometrically-equals']);
  this.executeCharTest('≒', ['approximately-equals-or-the-image-of']);
  this.executeCharTest('≓', ['image-of-or-approximately-equals']);
  this.executeCharTest('≔', ['colon-equal']);
  this.executeCharTest('≕', ['equal-colon']);
  this.executeCharTest('≖', ['ring-in-equals']);
  this.executeCharTest('≗', ['ring-equals']);
  this.executeCharTest('≘', ['corresponds-to']);
  this.executeCharTest('≙', ['estimates']);
  this.executeCharTest('≚', ['is equiangular to']);
  this.executeCharTest('≛', ['star equals']);
  this.executeCharTest('≜', ['delta equals']);
  this.executeCharTest('≝', ['is defined to be']);
  this.executeCharTest('≞', ['is measured by']);
  this.executeCharTest('≟', ['questioned equals']);
  this.executeCharTest('≠', ['not equals']);
  this.executeCharTest('≡', ['is identical to']);
  this.executeCharTest('≢', ['is not identical to']);
  this.executeCharTest('≣', ['is strictly equivalent to']);
  this.executeCharTest('≤', ['is less than or equal to']);
  this.executeCharTest('≥', ['is greater than or equal to']);
  this.executeCharTest('≦', ['is less than over equals']);
  this.executeCharTest('≧', ['is greater than over equals']);
  this.executeCharTest('≨', ['is less than but not equals']);
  this.executeCharTest('≩', ['is greater than but not equals']);
  this.executeCharTest('≪', ['is much less than']);
  this.executeCharTest('≫', ['is much greater than']);
  this.executeCharTest('≬', ['between']);
  this.executeCharTest('≭', ['is not equivalent to']);
  this.executeCharTest('≮', ['is not less than']);
  this.executeCharTest('≯', ['is not greater than']);
  this.executeCharTest('≰', ['is neither less than nor equal to']);
  this.executeCharTest('≱', ['is neither greater than nor equal to']);
  this.executeCharTest('≲', ['is less than or equivalent to']);
  this.executeCharTest('≳', ['is greater than or equivalent to']);
  this.executeCharTest('≴', ['is neither less than nor equivalent to']);
  this.executeCharTest('≵', ['is neither greater than nor equivalent to']);
  this.executeCharTest('≶', ['is less than or greater than']);
  this.executeCharTest('≷', ['is greater than or less than']);
  this.executeCharTest('≸', ['is neither less than nor greater than']);
  this.executeCharTest('≹', ['is neither greater than nor less than']);
  this.executeCharTest('≺', ['precedes']);
  this.executeCharTest('≻', ['succeeds']);
  this.executeCharTest('≼', ['precedes-or-equal-to']);
  this.executeCharTest('≽', ['succeeds-or-equal-to']);
  this.executeCharTest('≾', ['precedes-or-equivalent-to']);
  this.executeCharTest('≿', ['succeeds-or-equivalent-to']);
  this.executeCharTest('⊀', ['does-not-precede']);
  this.executeCharTest('⊁', ['does-not-succeed']);
  this.executeCharTest('⊂', ['subset-of']);
  this.executeCharTest('⊃', ['superset-of']);
  this.executeCharTest('⊄', ['not-a-subset-of']);
  this.executeCharTest('⊅', ['not-a-superset-of']);
  this.executeCharTest('⊆', ['subset-of-or-equal-to']);
  this.executeCharTest('⊇', ['superset-of-or-equal-to']);
  this.executeCharTest('⊈', ['neither-a-subset-of-nor-equal-to']);
  this.executeCharTest('⊉', ['neither-a-superset-of-nor-equal-to']);
  this.executeCharTest('⊊', ['subset-of-or-not-equals']);
  this.executeCharTest('⊋', ['superset-of-or-not-equals']);
  this.executeCharTest('⊌', ['multiset']);
  this.executeCharTest('⊍', ['multiset-multiplication']);
  this.executeCharTest('⊎', ['multiset-union']);
  this.executeCharTest('⊏', ['square-image-of']);
  this.executeCharTest('⊐', ['square-original-of']);
  this.executeCharTest('⊑', ['square-image-of-or-equal-to']);
  this.executeCharTest('⊒', ['square-original-of-or-equal-to']);
  this.executeCharTest('⊓', ['square-cap']);
  this.executeCharTest('⊔', ['square-cup']);
  this.executeCharTest('⊕', ['circled-plus']);
  this.executeCharTest('⊖', ['circled-minus']);
  this.executeCharTest('⊗', ['circled-times']);
  this.executeCharTest('⊘', ['circled-division-slash']);
  this.executeCharTest('⊙', ['circled-dot']);
  this.executeCharTest('⊚', ['circled-ring']);
  this.executeCharTest('⊛', ['circled-asterisk']);
  this.executeCharTest('⊜', ['circled-equals']);
  this.executeCharTest('⊝', ['circled-dash']);
  this.executeCharTest('⊞', ['squared-plus']);
  this.executeCharTest('⊟', ['squared-minus']);
  this.executeCharTest('⊠', ['squared-times']);
  this.executeCharTest('⊡', ['squared-dot']);
  this.executeCharTest('⊢', ['right-tack']);
  this.executeCharTest('⊣', ['left-tack']);
  this.executeCharTest('⊤', ['down-tack']);
  this.executeCharTest('⊥', ['up-tack']);
  this.executeCharTest('⊦', ['assertion']);
  this.executeCharTest('⊧', ['models']);
  this.executeCharTest('⊨', ['true']);
  this.executeCharTest('⊩', ['forces']);
  this.executeCharTest('⊪', ['triple-vertical-bar-right-turnstile']);
  this.executeCharTest('⊫', ['double-vertical-bar-double-right-turnstile']);
  this.executeCharTest('⊬', ['does-not-prove']);
  this.executeCharTest('⊭', ['not-true']);
  this.executeCharTest('⊮', ['does-not-force']);
  this.executeCharTest('⊯', ['negated-double-vertical-bar-double-right-turnstile']);
  this.executeCharTest('⊰', ['precedes-under-relation']);
  this.executeCharTest('⊱', ['succeeds-under-relation']);
  this.executeCharTest('⊲', ['normal-subgroup-of']);
  this.executeCharTest('⊳', ['contains-as-normal-subgroup']);
  this.executeCharTest('⊴', ['normal-subgroup-of-or-equal-to']);
  this.executeCharTest('⊵', ['contains-as-normal-subgroup-or-equal-to']);
  this.executeCharTest('⊶', ['original-of']);
  this.executeCharTest('⊷', ['image-of']);
  this.executeCharTest('⊸', ['multimap']);
  this.executeCharTest('⊹', ['hermitian-conjugate-matrix']);
  this.executeCharTest('⊺', ['intercalate']);
  this.executeCharTest('⊻', ['xor']);
  this.executeCharTest('⊼', ['nand']);
  this.executeCharTest('⊽', ['nor']);
  this.executeCharTest('⊿', ['right-triangle']);
  this.executeCharTest('⋀', ['logical-and']);
  this.executeCharTest('⋁', ['logical-or']);
  this.executeCharTest('⋂', ['intersection']);
  this.executeCharTest('⋃', ['union']);
  this.executeCharTest('⋄', ['diamond']);
  this.executeCharTest('⋅', ['times']);
  this.executeCharTest('⋆', ['star']);
  this.executeCharTest('⋇', ['division-times']);
  this.executeCharTest('⋈', ['bowtie']);
  this.executeCharTest('⋉', ['left-normal-factor-semidirect-product']);
  this.executeCharTest('⋊', ['right-normal-factor-semidirect-product']);
  this.executeCharTest('⋋', ['left-semidirect-product']);
  this.executeCharTest('⋌', ['right-semidirect-product']);
  this.executeCharTest('⋍', ['reversed-tilde-equals']);
  this.executeCharTest('⋎', ['curly-logical-or']);
  this.executeCharTest('⋏', ['curly-logical-and']);
  this.executeCharTest('⋐', ['double-subset']);
  this.executeCharTest('⋑', ['double-superset']);
  this.executeCharTest('⋒', ['double-intersection']);
  this.executeCharTest('⋓', ['double-union']);
  this.executeCharTest('⋔', ['pitchfork']);
  this.executeCharTest('⋕', ['equal-and-parallel-to']);
  this.executeCharTest('⋖', ['less-than-dot']);
  this.executeCharTest('⋗', ['greater-than-dot']);
  this.executeCharTest('⋘', ['very-much-less-than']);
  this.executeCharTest('⋙', ['very-much-greater-than']);
  this.executeCharTest('⋚', ['less-than-equals-or-greater-than']);
  this.executeCharTest('⋛', ['greater-than-equals-or-less-than']);
  this.executeCharTest('⋜', ['equals-or-less-than']);
  this.executeCharTest('⋝', ['equals-or-greater-than']);
  this.executeCharTest('⋞', ['equals-or-precedes']);
  this.executeCharTest('⋟', ['equals-or-succeeds']);
  this.executeCharTest('⋠', ['does-not-precede-or-equal']);
  this.executeCharTest('⋡', ['does-not-succeed-or-equal']);
  this.executeCharTest('⋢', ['not-square-image-of-or-equal-to']);
  this.executeCharTest('⋣', ['not-square-original-of-or-equal-to']);
  this.executeCharTest('⋤', ['square-image-of-or-not-equals']);
  this.executeCharTest('⋥', ['square-original-of-or-not-equals']);
  this.executeCharTest('⋦', ['less-than-but-not-equivalent-to']);
  this.executeCharTest('⋧', ['greater-than-but-not-equivalent-to']);
  this.executeCharTest('⋨', ['precedes-but-not-equivalent-to']);
  this.executeCharTest('⋩', ['succeeds-but-not-equivalent-to']);
  this.executeCharTest('⋪', ['not-normal-subgroup-of']);
  this.executeCharTest('⋫', ['does-not-contain-as-normal-subgroup']);
  this.executeCharTest('⋬', ['not-normal-subgroup-of-or-equal-to']);
  this.executeCharTest('⋭', ['does-not-contain-as-normal-subgroup-or-equal']);
  this.executeCharTest('⋮', ['vertical-ellipsis']);
  this.executeCharTest('⋯', ['dot dot dot']);
  this.executeCharTest('⋰', ['up-right-diagonal-ellipsis']);
  this.executeCharTest('⋱', ['down-right-diagonal-ellipsis']);
  this.executeCharTest('⋲', ['element-of-with-long-horizontal-stroke']);
  this.executeCharTest('⋳', ['element-of-with-vertical-bar-at-end-of-horizontal-stroke']);
  this.executeCharTest('⋴', ['small-element-of-with-vertical-bar-at-end-of-horizontal-stroke']);
  this.executeCharTest('⋵', ['element-of-with-dot-above']);
  this.executeCharTest('⋶', ['element-of-with-overbar']);
  this.executeCharTest('⋷', ['small-element-of-with-overbar']);
  this.executeCharTest('⋸', ['element-of-with-underbar']);
  this.executeCharTest('⋹', ['element-of-with-two-horizontal-strokes']);
  this.executeCharTest('⋺', ['contains-with-long-horizontal-stroke']);
  this.executeCharTest('⋻', ['contains-with-vertical-bar-at-end-of-horizontal-stroke']);
  this.executeCharTest('⋼', ['small-contains-with-vertical-bar-at-end-of-horizontal-stroke']);
  this.executeCharTest('⋽', ['contains-with-overbar']);
  this.executeCharTest('⋾', ['small-contains-with-overbar']);
  this.executeCharTest('⋿', ['z-notation-bag-membership']);
  this.executeCharTest('⌀', ['diameter-sign']);
  this.executeCharTest('⌂', ['house']);
  this.executeCharTest('⌅', ['projective']);
  this.executeCharTest('⌆', ['perspective']);
  this.executeCharTest('⌇', ['wavy-line']);
  this.executeCharTest('⌐', ['reversed-not']);
  this.executeCharTest('⌑', ['square-lozenge']);
  this.executeCharTest('⌒', ['arc']);
  this.executeCharTest('⌓', ['segment']);
  this.executeCharTest('⌔', ['sector']);
  this.executeCharTest('➕', ['bold-plus']);
  this.executeCharTest('➖', ['bold-minus']);
  this.executeCharTest('➗', ['bold-division']);
  this.executeCharTest('➰', ['curly-loop']);
  this.executeCharTest('➿', ['double-curly-loop']);
  this.executeCharTest('⟁', ['white-triangle-containing-small-white-triangle']);
  this.executeCharTest('⟂', ['perpendicular']);
  this.executeCharTest('⟃', ['open-subset']);
  this.executeCharTest('⟄', ['open-superset']);
  this.executeCharTest('⟇', ['or-with-dot-inside']);
  this.executeCharTest('⟈', ['reverse-solidus-preceding-subset']);
  this.executeCharTest('⟉', ['superset-preceding-solidus']);
  this.executeCharTest('⟊', ['vertical-bar-with-horizontal-stroke']);
  this.executeCharTest('⟋', ['mathematical-rising-diagonal']);
  this.executeCharTest('⟌', ['long-division']);
  this.executeCharTest('⟍', ['mathematical-falling-diagonal']);
  this.executeCharTest('⟎', ['squared-logical-and']);
  this.executeCharTest('⟏', ['squared-logical-or']);
  this.executeCharTest('⟐', ['white-diamond-with-centered-dot']);
  this.executeCharTest('⟑', ['and-with-dot']);
  this.executeCharTest('⟒', ['element-of-opening-upwards']);
  this.executeCharTest('⟓', ['lower-right-corner-with-dot']);
  this.executeCharTest('⟔', ['upper-left-corner-with-dot']);
  this.executeCharTest('⟕', ['left-outer-join']);
  this.executeCharTest('⟖', ['right-outer-join']);
  this.executeCharTest('⟗', ['full-outer-join']);
  this.executeCharTest('⟘', ['large-up-tack']);
  this.executeCharTest('⟙', ['large-down-tack']);
  this.executeCharTest('⟚', ['left-and-right-double-turnstile']);
  this.executeCharTest('⟛', ['left-and-right-tack']);
  this.executeCharTest('⟜', ['left-multimap']);
  this.executeCharTest('⟝', ['long-right-tack']);
  this.executeCharTest('⟞', ['long-left-tack']);
  this.executeCharTest('⟟', ['up-tack-with-circle-above']);
  this.executeCharTest('⟠', ['lozenge-divided-by-horizontal-rule']);
  this.executeCharTest('⟡', ['white-concave-sided-diamond']);
  this.executeCharTest('⟢', ['white-concave-sided-diamond-with-leftwards-tick']);
  this.executeCharTest('⟣', ['white-concave-sided-diamond-with-rightwards-tick']);
  this.executeCharTest('⟤', ['white-square-with-leftwards-tick']);
  this.executeCharTest('⟥', ['white-square-with-rightwards-tick']);
  this.executeCharTest('⤫', ['rising-diagonal-crossing-falling-diagonal']);
  this.executeCharTest('⤬', ['falling-diagonal-crossing-rising-diagonal']);
  this.executeCharTest('⦀', ['triple-vertical-bar-delimiter']);
  this.executeCharTest('⦁', ['z-notation-spot']);
  this.executeCharTest('⦂', ['z-notation-type-colon']);
  this.executeCharTest('⦙', ['dotted-fence']);
  this.executeCharTest('⦚', ['vertical-zigzag-line']);
  this.executeCharTest('⦰', ['reversed-empty-set']);
  this.executeCharTest('⦱', ['empty-set-with-overbar']);
  this.executeCharTest('⦲', ['empty-set-with-small-circle-above']);
  this.executeCharTest('⦵', ['circle-with-horizontal-bar']);
  this.executeCharTest('⦶', ['circled-vertical-bar']);
  this.executeCharTest('⦷', ['circled-parallel']);
  this.executeCharTest('⦸', ['circled-reverse-solidus']);
  this.executeCharTest('⦹', ['circled-perpendicular']);
  this.executeCharTest('⦺', ['circle-divided-by-horizontal-bar-and-top-half-divided-by-vertical-bar']);
  this.executeCharTest('⦻', ['circle-with-superimposed-x']);
  this.executeCharTest('⦼', ['circled-anticlockwise-rotated-division']);
  this.executeCharTest('⦾', ['circled-white-bullet']);
  this.executeCharTest('⦿', ['circled-bullet']);
  this.executeCharTest('⧀', ['circled-less-than']);
  this.executeCharTest('⧁', ['circled-greater-than']);
  this.executeCharTest('⧂', ['circle-with-small-circle-to-the-right']);
  this.executeCharTest('⧃', ['circle-with-two-horizontal-strokes-to-the-right']);
  this.executeCharTest('⧄', ['squared-rising-diagonal-slash']);
  this.executeCharTest('⧅', ['squared-falling-diagonal-slash']);
  this.executeCharTest('⧆', ['squared-asterisk']);
  this.executeCharTest('⧇', ['squared-small-circle']);
  this.executeCharTest('⧈', ['squared-square']);
  this.executeCharTest('⧉', ['two-joined-squares']);
  this.executeCharTest('⧊', ['triangle-with-dot-above']);
  this.executeCharTest('⧋', ['triangle-with-underbar']);
  this.executeCharTest('⧌', ['s-in-triangle']);
  this.executeCharTest('⧍', ['triangle-with-serifs-at-bottom']);
  this.executeCharTest('⧎', ['right-triangle-above-left-triangle']);
  this.executeCharTest('⧏', ['left-triangle-beside-vertical-bar']);
  this.executeCharTest('⧐', ['vertical-bar-beside-right-triangle']);
  this.executeCharTest('⧑', ['bowtie-with-left-half-black']);
  this.executeCharTest('⧒', ['bowtie-with-right-half-black']);
  this.executeCharTest('⧓', ['black-bowtie']);
  this.executeCharTest('⧔', ['times-with-left-half-black']);
  this.executeCharTest('⧕', ['times-with-right-half-black']);
  this.executeCharTest('⧖', ['white-hourglass']);
  this.executeCharTest('⧗', ['black-hourglass']);
  this.executeCharTest('⧜', ['incomplete-infinity']);
  this.executeCharTest('⧝', ['tie-over-infinity']);
  this.executeCharTest('⧞', ['infinity-negated-with-vertical-bar']);
  this.executeCharTest('⧟', ['double-ended-multimap']);
  this.executeCharTest('⧠', ['square-with-contoured-outline']);
  this.executeCharTest('⧡', ['increases-as']);
  this.executeCharTest('⧢', ['shuffle-product']);
  this.executeCharTest('⧣', ['equals-and-slanted-parallel']);
  this.executeCharTest('⧤', ['equals-and-slanted-parallel-with-tilde-above']);
  this.executeCharTest('⧥', ['identical-to-and-slanted-parallel']);
  this.executeCharTest('⧦', ['gleich-stark']);
  this.executeCharTest('⧧', ['thermodynamic']);
  this.executeCharTest('⧨', ['down-pointing-triangle-with-left-half-black']);
  this.executeCharTest('⧩', ['down-pointing-triangle-with-right-half-black']);
  this.executeCharTest('⧫', ['black-lozenge']);
  this.executeCharTest('⧮', ['error-barred-white-square']);
  this.executeCharTest('⧯', ['error-barred-black-square']);
  this.executeCharTest('⧰', ['error-barred-white-diamond']);
  this.executeCharTest('⧱', ['error-barred-black-diamond']);
  this.executeCharTest('⧲', ['error-barred-white-circle']);
  this.executeCharTest('⧳', ['error-barred-black-circle']);
  this.executeCharTest('⧴', ['rule-delayed']);
  this.executeCharTest('⧵', ['reverse-solidus']);
  this.executeCharTest('⧶', ['solidus-with-overbar']);
  this.executeCharTest('⧷', ['reverse-solidus-with-horizontal-stroke']);
  this.executeCharTest('⧸', ['solidus']);
  this.executeCharTest('⧹', ['reverse-solidus']);
  this.executeCharTest('⧺', ['double-plus']);
  this.executeCharTest('⧻', ['triple-plus']);
  this.executeCharTest('⧾', ['tiny']);
  this.executeCharTest('⧿', ['miny']);
  this.executeCharTest('⨀', ['circled-dot']);
  this.executeCharTest('⨁', ['circled-plus']);
  this.executeCharTest('⨂', ['circled-times']);
  this.executeCharTest('⨃', ['union-with-dot']);
  this.executeCharTest('⨄', ['union-with-plus']);
  this.executeCharTest('⨅', ['square-intersection']);
  this.executeCharTest('⨆', ['square-union']);
  this.executeCharTest('⨇', ['two-logical-and']);
  this.executeCharTest('⨈', ['two-logical-or']);
  this.executeCharTest('⨉', ['times']);
  this.executeCharTest('⨊', ['modulo-two-sum']);
  this.executeCharTest('⨋', ['summation-with-integral']);
  this.executeCharTest('⨌', ['quadruple-integral']);
  this.executeCharTest('⨍', ['finite-part-integral']);
  this.executeCharTest('⨎', ['integral-with-double-stroke']);
  this.executeCharTest('⨏', ['integral-average-with-slash']);
  this.executeCharTest('⨐', ['circulation-function']);
  this.executeCharTest('⨑', ['anticlockwise-integration']);
  this.executeCharTest('⨒', ['line-integration-with-rectangular-path-around-pole']);
  this.executeCharTest('⨓', ['line-integration-with-semicircular-path-around-pole']);
  this.executeCharTest('⨔', ['line-integration-not-including-the-pole']);
  this.executeCharTest('⨕', ['integral-around-a-point']);
  this.executeCharTest('⨖', ['quaternion-integral']);
  this.executeCharTest('⨘', ['integral-with-times']);
  this.executeCharTest('⨙', ['integral-with-intersection']);
  this.executeCharTest('⨚', ['integral-with-union']);
  this.executeCharTest('⨛', ['integral-with-overbar']);
  this.executeCharTest('⨜', ['integral-with-underbar']);
  this.executeCharTest('⨝', ['join']);
  this.executeCharTest('⨞', ['large-left-triangle']);
  this.executeCharTest('⨟', ['z-notation-schema-composition']);
  this.executeCharTest('⨠', ['z-notation-schema-piping']);
  this.executeCharTest('⨡', ['z-notation-schema-projection']);
  this.executeCharTest('⨢', ['plus-with-circle-above']);
  this.executeCharTest('⨣', ['plus-hat']);
  this.executeCharTest('⨤', ['plus-tilde']);
  this.executeCharTest('⨥', ['plus-underdot']);
  this.executeCharTest('⨦', ['plus-sign-with-tilde-below']);
  this.executeCharTest('⨧', ['plus-sign-with-subscript-two']);
  this.executeCharTest('⨨', ['plus-sign-with-black-triangle']);
  this.executeCharTest('⨩', ['minus-sign-with-comma-above']);
  this.executeCharTest('⨪', ['minus-sign-with-dot-below']);
  this.executeCharTest('⨫', ['minus-sign-with-falling-dots']);
  this.executeCharTest('⨬', ['minus-sign-with-rising-dots']);
  this.executeCharTest('⨭', ['plus-sign-in-left-half-circle']);
  this.executeCharTest('⨮', ['plus-sign-in-right-half-circle']);
  this.executeCharTest('⨯', ['vector-or-cross-product']);
  this.executeCharTest('⨰', ['multiplication-sign-with-dot-above']);
  this.executeCharTest('⨱', ['multiplication-sign-with-underbar']);
  this.executeCharTest('⨲', ['semidirect-product-with-bottom-closed']);
  this.executeCharTest('⨳', ['smash-product']);
  this.executeCharTest('⨴', ['multiplication-sign-in-left-half-circle']);
  this.executeCharTest('⨵', ['multiplication-sign-in-right-half-circle']);
  this.executeCharTest('⨶', ['circled-multiplication-sign-with-circumflex-accent']);
  this.executeCharTest('⨷', ['multiplication-sign-in-double-circle']);
  this.executeCharTest('⨸', ['circled-division']);
  this.executeCharTest('⨹', ['plus-sign-in-triangle']);
  this.executeCharTest('⨺', ['minus-sign-in-triangle']);
  this.executeCharTest('⨻', ['multiplication-sign-in-triangle']);
  this.executeCharTest('⨼', ['interior-product']);
  this.executeCharTest('⨽', ['righthand-interior-product']);
  this.executeCharTest('⨾', ['z-notation-relational-composition']);
  this.executeCharTest('⨿', ['amalgamation-or-coproduct']);
  this.executeCharTest('⩀', ['intersection-with-dot']);
  this.executeCharTest('⩁', ['union-with-minus']);
  this.executeCharTest('⩂', ['union-with-overbar']);
  this.executeCharTest('⩃', ['intersection-with-overbar']);
  this.executeCharTest('⩄', ['intersection-with-logical-and']);
  this.executeCharTest('⩅', ['union-with-logical-or']);
  this.executeCharTest('⩆', ['union-above-intersection']);
  this.executeCharTest('⩇', ['intersection-above-union']);
  this.executeCharTest('⩈', ['union-above-bar-above-intersection']);
  this.executeCharTest('⩉', ['intersection-above-bar-above-union']);
  this.executeCharTest('⩊', ['union-beside-and-joined-with-union']);
  this.executeCharTest('⩋', ['intersection-beside-and-joined-with-intersection']);
  this.executeCharTest('⩌', ['closed-union-with-serifs']);
  this.executeCharTest('⩍', ['closed-intersection-with-serifs']);
  this.executeCharTest('⩎', ['double-square-intersection']);
  this.executeCharTest('⩏', ['double-square-union']);
  this.executeCharTest('⩐', ['closed-union-with-serifs-and-smash-product']);
  this.executeCharTest('⩑', ['logical-and-with-dot-above']);
  this.executeCharTest('⩒', ['logical-or-with-dot-above']);
  this.executeCharTest('⩓', ['double-logical-and']);
  this.executeCharTest('⩔', ['double-logical-or']);
  this.executeCharTest('⩕', ['two-intersecting-logical-and']);
  this.executeCharTest('⩖', ['two-intersecting-logical-or']);
  this.executeCharTest('⩗', ['sloping-large-or']);
  this.executeCharTest('⩘', ['sloping-large-and']);
  this.executeCharTest('⩙', ['logical-or-overlapping-logical-and']);
  this.executeCharTest('⩚', ['logical-and-with-middle-stem']);
  this.executeCharTest('⩛', ['logical-or-with-middle-stem']);
  this.executeCharTest('⩜', ['logical-and-with-horizontal-dash']);
  this.executeCharTest('⩝', ['logical-or-with-horizontal-dash']);
  this.executeCharTest('⩞', ['logical-and-with-double-overbar']);
  this.executeCharTest('⩟', ['logical-and-with-underbar']);
  this.executeCharTest('⩠', ['logical-and-with-double-underbar']);
  this.executeCharTest('⩡', ['small-vee-with-underbar']);
  this.executeCharTest('⩢', ['logical-or-with-double-overbar']);
  this.executeCharTest('⩣', ['logical-or-with-double-underbar']);
  this.executeCharTest('⩤', ['z-notation-domain-antirestriction']);
  this.executeCharTest('⩥', ['z-notation-range-antirestriction']);
  this.executeCharTest('⩦', ['equals-with-dot-below']);
  this.executeCharTest('⩧', ['identical-with-dot-above']);
  this.executeCharTest('⩨', ['triple-horizontal-bar-with-double-vertical-stroke']);
  this.executeCharTest('⩩', ['triple-horizontal-bar-with-triple-vertical-stroke']);
  this.executeCharTest('⩪', ['tilde-with-dot-above']);
  this.executeCharTest('⩫', ['tilde-with-rising-dots']);
  this.executeCharTest('⩬', ['similar-minus-similar']);
  this.executeCharTest('⩭', ['congruent-with-dot-above']);
  this.executeCharTest('⩮', ['equals-with-asterisk']);
  this.executeCharTest('⩯', ['almost-equal-hat']);
  this.executeCharTest('⩰', ['approximately-equal-or-equal-to']);
  this.executeCharTest('⩱', ['equals-above-plus']);
  this.executeCharTest('⩲', ['plus-above-equals']);
  this.executeCharTest('⩳', ['equals-above-tilde']);
  this.executeCharTest('⩴', ['double-colon-equal']);
  this.executeCharTest('⩵', ['two-consecutive-equals']);
  this.executeCharTest('⩶', ['three-consecutive-equals']);
  this.executeCharTest('⩷', ['equals-with-two-dots-above-and-two-dots-below']);
  this.executeCharTest('⩸', ['equivalent-with-four-dots-above']);
  this.executeCharTest('⩹', ['less-than-with-circle-inside']);
  this.executeCharTest('⩺', ['greater-than-with-circle-inside']);
  this.executeCharTest('⩻', ['less-than-with-question-mark-above']);
  this.executeCharTest('⩼', ['greater-than-with-question-mark-above']);
  this.executeCharTest('⩽', ['less-than-or-slanted-equals']);
  this.executeCharTest('⩾', ['greater-than-or-slanted-equals']);
  this.executeCharTest('⩿', ['less-than-or-slanted-equals-with-dot-inside']);
  this.executeCharTest('⪀', ['greater-than-or-slanted-equals-with-dot-inside']);
  this.executeCharTest('⪁', ['less-than-or-slanted-equals-with-dot-above']);
  this.executeCharTest('⪂', ['greater-than-or-slanted-equals-with-dot-above']);
  this.executeCharTest('⪃', ['less-than-or-slanted-equals-with-dot-above-right']);
  this.executeCharTest('⪄', ['greater-than-or-slanted-equals-with-dot-above-left']);
  this.executeCharTest('⪅', ['less-than-or-approximate']);
  this.executeCharTest('⪆', ['greater-than-or-approximate']);
  this.executeCharTest('⪇', ['less-than-and-single-line-not-equals']);
  this.executeCharTest('⪈', ['greater-than-and-single-line-not-equals']);
  this.executeCharTest('⪉', ['less-than-and-not-approximate']);
  this.executeCharTest('⪊', ['greater-than-and-not-approximate']);
  this.executeCharTest('⪋', ['less-than-above-double-line-equal-above-greater-than']);
  this.executeCharTest('⪌', ['greater-than-above-double-line-equal-above-less-than']);
  this.executeCharTest('⪍', ['less-than-above-similar-or-equal']);
  this.executeCharTest('⪎', ['greater-than-above-similar-or-equal']);
  this.executeCharTest('⪏', ['less-than-above-similar-above-greater-than']);
  this.executeCharTest('⪐', ['greater-than-above-similar-above-less-than']);
  this.executeCharTest('⪑', ['less-than-above-greater-than-above-double-line-equal']);
  this.executeCharTest('⪒', ['greater-than-above-less-than-above-double-line-equal']);
  this.executeCharTest('⪓', ['less-than-above-slanted-equal-above-greater-than-above-slanted-equal']);
  this.executeCharTest('⪔', ['greater-than-above-slanted-equal-above-less-than-above-slanted-equal']);
  this.executeCharTest('⪕', ['slanted-equals-or-less-than']);
  this.executeCharTest('⪖', ['slanted-equals-or-greater-than']);
  this.executeCharTest('⪗', ['slanted-equals-or-less-than-with-dot-inside']);
  this.executeCharTest('⪘', ['slanted-equals-or-greater-than-with-dot-inside']);
  this.executeCharTest('⪙', ['double-line-equals-or-less-than']);
  this.executeCharTest('⪚', ['double-line-equals-or-greater-than']);
  this.executeCharTest('⪛', ['double-line-slanted-equals-or-less-than']);
  this.executeCharTest('⪜', ['double-line-slanted-equals-or-greater-than']);
  this.executeCharTest('⪝', ['similar-or-less-than']);
  this.executeCharTest('⪞', ['similar-or-greater-than']);
  this.executeCharTest('⪟', ['similar-above-less-than-above-equals']);
  this.executeCharTest('⪠', ['similar-above-greater-than-above-equals']);
  this.executeCharTest('⪡', ['double-nested-less-than']);
  this.executeCharTest('⪢', ['double-nested-greater-than']);
  this.executeCharTest('⪣', ['double-nested-less-than-with-underbar']);
  this.executeCharTest('⪤', ['greater-than-overlapping-less-than']);
  this.executeCharTest('⪥', ['greater-than-beside-less-than']);
  this.executeCharTest('⪦', ['less-than-closed-by-curve']);
  this.executeCharTest('⪧', ['greater-than-closed-by-curve']);
  this.executeCharTest('⪨', ['less-than-closed-by-curve-above-slanted-equal']);
  this.executeCharTest('⪩', ['greater-than-closed-by-curve-above-slanted-equal']);
  this.executeCharTest('⪪', ['smaller-than']);
  this.executeCharTest('⪫', ['larger-than']);
  this.executeCharTest('⪬', ['smaller-than-or-equal-to']);
  this.executeCharTest('⪭', ['larger-than-or-equal-to']);
  this.executeCharTest('⪮', ['equals-with-bumpy-above']);
  this.executeCharTest('⪯', ['precedes-above-single-line-equals']);
  this.executeCharTest('⪰', ['succeeds-above-single-line-equals']);
  this.executeCharTest('⪱', ['precedes-above-single-line-not-equals']);
  this.executeCharTest('⪲', ['succeeds-above-single-line-not-equals']);
  this.executeCharTest('⪳', ['precedes-above-equals']);
  this.executeCharTest('⪴', ['succeeds-above-equals']);
  this.executeCharTest('⪵', ['precedes-above-not-equals']);
  this.executeCharTest('⪶', ['succeeds-above-not-equals']);
  this.executeCharTest('⪷', ['precedes-above-almost-equals']);
  this.executeCharTest('⪸', ['succeeds-above-almost-equals']);
  this.executeCharTest('⪹', ['precedes-above-not-almost-equals']);
  this.executeCharTest('⪺', ['succeeds-above-not-almost-equals']);
  this.executeCharTest('⪻', ['double-precedes']);
  this.executeCharTest('⪼', ['double-succeeds']);
  this.executeCharTest('⪽', ['subset-with-dot']);
  this.executeCharTest('⪾', ['superset-with-dot']);
  this.executeCharTest('⪿', ['subset-with-plus-sign-below']);
  this.executeCharTest('⫀', ['superset-with-plus-sign-below']);
  this.executeCharTest('⫁', ['subset-with-multiplication-sign-below']);
  this.executeCharTest('⫂', ['superset-with-multiplication-sign-below']);
  this.executeCharTest('⫃', ['subset-of-or-equal-to-with-dot-above']);
  this.executeCharTest('⫄', ['superset-of-or-equal-to-with-dot-above']);
  this.executeCharTest('⫅', ['subset-of-above-equals']);
  this.executeCharTest('⫆', ['superset-of-above-equals']);
  this.executeCharTest('⫇', ['subset-of-above-tilde']);
  this.executeCharTest('⫈', ['superset-of-above-tilde']);
  this.executeCharTest('⫉', ['subset-of-above-almost-equals']);
  this.executeCharTest('⫊', ['superset-of-above-almost-equals']);
  this.executeCharTest('⫋', ['subset-of-above-not-equals']);
  this.executeCharTest('⫌', ['superset-of-above-not-equals']);
  this.executeCharTest('⫍', ['square-left-open-box']);
  this.executeCharTest('⫎', ['square-right-open-box']);
  this.executeCharTest('⫏', ['closed-subset']);
  this.executeCharTest('⫐', ['closed-superset']);
  this.executeCharTest('⫑', ['closed-subset-or-equal-to']);
  this.executeCharTest('⫒', ['closed-superset-or-equal-to']);
  this.executeCharTest('⫓', ['subset-above-superset']);
  this.executeCharTest('⫔', ['superset-above-subset']);
  this.executeCharTest('⫕', ['subset-above-subset']);
  this.executeCharTest('⫖', ['superset-above-superset']);
  this.executeCharTest('⫗', ['superset-beside-subset']);
  this.executeCharTest('⫘', ['superset-beside-and-joined-by-dash-with-subset']);
  this.executeCharTest('⫙', ['element-of-opening-downwards']);
  this.executeCharTest('⫚', ['pitchfork-with-tee-top']);
  this.executeCharTest('⫛', ['transversal-intersection']);
  this.executeCharTest('⫝̸', ['forking']);
  this.executeCharTest('⫝', ['nonforking']);
  this.executeCharTest('⫞', ['short-left-tack']);
  this.executeCharTest('⫟', ['short-down-tack']);
  this.executeCharTest('⫠', ['short-up-tack']);
  this.executeCharTest('⫡', ['perpendicular-with-s']);
  this.executeCharTest('⫢', ['vertical-bar-triple-right-turnstile']);
  this.executeCharTest('⫣', ['double-vertical-bar-left-turnstile']);
  this.executeCharTest('⫤', ['vertical-bar-double-left-turnstile']);
  this.executeCharTest('⫥', ['double-vertical-bar-double-left-turnstile']);
  this.executeCharTest('⫦', ['long-dash-from-left-member-of-double-vertical']);
  this.executeCharTest('⫧', ['short-down-tack-with-overbar']);
  this.executeCharTest('⫨', ['short-up-tack-with-underbar']);
  this.executeCharTest('⫩', ['short-up-tack-above-short-down-tack']);
  this.executeCharTest('⫪', ['double-down-tack']);
  this.executeCharTest('⫫', ['double-up-tack']);
  this.executeCharTest('⫬', ['double-stroke-not-sign']);
  this.executeCharTest('⫭', ['reversed-double-stroke-not-sign']);
  this.executeCharTest('⫮', ['does-not-divide-with-reversed-negation-slash']);
  this.executeCharTest('⫯', ['vertical-line-with-circle-above']);
  this.executeCharTest('⫰', ['vertical-line-with-circle-below']);
  this.executeCharTest('⫱', ['down-tack-with-circle-below']);
  this.executeCharTest('⫲', ['parallel-with-horizontal-stroke']);
  this.executeCharTest('⫳', ['parallel-with-tilde']);
  this.executeCharTest('⫴', ['triple-vertical-bar-binary-relation']);
  this.executeCharTest('⫵', ['triple-vertical-bar-with-horizontal-stroke']);
  this.executeCharTest('⫶', ['triple-colon']);
  this.executeCharTest('⫷', ['triple-nested-less-than']);
  this.executeCharTest('⫸', ['triple-nested-greater-than']);
  this.executeCharTest('⫹', ['double-line-slanted-less-than-or-equal-to']);
  this.executeCharTest('⫺', ['double-line-slanted-greater-than-or-equal-to']);
  this.executeCharTest('⫻', ['triple-solidus-binary-relation']);
  this.executeCharTest('⫼', ['large-triple-vertical-bar']);
  this.executeCharTest('⫽', ['double-solidus']);
  this.executeCharTest('⫾', ['white-vertical-bar']);
  this.executeCharTest('⫿', ['white-vertical-bar']);
  this.executeCharTest('〜', ['wave-dash']);
  this.executeCharTest('︐', ['presentation-form-for-vertical-comma']);
  this.executeCharTest('︓', ['presentation-form-for-vertical-colon']);
  this.executeCharTest('︔', ['presentation-form-for-vertical-semicolon']);
  this.executeCharTest('︕', ['presentation-form-for-vertical-exclamation-mark']);
  this.executeCharTest('︖', ['presentation-form-for-vertical-question-mark']);
  this.executeCharTest('︙', ['presentation-form-for-vertical-horizontal-ellipsis']);
  this.executeCharTest('︰', ['glyph-for-vertical-two-dot-leader']);
  this.executeCharTest('︱', ['glyph-for-vertical-em-dash']);
  this.executeCharTest('︲', ['glyph-for-vertical-en-dash']);
  this.executeCharTest('︳', ['glyph-for-vertical-underscore']);
  this.executeCharTest('︴', ['glyph-for-vertical-wavy-underscore']);
  this.executeCharTest('﹅', ['sesame-dot']);
  this.executeCharTest('﹆', ['white-sesame-dot']);
  this.executeCharTest('﹉', ['dashed-overscore']);
  this.executeCharTest('﹊', ['centerline-overscore']);
  this.executeCharTest('﹋', ['wavy-overscore']);
  this.executeCharTest('﹌', ['double-wavy-overscore']);
  this.executeCharTest('﹍', ['dashed-underscore']);
  this.executeCharTest('﹎', ['centerline-underscore']);
  this.executeCharTest('﹏', ['wavy-underscore']);
  this.executeCharTest('﹐', ['small-comma']);
  this.executeCharTest('﹒', ['small-period']);
  this.executeCharTest('﹔', ['small-semicolon']);
  this.executeCharTest('﹕', ['small-colon']);
  this.executeCharTest('﹖', ['small-question-mark']);
  this.executeCharTest('﹗', ['small-exclamation-mark']);
  this.executeCharTest('﹘', ['small-em-dash']);
  this.executeCharTest('﹟', ['small-number-sign']);
  this.executeCharTest('﹠', ['small-ampersand']);
  this.executeCharTest('﹡', ['small-asterisk']);
  this.executeCharTest('﹢', ['small-plus-sign']);
  this.executeCharTest('﹣', ['small-hyphen-minus']);
  this.executeCharTest('﹤', ['small-less-than-sign']);
  this.executeCharTest('﹥', ['small-greater-than-sign']);
  this.executeCharTest('﹦', ['small-equals']);
  this.executeCharTest('﹨', ['small-backslash']);
  this.executeCharTest('﹩', ['small-dollar-sign']);
  this.executeCharTest('﹪', ['small-percent-sign']);
  this.executeCharTest('﹫', ['small-commercial-at']);
  this.executeCharTest('！', ['exclamation-mark']);
  this.executeCharTest('＂', ['quotation-mark']);
  this.executeCharTest('＃', ['number-sign']);
  this.executeCharTest('＄', ['dollar-sign']);
  this.executeCharTest('％', ['percent-sign']);
  this.executeCharTest('＆', ['ampersand']);
  this.executeCharTest('＇', ['apostrophe']);
  this.executeCharTest('＊', ['asterisk']);
  this.executeCharTest('＋', ['plus-sign']);
  this.executeCharTest('，', ['comma']);
  this.executeCharTest('－', ['hyphen-minus']);
  this.executeCharTest('．', ['period']);
  this.executeCharTest('／', ['slash']);
  this.executeCharTest('：', ['colon']);
  this.executeCharTest('；', ['semicolon']);
  this.executeCharTest('＜', ['less-than']);
  this.executeCharTest('＝', ['equals']);
  this.executeCharTest('＞', ['greater-than']);
  this.executeCharTest('？', ['question-mark']);
  this.executeCharTest('＠', ['commercial-at']);
  this.executeCharTest('＼', ['backslash']);
  this.executeCharTest('＾', ['caret']);
  this.executeCharTest('＿', ['bar']);
  this.executeCharTest('｀', ['grave']);
  this.executeCharTest('｜', ['vertical-bar']);
  this.executeCharTest('～', ['tilde']);
  this.executeCharTest('￠', ['cent-sign']);
  this.executeCharTest('￡', ['pound-sign']);
  this.executeCharTest('￢', ['not sign']);
  this.executeCharTest('￣', ['bar']);
  this.executeCharTest('￤', ['broken-vertical-bar']);
  this.executeCharTest('￥', ['yen sign']);
  this.executeCharTest('￦', ['won sign']);
  this.executeCharTest('￨', ['halfwidth-forms-light-vertical']);
  this.executeCharTest('￭', ['halfwidth-black-square']);
  this.executeCharTest('￮', ['halfwidth-white-circle']);
  this.executeCharTest(' ', ['space']);
  this.executeCharTest(' ', ['no break space']);
  this.executeCharTest('­', ['soft hyphen']);
  this.executeCharTest(' ', ['en quad']);
  this.executeCharTest(' ', ['em quad']);
  this.executeCharTest(' ', ['en space']);
  this.executeCharTest(' ', ['em space']);
  this.executeCharTest(' ', ['three per em space']);
  this.executeCharTest(' ', ['four per em space']);
  this.executeCharTest(' ', ['six per em space']);
  this.executeCharTest(' ', ['figure space']);
  this.executeCharTest(' ', ['punctuation space']);
  this.executeCharTest(' ', ['thin space']);
  this.executeCharTest(' ', ['hair space']);
  this.executeCharTest('​', ['zero width space']);
  this.executeCharTest('‌', ['zero width non joiner']);
  this.executeCharTest('‍', ['zero width joiner']);
  this.executeCharTest('‎', ['left to right mark']);
  this.executeCharTest('‏', ['right to left mark']);
  this.executeCharTest(' ', ['line separator']);
  this.executeCharTest(' ', ['paragraph separator']);
  this.executeCharTest('‪', ['left to right embedding']);
  this.executeCharTest('‫', ['right to left embedding']);
  this.executeCharTest('‬', ['pop directional formatting']);
  this.executeCharTest('‭', ['left to right override']);
  this.executeCharTest('‮', ['right to left override']);
  this.executeCharTest(' ', ['narrow no break space']);
  this.executeCharTest(' ', ['medium mathematical space']);
  this.executeCharTest('⁠', ['word joiner']);
  this.executeCharTest('⁡', ['of']);
  this.executeCharTest('⁢', ['times']);
  this.executeCharTest('⁣', ['separator']);
  this.executeCharTest('⁤', ['plus']);
  this.executeCharTest('⁪', ['inhibit symmetric swapping']);
  this.executeCharTest('⁫', ['activate symmetric swapping']);
  this.executeCharTest('⁮', ['national digit shapes']);
  this.executeCharTest('⁯', ['nominal digit shapes']);
  this.executeCharTest('﻿', ['zero width no break space']);
  this.executeCharTest('￹', ['interlinear annotation anchor']);
  this.executeCharTest('￺', ['interlinear annotation separator']);
  this.executeCharTest('￻', ['interlinear annotation terminator']);
  this.executeCharTest('⏨', ['decimal exponent symbol']);
  this.executeCharTest('★', ['black star']);
  this.executeCharTest('☆', ['white star']);
  this.executeCharTest('⚪', ['white circle']);
  this.executeCharTest('⚫', ['black circle']);
  this.executeCharTest('✅', ['white check']);
  this.executeCharTest('✓', ['check']);
  this.executeCharTest('✔', ['heavy check']);
  this.executeCharTest('✕', ['multiplication x']);
  this.executeCharTest('✖', ['heavy multiplication x']);
  this.executeCharTest('✗', ['ballot x']);
  this.executeCharTest('✘', ['heavy ballot x']);
  this.executeCharTest('✛', ['open center cross']);
  this.executeCharTest('✜', ['heavy open center cross']);
  this.executeCharTest('✠', ['maltese cross']);
  this.executeCharTest('✡', ['star of david']);
  this.executeCharTest('✢', ['four teardrop spoked asterisk']);
  this.executeCharTest('✣', ['four balloon spoked asterisk']);
  this.executeCharTest('✤', ['heavy four balloon spoked asterisk']);
  this.executeCharTest('✥', ['four club spoked asterisk']);
  this.executeCharTest('✦', ['black four pointed star']);
  this.executeCharTest('✧', ['white four pointed star']);
  this.executeCharTest('✨', ['sparkles']);
  this.executeCharTest('✩', ['stress outlined white star']);
  this.executeCharTest('✪', ['circled white star']);
  this.executeCharTest('✫', ['open center black star']);
  this.executeCharTest('✬', ['black center white star']);
  this.executeCharTest('✭', ['outlined black star']);
  this.executeCharTest('✮', ['heavy outlined black star']);
  this.executeCharTest('✯', ['pinwheel star']);
  this.executeCharTest('✰', ['shadowed white star']);
  this.executeCharTest('✱', ['heavy asterisk']);
  this.executeCharTest('✲', ['open center asterisk']);
  this.executeCharTest('✳', ['eight spoked asterisk']);
  this.executeCharTest('✴', ['eight pointed black star']);
  this.executeCharTest('✵', ['eight pointed pinwheel star']);
  this.executeCharTest('✶', ['six pointed black star']);
  this.executeCharTest('✹', ['twelve pointed black star']);
  this.executeCharTest('✺', ['sixteen pointed asterisk']);
  this.executeCharTest('✻', ['teardrop spoked asterisk']);
  this.executeCharTest('✼', ['open center teardrop spoked asterisk']);
  this.executeCharTest('✽', ['heavy teardrop spoked asterisk']);
  this.executeCharTest('✾', ['six petalled black and white florette']);
  this.executeCharTest('✿', ['black florette']);
  this.executeCharTest('❀', ['white florette']);
  this.executeCharTest('❁', ['eight petalled outlined black florette']);
  this.executeCharTest('❂', ['circled open center eight pointed star']);
  this.executeCharTest('❃', ['heavy teardrop spoked pinwheel asterisk']);
  this.executeCharTest('❄', ['snowflake']);
  this.executeCharTest('❅', ['tight trifoliate snowflake']);
  this.executeCharTest('❆', ['heavy chevron snowflake']);
  this.executeCharTest('❇', ['sparkle']);
  this.executeCharTest('❈', ['heavy sparkle']);
  this.executeCharTest('❉', ['balloon spoked asterisk']);
  this.executeCharTest('❊', ['eight teardrop spoked propeller asterisk']);
  this.executeCharTest('❋', ['heavy eight teardrop spoked propeller asterisk']);
  this.executeCharTest('❌', ['cross mark']);
  this.executeCharTest('❍', ['shadowed white circle']);
};


sre.ClearspeakCharEnglishTest.prototype.testClearspeakFunctions = function() {
  this.executeCharTest('deg', ['degree']);
  this.executeCharTest('det', ['determinant']);
  this.executeCharTest('dim', ['dimension']);
  this.executeCharTest('hom', ['hom']);
  this.executeCharTest('Hom', ['hom']);
  this.executeCharTest('ker', ['kernel']);
  this.executeCharTest('Tr', ['trace']);
  this.executeCharTest('tr', ['trace']);
  this.executeCharTest('log', ['log']);
  this.executeCharTest('ln', ['l n']);
  this.executeCharTest('lg', ['log base 10']);
  this.executeCharTest('exp', ['exp']);
  this.executeCharTest('expt', ['exp']);
  this.executeCharTest('gcd', ['gcd']);
  this.executeCharTest('lcm', ['lcm']);
  this.executeCharTest('arg', ['arg']);
  this.executeCharTest('im', ['im']);
  this.executeCharTest('re', ['re']);
  this.executeCharTest('inf', ['inf']);
  this.executeCharTest('lim', ['limit']);
  this.executeCharTest('lim inf', ['liminf']);
  this.executeCharTest('liminf', ['liminf']);
  this.executeCharTest('lim sup', ['limsup']);
  this.executeCharTest('limsup', ['limsup']);
  this.executeCharTest('max', ['max']);
  this.executeCharTest('min', ['min']);
  this.executeCharTest('sup', ['sup']);
  this.executeCharTest('injlim', ['colimit']);
  this.executeCharTest('inj lim', ['colimit']);
  this.executeCharTest('projlim', ['limit']);
  this.executeCharTest('proj lim', ['limit']);
  this.executeCharTest('mod', ['mod']);
  this.executeCharTest('Pr', ['probability']);
  this.executeCharTest('cosh', ['hyperbolic cosine']);
  this.executeCharTest('coth', ['hyperbolic cotangent']);
  this.executeCharTest('csch', ['hyperbolic cosecant']);
  this.executeCharTest('sech', ['hyperbolic secant']);
  this.executeCharTest('sinh', ['hyperbolic sine']);
  this.executeCharTest('tanh', ['hyperbolic tangent']);
  this.executeCharTest('arcosh', ['area hyperbolic cosine']);
  this.executeCharTest('arccosh', ['area hyperbolic cosine']);
  this.executeCharTest('arcoth', ['area hyperbolic cotangent']);
  this.executeCharTest('arccoth', ['area hyperbolic cotangent']);
  this.executeCharTest('arcsch', ['area hyperbolic cosecant']);
  this.executeCharTest('arccsch', ['area hyperbolic cosecant']);
  this.executeCharTest('arsech', ['area hyperbolic secant']);
  this.executeCharTest('arcsech', ['area hyperbolic secant']);
  this.executeCharTest('arsinh', ['area hyperbolic sine']);
  this.executeCharTest('arcsinh', ['area hyperbolic sine']);
  this.executeCharTest('artanh', ['area hyperbolic tangent']);
  this.executeCharTest('arctanh', ['area hyperbolic tangent']);
  this.executeCharTest('cos', ['cosine']);
  this.executeCharTest('cosine', ['cosine']);
  this.executeCharTest('cot', ['cotangent']);
  this.executeCharTest('csc', ['cosecant']);
  this.executeCharTest('sec', ['secant']);
  this.executeCharTest('sin', ['sine']);
  this.executeCharTest('sine', ['sine']);
  this.executeCharTest('tan', ['tangent']);
  this.executeCharTest('arccos', ['arc cosine']);
  this.executeCharTest('arccot', ['arc cotangent']);
  this.executeCharTest('arccsc', ['arc cosecant']);
  this.executeCharTest('arcsec', ['arc secant']);
  this.executeCharTest('arcsin', ['arc sine']);
  this.executeCharTest('arctan', ['arc tangent']);
};


sre.ClearspeakCharEnglishTest.prototype.testClearspeakUnits = function() {
  this.executeUnitTest('W', ['watt']);
  this.executeUnitTest('w', ['watt']);
  this.executeUnitTest('kw', ['kilowatt']);
  this.executeUnitTest('kW', ['kilowatt']);
  this.executeUnitTest('mw', ['milliwatt']);
  this.executeUnitTest('mW', ['milliwatt']);
  this.executeUnitTest('kwh', ['kilowatt hour']);
  this.executeUnitTest('kWh', ['kilowatt hour']);
  this.executeUnitTest('J', ['joule']);
  this.executeUnitTest('N', ['Newton']);
  this.executeUnitTest('A', ['ampere']);
  this.executeUnitTest('V', ['volt']);
  this.executeUnitTest('µΩ', ['microohm']);
  this.executeUnitTest('mΩ', ['milliohm']);
  this.executeUnitTest('Ω', ['ohm']);
  this.executeUnitTest('Ohm', ['ohm']);
  this.executeUnitTest('kΩ', ['kilohm']);
  this.executeUnitTest('KΩ', ['kilohm']);
  this.executeUnitTest('MΩ', ['megaohm']);
  this.executeUnitTest('GΩ', ['gigaohm']);
  this.executeUnitTest('mm', ['millimeter']);
  this.executeUnitTest('cm', ['centimeter']);
  this.executeUnitTest('m', ['meter']);
  this.executeUnitTest('km', ['kilometer']);
  this.executeUnitTest('ft', ['foot']);
  this.executeUnitTest('ft.', ['foot']);
  this.executeUnitTest('in', ['inch']);
  this.executeUnitTest('in.', ['inch']);
  this.executeUnitTest('mi', ['mile']);
  this.executeUnitTest('mi.', ['mile']);
  this.executeUnitTest('yd', ['yard']);
  this.executeUnitTest('yd.', ['yard']);
  this.executeUnitTest('n.m.', ['nautical mile']);
  this.executeUnitTest('b', ['bit']);
  this.executeUnitTest('B', ['byte']);
  this.executeUnitTest('KB', ['kilobyte']);
  this.executeUnitTest('MB', ['megabyte']);
  this.executeUnitTest('GB', ['gigabyte']);
  this.executeUnitTest('TB', ['terabyte']);
  this.executeUnitTest('doz', ['dozen']);
  this.executeUnitTest('doz.', ['dozen']);
  this.executeUnitTest('dz', ['dozen']);
  this.executeUnitTest('dz.', ['dozen']);
  this.executeUnitTest('sq', ['square']);
  this.executeUnitTest('sq.', ['square']);
  this.executeUnitTest('ha', ['hectare']);
  this.executeUnitTest('kt', ['knot']);
  this.executeUnitTest('kt.', ['knot']);
  this.executeUnitTest('mph', ['miles per hour']);
  this.executeUnitTest('rpm', ['revolutions per minute']);
  this.executeUnitTest('kmh', ['kilometers per hour']);
  this.executeUnitTest('F', ['Fahrenheit']);
  this.executeUnitTest('F.', ['Fahrenheit']);
  this.executeUnitTest('°F', ['Fahrenheit']);
  this.executeUnitTest('C', ['Celsius']);
  this.executeUnitTest('°C', ['Celsius']);
  this.executeUnitTest('K', ['Kelvin']);
  this.executeUnitTest('°K', ['Kelvin']);
  this.executeUnitTest('ns', ['nanosecond']);
  this.executeUnitTest('µs', ['microsecond']);
  this.executeUnitTest('ms', ['millisecond']);
  this.executeUnitTest('s', ['second']);
  this.executeUnitTest('min', ['minute']);
  this.executeUnitTest('h', ['hour']);
  this.executeUnitTest('hr', ['hour']);
  this.executeUnitTest('bbl.', ['barrel']);
  this.executeUnitTest('bbl', ['barrel']);
  this.executeUnitTest('cu', ['cubic']);
  this.executeUnitTest('cu.', ['cubic']);
  this.executeUnitTest('fl. oz.', ['fluid ounce']);
  this.executeUnitTest('gal', ['gallon']);
  this.executeUnitTest('gal.', ['gallon']);
  this.executeUnitTest('pt', ['pint']);
  this.executeUnitTest('pt.', ['pint']);
  this.executeUnitTest('qt', ['quart']);
  this.executeUnitTest('qt.', ['quart']);
  this.executeUnitTest('tbsp', ['tablespoon']);
  this.executeUnitTest('tbsp.', ['tablespoon']);
  this.executeUnitTest('tsp', ['teaspoon']);
  this.executeUnitTest('tsp.', ['teaspoon']);
  this.executeUnitTest('cc', ['cubic centimeter']);
  this.executeUnitTest('kl', ['kiloliter']);
  this.executeUnitTest('l', ['liter']);
  this.executeUnitTest('ml', ['milliliter']);
  this.executeUnitTest('lb', ['pound']);
  this.executeUnitTest('lb.', ['pound']);
  this.executeUnitTest('LT', ['long ton']);
  this.executeUnitTest('L.T.', ['long ton']);
  this.executeUnitTest('oz', ['ounce']);
  this.executeUnitTest('oz.', ['ounce']);
  this.executeUnitTest('g', ['gram']);
  this.executeUnitTest('gr', ['gram']);
  this.executeUnitTest('kg', ['kilogram']);
  this.executeUnitTest('mcg', ['microgram']);
  this.executeUnitTest('µg', ['microgram']);
  this.executeUnitTest('mg', ['milligram']);
  this.executeUnitTest('t', ['ton']);
  this.executeUnitTest('T', ['ton']);
};
