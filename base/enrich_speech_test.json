{
  "information": "Tests API consistency for speech generation.",
  "_comment_0": " Empty wrappers.",
  "_comment_1": " Test for empty wrapping elements.",
  "Wrappers_0": {},
  "Wrappers_1": {},
  "Wrappers_2": {},
  "_comment_2": " Sub, Superscripts.",
  "_comment_3": " Test for sub super and subsuper scripts.",
  "Scripts_0": {},
  "Scripts_1": {},
  "Scripts_2": {},
  "Scripts_3": {},
  "Scripts_4": {},
  "Scripts_5": {},
  "Scripts_6": {},
  "_comment_4": " Numbers.",
  "_comment_5": " Test number representations.",
  "Numbers_0": {},
  "Numbers_1": {},
  "Numbers_2": {},
  "Numbers_3": {},
  "Numbers_4": {},
  "_comment_6": " Test mixed number representations.",
  "MixedNumbers_0": {},
  "MixedNumbers_1": {},
  "MixedNumbers_2": {},
  "MixedNumbers_3": {},
  "MixedNumbers_4": {},
  "MixedNumbers_5": {},
  "_comment_7": " Fractions.",
  "_comment_8": " Test (nested) fraction representations.",
  "Fractions_0": {},
  "Fractions_1": {},
  "Fractions_2": {},
  "_comment_9": " Relations.",
  "_comment_10": " Test relation trees.",
  "Relations_0": {},
  "Relations_1": {},
  "Relations_2": {},
  "Relations_3": {},
  "_comment_11": " Operators.",
  "_comment_12": " Test operator trees with pre- and postfixes.",
  "_comment_13": " Pathological operator only case.",
  "PrePostfixOperators_0": {},
  "_comment_14": " Single identifier with prefixes.",
  "PrePostfixOperators_1": {},
  "_comment_15": " Single identifier with prefix and negative.",
  "PrePostfixOperators_2": {},
  "_comment_16": " Single identifier with postfixes.",
  "PrePostfixOperators_3": {},
  "_comment_17": " Single identifier with pre- and postfixes.",
  "PrePostfixOperators_4": {},
  "_comment_18": " Single identifier with mixed pre- and postfixes.",
  "PrePostfixOperators_5": {},
  "_comment_19": " Two identifiers with pre- and postfixes.",
  "PrePostfixOperators_6": {},
  "_comment_20": " Three identifiers with pre- and postfixes.",
  "PrePostfixOperators_7": {},
  "_comment_21": " Test operator trees with single operator.",
  "_comment_22": " Single identifier.",
  "SingleOperators_0": {},
  "_comment_23": " Single implicit node.",
  "SingleOperators_1": {},
  "_comment_24": " Implicit multi node.",
  "SingleOperators_2": {},
  "_comment_25": " Single addition.",
  "SingleOperators_3": {},
  "_comment_26": " Multi addition.",
  "SingleOperators_4": {},
  "_comment_27": " Multi addition with implicit node.",
  "SingleOperators_5": {},
  "_comment_28": " Test operator trees with multiple operators.",
  "_comment_29": " Addition and subtraction.",
  "MultipleOperators_0": {},
  "_comment_30": " Addition and subtraction.",
  "MultipleOperators_1": {},
  "_comment_31": " Addition and explicit multiplication.",
  "MultipleOperators_2": {},
  "_comment_32": " Addition with explicit and implicit multiplication.",
  "MultipleOperators_3": {},
  "_comment_33": " Two Additions, subtraction plus explicit and implicit multiplication,",
  "_comment_34": " one prefix and one postfix.",
  "MultipleOperators_4": {},
  "_comment_35": " Test operator trees with multiplication operators.",
  "_comment_36": " Addition and subtraction.",
  "MultiplicationOperators_0": {},
  "MultiplicationOperators_1": {},
  "MultiplicationOperators_2": {},
  "MultiplicationOperators_3": {},
  "MultiplicationOperators_4": {},
  "MultiplicationOperators_5": {},
  "_comment_37": " Fences.",
  "_comment_38": " Test regular directed fences.",
  "_comment_39": " No fence.",
  "RegularFences_0": {},
  "_comment_40": " Empty parentheses.",
  "RegularFences_1": {},
  "_comment_41": " Single Fenced Expression.",
  "RegularFences_2": {},
  "_comment_42": " Single Fenced Expression and operators.",
  "RegularFences_3": {},
  "_comment_43": " Parallel Parenthesis.",
  "RegularFences_4": {},
  "_comment_44": " Nested Parenthesis.",
  "RegularFences_5": {},
  "_comment_45": " Nested parenthesis and brackets.",
  "RegularFences_6": {},
  "_comment_46": " Nested parenthesis, brackets, braces and superscript operator.",
  "RegularFences_7": {},
  "_comment_47": " Test neutral fences.",
  "_comment_48": " Empty bars.",
  "NeutralFences_0": {},
  "_comment_49": " Simple bar fence.",
  "NeutralFences_1": {},
  "_comment_50": " Parallel bar fences.",
  "NeutralFences_2": {},
  "_comment_51": " Nested bar fences.",
  "NeutralFences_3": {},
  "_comment_52": " Mixed neutral and regular fences.",
  "_comment_53": " Empty parenthsis inside bars.",
  "MixedFences_0": {},
  "_comment_54": " Bars inside parentheses.",
  "MixedFences_1": {},
  "_comment_55": " Parentheses inside bards.",
  "MixedFences_2": {},
  "_comment_56": " Parentheses inside bards.",
  "MixedFences_3": {},
  "_comment_57": " Mixed with isolated bars.",
  "_comment_58": " Set notation.",
  "MixedFencesWithBars_0": {},
  "_comment_59": " Disjunction of bracketed parallel statements.",
  "MixedFencesWithBars_1": {},
  "_comment_60": " Metric over the above.",
  "MixedFencesWithBars_2": {},
  "_comment_61": " Mix of metrics and bracketed expression and single bars.",
  "MixedFencesWithBars_3": {},
  "_comment_62": " Pathological cases with only opening fences.",
  "_comment_63": " Single.",
  "OpeningFencesOnly_0": {},
  "_comment_64": " Single right.",
  "OpeningFencesOnly_1": {},
  "_comment_65": " Single middle.",
  "OpeningFencesOnly_2": {},
  "_comment_66": " Single left.",
  "OpeningFencesOnly_3": {},
  "_comment_67": " Multiple.",
  "OpeningFencesOnly_4": {},
  "_comment_68": " Multiple plus inner fenced.",
  "OpeningFencesOnly_5": {},
  "_comment_69": " Pathological cases with only closing fences.",
  "_comment_70": " Single.",
  "ClosingFencesOnly_0": {},
  "_comment_71": " Single right.",
  "ClosingFencesOnly_1": {},
  "_comment_72": " Single middle.",
  "ClosingFencesOnly_2": {},
  "_comment_73": " Single left.",
  "ClosingFencesOnly_3": {},
  "_comment_74": " Multiple.",
  "ClosingFencesOnly_4": {},
  "_comment_75": " Multiple plus inner fenced.",
  "ClosingFencesOnly_5": {},
  "_comment_76": " Pathological cases with only neutral fences.",
  "_comment_77": " Single.",
  "NeutralFencesOnly_0": {},
  "_comment_78": " Single right.",
  "NeutralFencesOnly_1": {},
  "_comment_79": " Single middle.",
  "NeutralFencesOnly_2": {},
  "_comment_80": " Single left.",
  "NeutralFencesOnly_3": {},
  "_comment_81": " Two different bars.",
  "NeutralFencesOnly_4": {},
  "_comment_82": " Three different bars.",
  "NeutralFencesOnly_5": {},
  "_comment_83": " Multiple plus inner fenced.",
  "NeutralFencesOnly_6": {},
  "_comment_84": " Pathological cases with mixed fences.",
  "_comment_85": " Close, },",
  "_comment_86": " Neutrals and close.",
  "MixedUnmatchedFences_0": {},
  "_comment_87": " Neutrals and open.",
  "MixedUnmatchedFences_1": {},
  "_comment_88": " Multiple fences, fenced and operations",
  "MixedUnmatchedFences_2": {},
  "_comment_89": " Multiple fences, fenced and operations",
  "MixedUnmatchedFences_3": {},
  "_comment_90": " Multiple fences, fenced and operations",
  "MixedUnmatchedFences_4": {},
  "_comment_91": " Square roots",
  "SquareRoots_0": {},
  "SquareRoots_1": {},
  "SquareRoots_2": {},
  "SquareRoots_3": {},
  "SquareRoots_4": {},
  "_comment_92": " Regular roots",
  "RegularRoots_0": {},
  "RegularRoots_1": {},
  "RegularRoots_2": {},
  "RegularRoots_3": {},
  "_comment_93": " Mixed roots",
  "MixedRoots_0": {},
  "MixedRoots_1": {},
  "MixedRoots_2": {},
  "_comment_94": " Simple function applications",
  "SimpleFuncsSingle_0": {},
  "SimpleFuncsSingle_1": {},
  "SimpleFuncsSingle_2": {},
  "SimpleFuncsSingle_3": {},
  "SimpleFuncsSingle_4": {},
  "SimpleFuncsSingle_5": {},
  "SimpleFuncsSingle_6": {},
  "SimpleFuncsSingle_7": {},
  "SimpleFuncsSingle_8": {},
  "SimpleFuncsSingle_9": {},
  "SimpleFuncsSingle_10": {},
  "SimpleFuncsSingle_11": {},
  "_comment_95": " Simple functions with surrounding operators.",
  "SimpleFuncsWithOps_0": {},
  "SimpleFuncsWithOps_1": {},
  "SimpleFuncsWithOps_2": {},
  "SimpleFuncsWithOps_3": {},
  "SimpleFuncsWithOps_4": {},
  "SimpleFuncsWithOps_5": {},
  "SimpleFuncsWithOps_6": {},
  "SimpleFuncsWithOps_7": {},
  "SimpleFuncsWithOps_8": {},
  "_comment_96": " Multiple simple functions.",
  "SimpleFuncsMulti_0": {},
  "SimpleFuncsMulti_1": {},
  "SimpleFuncsMulti_2": {},
  "_comment_97": " Nested simple functions.",
  "SimpleFuncsNested_0": {},
  "SimpleFuncsNested_1": {},
  "SimpleFuncsNested_2": {},
  "SimpleFuncsNested_3": {},
  "_comment_98": " Simple functions with explicit function application.",
  "SimpleFuncsExplicitApp_0": {},
  "SimpleFuncsExplicitApp_1": {},
  "SimpleFuncsExplicitApp_2": {},
  "SimpleFuncsExplicitApp_3": {},
  "_comment_99": " Prefix function applications",
  "PrefixFuncsSingle_0": {},
  "PrefixFuncsSingle_1": {},
  "PrefixFuncsSingle_2": {},
  "PrefixFuncsSingle_3": {},
  "PrefixFuncsSingle_4": {},
  "PrefixFuncsSingle_5": {},
  "PrefixFuncsSingle_6": {},
  "PrefixFuncsSingle_7": {},
  "PrefixFuncsSingle_8": {},
  "PrefixFuncsSingle_9": {},
  "_comment_100": " Prefix functions applications with surrounding operators.",
  "PrefixFuncsWithOps_0": {},
  "PrefixFuncsWithOps_1": {},
  "PrefixFuncsWithOps_2": {},
  "PrefixFuncsWithOps_3": {},
  "PrefixFuncsWithOps_4": {},
  "PrefixFuncsWithOps_5": {},
  "PrefixFuncsWithOps_6": {},
  "PrefixFuncsWithOps_7": {},
  "PrefixFuncsWithOps_8": {},
  "_comment_101": " Multiple prefix function applications.",
  "PrefixFuncsMulti_0": {},
  "PrefixFuncsMulti_1": {},
  "PrefixFuncsMulti_2": {},
  "_comment_102": " Prefix function applications with sub- and superscripts.",
  "PrefixFuncsScripts_0": {},
  "PrefixFuncsScripts_1": {},
  "PrefixFuncsScripts_2": {},
  "PrefixFuncsScripts_3": {},
  "_comment_103": " Prefix function applications with unfenced arguments.",
  "PrefixFuncsUnfenced_0": {},
  "PrefixFuncsUnfenced_1": {},
  "PrefixFuncsUnfenced_2": {},
  "PrefixFuncsUnfenced_3": {},
  "PrefixFuncsUnfenced_4": {},
  "PrefixFuncsUnfenced_5": {},
  "PrefixFuncsUnfenced_6": {},
  "PrefixFuncsUnfenced_7": {},
  "PrefixFuncsUnfenced_8": {},
  "_comment_104": " Prefix function applications with unfenced arguments in an operator",
  "_comment_105": " expression.",
  "PrefixFuncsUnfencedOps_0": {},
  "PrefixFuncsUnfencedOps_1": {},
  "PrefixFuncsUnfencedOps_2": {},
  "PrefixFuncsUnfencedOps_3": {},
  "PrefixFuncsUnfencedOps_4": {},
  "PrefixFuncsUnfencedOps_5": {},
  "PrefixFuncsUnfencedOps_6": {},
  "PrefixFuncsUnfencedOps_7": {},
  "PrefixFuncsUnfencedOps_8": {},
  "_comment_106": " Multiple prefix function applications with unfenced arguments.",
  "PrefixFuncsMultiUnfenced_0": {},
  "PrefixFuncsMultiUnfenced_1": {},
  "PrefixFuncsMultiUnfenced_2": {},
  "_comment_107": " Prefix function applications with sub- and superscripts and unfenced",
  "_comment_108": " arguments.",
  "PrefixFuncsScriptUnfenced_0": {},
  "PrefixFuncsScriptUnfenced_1": {},
  "PrefixFuncsScriptUnfenced_2": {},
  "PrefixFuncsScriptUnfenced_3": {},
  "PrefixFuncsScriptUnfenced_4": {},
  "_comment_109": " Prefix functions without arguments.",
  "PrefixFuncsNoArgs_0": {},
  "PrefixFuncsNoArgs_1": {},
  "PrefixFuncsNoArgs_2": {},
  "PrefixFuncsNoArgs_3": {},
  "PrefixFuncsNoArgs_4": {},
  "_comment_110": " Nested prefix function applications, both with and without fenced arguments.",
  "PrefixFuncsNested_0": {},
  "PrefixFuncsNested_1": {},
  "PrefixFuncsNested_2": {},
  "_comment_111": " Variations of matrices and their roles as determinants, square matrices or",
  "_comment_112": " rowvectors.",
  "Matrices_0": {},
  "Matrices_1": {},
  "Matrices_2": {},
  "Matrices_3": {},
  "Matrices_4": {},
  "Matrices_5": {},
  "_comment_113": " Variations of vectors and their roles as determinants or binomial",
  "_comment_114": " coefficients.",
  "Vectors_0": {},
  "Vectors_1": {},
  "Vectors_2": {},
  "Vectors_3": {},
  "Vectors_4": {},
  "_comment_115": " Variations of tables representing case statements,",
  "_comment_116": " multiline equations and regular tables.",
  "Tables_0": {},
  "Tables_1": {},
  "Tables_2": {},
  "Tables_3": {},
  "Tables_4": {},
  "Tables_5": {},
  "Tables_6": {},
  "_comment_117": " Tabular structures with fences that have are interspersed with ignored",
  "_comment_118": " elements, like merror.",
  "MatricesWithIgnores_0": {},
  "MatricesWithIgnores_1": {},
  "MatricesWithIgnores_2": {},
  "MatricesWithIgnores_3": {},
  "_comment_119": " Limit functions.",
  "LimitFunctions_0": {},
  "LimitFunctions_1": {},
  "LimitFunctions_2": {},
  "LimitFunctions_3": {},
  "LimitFunctions_4": {},
  "LimitFunctions_5": {},
  "LimitFunctions_6": {},
  "_comment_120": " Limit functions without arguments.",
  "LimitFunctionsNoArgs_0": {},
  "LimitFunctionsNoArgs_1": {},
  "LimitFunctionsNoArgs_2": {},
  "_comment_121": " Variations of big operators.",
  "BigOps_0": {},
  "BigOps_1": {},
  "BigOps_2": {},
  "_comment_122": " Big operators without Arguments.",
  "BigOpsNoArgs_0": {},
  "BigOpsNoArgs_1": {},
  "BigOpsNoArgs_2": {},
  "BigOpsNoArgs_3": {},
  "BigOpsNoArgs_4": {},
  "BigOpsNoArgs_5": {},
  "_comment_123": " Variations of integrals.",
  "Integrals_0": {},
  "Integrals_1": {},
  "Integrals_2": {},
  "Integrals_3": {},
  "Integrals_4": {},
  "Integrals_5": {},
  "Integrals_6": {},
  "Integrals_7": {},
  "Integrals_8": {},
  "Integrals_9": {},
  "Integrals_10": {},
  "_comment_124": " Translation of text elements.",
  "Text_0": {},
  "Text_1": {},
  "Text_2": {},
  "Text_3": {},
  "Text_4": {},
  "Text_5": {},
  "_comment_125": " Translation of mfenced elements.",
  "Mfenced_0": {},
  "Mfenced_1": {},
  "Mfenced_2": {},
  "Mfenced_3": {},
  "Mfenced_4": {},
  "Mfenced_5": {},
  "Mfenced_6": {},
  "Mfenced_7": {},
  "Mfenced_8": {},
  "Mfenced_9": {},
  "Mfenced_10": {},
  "Mfenced_11": {},
  "Mfenced_12": {},
  "Mfenced_13": {},
  "Mfenced_14": {},
  "Mfenced_15": {},
  "_comment_126": " Punctuated elements.",
  "Punctuated_0": {},
  "Punctuated_1": {},
  "Punctuated_2": {},
  "Punctuated_3": {},
  "Punctuated_4": {},
  "Punctuated_5": {},
  "Punctuated_6": {},
  "Punctuated_7": {},
  "Punctuated_8": {},
  "Punctuated_9": {},
  "_comment_127": " Units.",
  "_comment_128": " Tests simple expressions containing units.",
  "SimpleUnits_0": {},
  "SimpleUnits_1": {},
  "SimpleUnits_2": {},
  "SimpleUnits_3": {},
  "SimpleUnits_4": {},
  "SimpleUnits_5": {},
  "SimpleUnits_6": {},
  "_comment_129": " Tests more complex expressions containing units.",
  "ComplexUnits_0": {},
  "ComplexUnits_1": {},
  "ComplexUnits_2": {},
  "ComplexUnits_3": {},
  "_comment_130": " Tensors.",
  "_comment_131": " Pathological multiscripts expressions that are actually empty.",
  "EmptyTensors_0": {},
  "EmptyTensors_1": {},
  "EmptyTensors_2": {},
  "EmptyTensors_3": {},
  "EmptyTensors_4": {},
  "EmptyTensors_5": {},
  "EmptyTensors_6": {},
  "_comment_132": " Pathological multiscript expressions that are just the base element.",
  "BaseTensors_0": {},
  "BaseTensors_1": {},
  "BaseTensors_2": {},
  "BaseTensors_3": {},
  "BaseTensors_4": {},
  "BaseTensors_5": {},
  "_comment_133": " Pathological multiscript expressions that are actually on right",
  "_comment_134": " sub/superscripts.",
  "RightScriptTensors_0": {},
  "RightScriptTensors_1": {},
  "RightScriptTensors_2": {},
  "RightScriptTensors_3": {},
  "RightScriptTensors_4": {},
  "RightScriptTensors_5": {},
  "RightScriptTensors_6": {},
  "RightScriptTensors_7": {},
  "RightScriptTensors_8": {},
  "_comment_135": " Simple multiscript expressions with some scripts on the left.",
  "SimpleTensors_0": {},
  "SimpleTensors_1": {},
  "SimpleTensors_2": {},
  "SimpleTensors_3": {},
  "SimpleTensors_4": {},
  "SimpleTensors_5": {},
  "SimpleTensors_6": {},
  "SimpleTensors_7": {},
  "SimpleTensors_8": {},
  "SimpleTensors_9": {},
  "SimpleTensors_10": {},
  "SimpleTensors_11": {},
  "_comment_136": " Complex multiscript expressions with some scripts on the left.",
  "ComplexTensors_0": {},
  "ComplexTensors_1": {},
  "ComplexTensors_2": {},
  "ComplexTensors_3": {},
  "ComplexTensors_4": {},
  "ComplexTensors_5": {},
  "_comment_137": " Expressions containing ignored tags.",
  "_comment_138": " Expressions containing pseudo unit children, i.e., children whose only",
  "_comment_139": " siblings are ignored nodes.",
  "PseudoUnitChildren_0": {},
  "PseudoUnitChildren_1": {},
  "PseudoUnitChildren_2": {},
  "PseudoUnitChildren_3": {},
  "PseudoUnitChildren_4": {},
  "PseudoUnitChildren_5": {},
  "PseudoUnitChildren_6": {},
  "_comment_140": " Expressions with ignore tags, introducing a new mrow.",
  "InterspersedIgnore_0": {},
  "InterspersedIgnore_1": {},
  "InterspersedIgnore_2": {},
  "InterspersedIgnore_3": {},
  "InterspersedIgnore_4": {},
  "_comment_141": " Expressions with over and under scores.",
  "MunderOver_0": {},
  "MunderOver_1": {},
  "MunderOver_2": {},
  "_comment_142": " Embellished operators.",
  "_comment_143": " Simple embellished arguments.",
  "SimpleEmbellishment_0": {},
  "SimpleEmbellishment_1": {},
  "SimpleEmbellishment_2": {},
  "SimpleEmbellishment_3": {},
  "SimpleEmbellishment_4": {},
  "SimpleEmbellishment_5": {},
  "_comment_144": " Multi embellished arguments.",
  "MultiEmbellishment_0": {},
  "MultiEmbellishment_1": {},
  "MultiEmbellishment_2": {},
  "MultiEmbellishment_3": {},
  "MultiEmbellishment_4": {},
  "MultiEmbellishment_5": {},
  "MultiEmbellishment_6": {},
  "MultiEmbellishment_7": {},
  "_comment_145": " Expressions with embellished operators and relations.",
  "ComplexEmbellishment_0": {},
  "ComplexEmbellishment_1": {},
  "ComplexEmbellishment_2": {},
  "ComplexEmbellishment_3": {},
  "ComplexEmbellishment_4": {},
  "ComplexEmbellishment_5": {},
  "ComplexEmbellishment_6": {},
  "ComplexEmbellishment_7": {},
  "_comment_146": " Embellished Fences",
  "_comment_147": " Expressions with embellished fences right.",
  "EmbellishedRightFence_0": {},
  "EmbellishedRightFence_1": {},
  "EmbellishedRightFence_2": {},
  "EmbellishedRightFence_3": {},
  "EmbellishedRightFence_4": {},
  "EmbellishedRightFence_5": {},
  "_comment_148": " Expressions with embellished fences left.",
  "EmbellishedLeftFence_0": {},
  "EmbellishedLeftFence_1": {},
  "EmbellishedLeftFence_2": {},
  "EmbellishedLeftFence_3": {},
  "EmbellishedLeftFence_4": {},
  "EmbellishedLeftFence_5": {},
  "EmbellishedLeftFence_6": {},
  "_comment_149": " Expressions with embellished fences on both sides.",
  "EmbellishedBothFences_0": {},
  "EmbellishedBothFences_1": {},
  "EmbellishedBothFences_2": {},
  "_comment_150": " Expressions with padded background.",
  "EmbellishedPaddedFences_0": {},
  "EmbellishedPaddedFences_1": {},
  "EmbellishedPaddedFences_2": {},
  "_comment_151": " Expressions with embellished right fences as a sub-expression.",
  "EmbellRightSubexpr_0": {},
  "EmbellRightSubexpr_1": {},
  "EmbellRightSubexpr_2": {},
  "_comment_152": " Expressions with embellished left fences as a sub-expression.",
  "EmbellLeftSubexpr_0": {},
  "EmbellLeftSubexpr_1": {},
  "EmbellLeftSubexpr_2": {},
  "_comment_153": " Expressions with embellished both fences as a sub-expression.",
  "EmbellBothSubexpr_0": {},
  "EmbellBothSubexpr_1": {},
  "EmbellBothSubexpr_2": {},
  "_comment_154": " Expressions with embellished fences right and complex content.",
  "ComplexEmbellRight_0": {},
  "ComplexEmbellRight_1": {},
  "_comment_155": " Set expressions.",
  "Sets_0": {},
  "Sets_1": {},
  "Sets_2": {},
  "Sets_3": {},
  "Sets_4": {},
  "Sets_5": {},
  "Sets_6": {},
  "Sets_7": {}
}
