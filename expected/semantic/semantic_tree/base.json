{
  "factory": "stree",
  "base": "input/semantic/base.json",
  "information": "Semantic Tree tests.",
  "exclude": [],
  "tests": {
    "Wrappers_0": {
      "expected": "<stree><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"3\">⁢<content><operator role=\"multiplication\" id=\"2\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></infixop></stree>"
    },
    "Wrappers_1": {
      "expected": "<stree><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"13\">⁢<content><operator role=\"multiplication\" id=\"12\">⁢</operator><operator role=\"multiplication\" id=\"9\">⁢</operator><operator role=\"multiplication\" id=\"6\">⁢</operator><operator role=\"multiplication\" id=\"10\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">q</identifier><postfixop role=\"addition\" id=\"3\">+<content><operator role=\"addition\" id=\"2\">+</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></postfixop><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"4\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">a</identifier><identifier role=\"unit\" font=\"normal\" annotation=\"clearspeak:unit\" id=\"8\">nix</identifier></children></infixop></stree>"
    },
    "Wrappers_2": {
      "expected": "<stree><fenced role=\"neutral\" id=\"3\"><content><fence role=\"neutral\" id=\"0\">|</fence><fence role=\"neutral\" id=\"2\">|</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></fenced></stree>"
    },
    "Scripts_0": {
      "expected": "<stree><subscript role=\"latinletter\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></subscript></stree>"
    },
    "Scripts_1": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></superscript></stree>"
    },
    "Scripts_2": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"4\"><children><subscript role=\"subsup\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></subscript><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">c</identifier></children></superscript></stree>"
    },
    "Scripts_3": {
      "expected": "<stree><subscript role=\"latinletter\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></subscript></stree>"
    },
    "Scripts_4": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></superscript></stree>"
    },
    "Scripts_5": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"4\"><children><subscript role=\"subsup\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></subscript><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">c</identifier></children></superscript></stree>"
    },
    "Scripts_6": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"4\"><children><subscript role=\"subsup\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier></children></subscript><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">c</identifier></children></superscript></stree>"
    },
    "Scripts_7": {
      "expected": "<stree><superscript role=\"latinletter\" id=\"7\"><children><subscript role=\"subsup\" id=\"6\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"4\">⁢<content><operator role=\"multiplication\" id=\"3\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">b</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">d</identifier></children></infixop></children></subscript><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">c</identifier></children></superscript></stree>"
    },
    "_comment_0": " Numbers.",
    "_comment_1": " Test number representations.",
    "Numbers_0": {
      "expected": "<stree><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number></stree>"
    },
    "Numbers_1": {
      "expected": "<stree><number role=\"float\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2.0</number></stree>"
    },
    "Numbers_2": {
      "expected": "<number role=\"othernumber\" font=\"normal\" id=\"0\">2t3</number>"
    },
    "Numbers_3": {
      "expected": "<stree><fraction role=\"vulgar\" annotation=\"clearspeak:simple\" id=\"2\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">1</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">2</number></children></fraction></stree>"
    },
    "Numbers_4": {
      "expected": "<stree><fraction role=\"division\" id=\"2\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">1</number><number role=\"float\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">2.5</number></children></fraction></stree>"
    },
    "_comment_2": " Test mixed number representations.",
    "MixedNumbers_0": {
      "expected": "<stree><number role=\"mixed\" id=\"4\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">3</number><fraction role=\"vulgar\" annotation=\"clearspeak:simple\" id=\"3\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">1</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">2</number></children></fraction></children></number></stree>"
    },
    "MixedNumbers_1": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><fraction><children><number>1</number><number>2</number></children></fraction><number>3</number></children></infixop>"
    },
    "MixedNumbers_2": {
      "expected": "<stree><number role=\"mixed\" id=\"4\"><children><number role=\"float\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">3.0</number><fraction role=\"vulgar\" annotation=\"clearspeak:simple\" id=\"3\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">1</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">2</number></children></fraction></children></number></stree>"
    },
    "MixedNumbers_3": {
      "expected": "<stree><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"5\">⁢<content><operator role=\"multiplication\" id=\"4\">⁢</operator></content><children><number role=\"othernumber\" font=\"normal\" id=\"0\">3.0e</number><fraction role=\"vulgar\" annotation=\"clearspeak:simple\" id=\"3\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">1</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">2</number></children></fraction></children></infixop></stree>"
    },
    "MixedNumbers_4": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><fraction><children><number>1</number><number>2</number></children></fraction><number>3.0</number></children></infixop>"
    },
    "MixedNumbers_5": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><number><children><number>3</number><fraction><children><number>1</number><number>2</number></children></fraction></children></number><identifier>a</identifier></children></infixop>"
    },
    "MixedNumbers_6": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator><operator>⁢</operator></content><children><identifier>b</identifier><number><children><number>3</number><fraction><children><number>1</number><number>2</number></children></fraction></children></number><identifier>a</identifier></children></infixop>"
    },
    "_comment_3": " Relations.",
    "_comment_4": " Test relation trees.",
    "Relations_0": {
      "brief": true,
      "expected": "<relation>=</relation>"
    },
    "Relations_1": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><identifier>a</identifier><identifier>b</identifier></children></relseq>"
    },
    "Relations_2": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation><relation>=</relation></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier></children></relseq>"
    },
    "Relations_3": {
      "brief": true,
      "expected": "<multirel><content><relation>=</relation><relation>=</relation><relation>≤</relation></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier><identifier>d</identifier></children></multirel>"
    },
    "_comment_5": " Operators.",
    "_comment_6": " Test operator trees with pre- and postfixes.",
    "_comment_7": " Pathological operator only case.",
    "PrePostfixOperators_0": {
      "brief": true,
      "expected": "<prefixop>+<content><operator>+</operator></content><children><prefixop>-<content><operator>-</operator></content><children><operator>+</operator></children></prefixop></children></prefixop>"
    },
    "_comment_8": " Single identifier with prefixes.",
    "PrePostfixOperators_1": {
      "brief": true,
      "expected": "<prefixop>+ +<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier></children></prefixop>"
    },
    "_comment_9": " Single identifier with prefix and negative.",
    "PrePostfixOperators_2": {
      "brief": true,
      "expected": "<prefixop>+<content><operator>+</operator></content><children><prefixop>-<content><operator>-</operator></content><children><identifier>a</identifier></children></prefixop></children></prefixop>"
    },
    "_comment_10": " Single identifier with postfixes.",
    "PrePostfixOperators_3": {
      "brief": true,
      "expected": "<postfixop>+ -<content><operator>+</operator><operator>-</operator></content><children><identifier>a</identifier></children></postfixop>"
    },
    "_comment_11": " Single identifier with pre- and postfixes.",
    "PrePostfixOperators_4": {
      "brief": true,
      "expected": "<postfixop>+ +<content><operator>+</operator><operator>+</operator></content><children><prefixop>+ +<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier></children></prefixop></children></postfixop>"
    },
    "_comment_12": " Single identifier with mixed pre- and postfixes.",
    "PrePostfixOperators_5": {
      "brief": true,
      "expected": "<postfixop>∓ +<content><operator>∓</operator><operator>+</operator></content><children><prefixop>∓ +<content><operator>∓</operator><operator>+</operator></content><children><identifier>a</identifier></children></prefixop></children></postfixop>"
    },
    "_comment_13": " Two identifiers with pre- and postfixes.",
    "PrePostfixOperators_6": {
      "brief": true,
      "expected": "<infixop>∓<content><operator>∓</operator></content><children><prefixop>+ +<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier></children></prefixop><postfixop>+<content><operator>+</operator></content><children><prefixop>+<content><operator>+</operator></content><children><identifier>b</identifier></children></prefixop></children></postfixop></children></infixop>"
    },
    "_comment_14": " Three identifiers with pre- and postfixes.",
    "PrePostfixOperators_7": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><infixop>∓<content><operator>∓</operator></content><children><prefixop>+ +<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier></children></prefixop><prefixop>+<content><operator>+</operator></content><children><identifier>b</identifier></children></prefixop></children></infixop><postfixop>+<content><operator>+</operator></content><children><prefixop>∓<content><operator>∓</operator></content><children><identifier>c</identifier></children></prefixop></children></postfixop></children></infixop>"
    },
    "_comment_15": " Test operator trees with single operator.",
    "_comment_16": " Single identifier.",
    "SingleOperators_0": {
      "brief": true,
      "expected": "<identifier>a</identifier>"
    },
    "_comment_17": " Single implicit node.",
    "SingleOperators_1": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><identifier>a</identifier><identifier>b</identifier></children></infixop>"
    },
    "_comment_18": " Implicit multi node.",
    "SingleOperators_2": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator><operator>⁢</operator></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier></children></infixop>"
    },
    "_comment_19": " Single addition.",
    "SingleOperators_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><identifier>a</identifier><identifier>b</identifier></children></infixop>"
    },
    "_comment_20": " Multi addition.",
    "SingleOperators_4": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier></children></infixop>"
    },
    "_comment_21": " Multi addition with implicit node.",
    "SingleOperators_5": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><infixop>⁢<content><operator>⁢</operator></content><children><identifier>b</identifier><identifier>c</identifier></children></infixop><identifier>d</identifier></children></infixop>"
    },
    "_comment_22": " Test operator trees with multiple operators.",
    "_comment_23": " Addition and subtraction.",
    "MultipleOperators_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><infixop>-<content><operator>-</operator></content><children><infixop>+<content><operator>+</operator></content><children><identifier>a</identifier><identifier>b</identifier></children></infixop><identifier>c</identifier></children></infixop><identifier>d</identifier></children></infixop>"
    },
    "_comment_24": " Addition and subtraction.",
    "MultipleOperators_1": {
      "brief": true,
      "expected": "<infixop>-<content><operator>-</operator><operator>-</operator></content><children><infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier></children></infixop><identifier>d</identifier><identifier>e</identifier></children></infixop>"
    },
    "_comment_25": " Addition and explicit multiplication.",
    "MultipleOperators_2": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><infixop>∘<content><operator>∘</operator></content><children><identifier>b</identifier><identifier>c</identifier></children></infixop><identifier>d</identifier></children></infixop>"
    },
    "_comment_26": " Addition with explicit and implicit multiplication.",
    "MultipleOperators_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><infixop>∘<content><operator>∘</operator></content><children><identifier>b</identifier><infixop>⁢<content><operator>⁢</operator></content><children><identifier>c</identifier><identifier>d</identifier></children></infixop></children></infixop><infixop>∘<content><operator>∘</operator></content><children><identifier>e</identifier><identifier>f</identifier></children></infixop></children></infixop>"
    },
    "_comment_27": " Two Additions, subtraction plus explicit and implicit multiplication,",
    "_comment_28": " one prefix and one postfix.",
    "MultipleOperators_4": {
      "brief": true,
      "expected": "<infixop>⊕<content><operator>⊕</operator><operator>⊕</operator></content><children><infixop>+<content><operator>+</operator></content><children><infixop>-<content><operator>-</operator></content><children><infixop>+<content><operator>+</operator><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><identifier>b</identifier><infixop>⁢<content><operator>⁢</operator></content><children><identifier>c</identifier><identifier>d</identifier></children></infixop><infixop>∘<content><operator>∘</operator></content><children><identifier>e</identifier><identifier>f</identifier></children></infixop></children></infixop><identifier>g</identifier></children></infixop><prefixop>+<content><operator>+</operator></content><children><identifier>h</identifier></children></prefixop></children></infixop><identifier>i</identifier><postfixop>+ +<content><operator>+</operator><operator>+</operator></content><children><identifier>j</identifier></children></postfixop></children></infixop>"
    },
    "_comment_29": " Test operator trees with multiplication operators.",
    "_comment_30": " Addition and subtraction.",
    "MultiplicationOperators_0": {
      "brief": true,
      "expected": "<infixop>*<content><operator>*</operator><operator>*</operator><operator>*</operator></content><children><identifier>a</identifier><identifier>b</identifier><identifier>c</identifier><identifier>d</identifier></children></infixop>"
    },
    "MultiplicationOperators_1": {
      "brief": true,
      "expected": "<infixop>·<content><operator>·</operator></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>a</identifier></children></infixop><identifier>m</identifier></children></infixop>"
    },
    "MultiplicationOperators_2": {
      "brief": true,
      "expected": "<infixop>·<content><operator>·</operator><operator>·</operator></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>a</identifier></children></infixop><identifier>m</identifier><identifier>s</identifier></children></infixop>"
    },
    "MultiplicationOperators_3": {
      "brief": true,
      "expected": "<infixop>·<content><operator>·</operator><operator>·</operator><operator>·</operator><operator>·</operator></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>a</identifier></children></infixop><identifier>m</identifier><identifier>s</identifier><infixop>⁢<content><operator>⁢</operator></content><children><identifier>c</identifier><identifier>b</identifier></children></infixop><identifier>k</identifier></children></infixop>"
    },
    "MultiplicationOperators_4": {
      "brief": true,
      "expected": "<infixop>·<content><operator>·</operator><operator>·</operator></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>a</identifier></children></infixop><superscript><children><identifier>m</identifier><number>2</number></children></superscript><superscript><children><identifier>s</identifier><prefixop>-<content><operator>-</operator></content><children><number>2</number></children></prefixop></children></superscript></children></infixop>"
    },
    "MultiplicationOperators_5": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>J</identifier></children></infixop><infixop>·<content><operator>·</operator><operator>·</operator></content><children><infixop>⁢<content><operator>⁢</operator></content><children><number>1</number><identifier>a</identifier></children></infixop><superscript><children><identifier>m</identifier><number>2</number></children></superscript><superscript><children><identifier>s</identifier><prefixop>-<content><operator>-</operator></content><children><number>2</number></children></prefixop></children></superscript></children></infixop></children></relseq>"
    },
    "_comment_85": " Square roots",
    "SquareRoots_0": {
      "brief": false,
      "expected": "<sqrt role=\"unknown\" id=\"1\"><children><empty role=\"unknown\" id=\"0\"/></children></sqrt>"
    },
    "SquareRoots_1": {
      "expected": "<stree><sqrt role=\"unknown\" id=\"1\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">x</identifier></children></sqrt></stree>"
    },
    "SquareRoots_2": {
      "expected": "<stree><sqrt role=\"unknown\" id=\"2\"><children><sqrt role=\"unknown\" id=\"1\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">x</identifier></children></sqrt></children></sqrt></stree>"
    },
    "SquareRoots_3": {
      "expected": "<stree><sqrt role=\"unknown\" id=\"4\"><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"3\">⁢<content><operator role=\"multiplication\" id=\"2\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">n</identifier></children></infixop></children></sqrt></stree>"
    },
    "SquareRoots_4": {
      "expected": "<stree><sqrt role=\"unknown\" id=\"6\"><children><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"5\">⁢<content><operator role=\"multiplication\" id=\"4\">⁢</operator></content><children><sqrt role=\"unknown\" id=\"2\"><children><sqrt role=\"unknown\" id=\"1\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">x</identifier></children></sqrt></children></sqrt><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></infixop></children></sqrt></stree>"
    },
    "_comment_86": " Regular roots",
    "RegularRoots_0": {
      "brief": false,
      "expected": "<stree><root role=\"unknown\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">n</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></root></stree>"
    },
    "RegularRoots_1": {
      "expected": "<stree><root role=\"unknown\" id=\"8\"><children><infixop role=\"addition\" id=\"3\">+<content><operator role=\"addition\" id=\"1\">+</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">n</identifier><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">1</number></children></infixop><infixop role=\"addition\" id=\"7\">+<content><operator role=\"addition\" id=\"5\">+</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"4\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">y</identifier></children></infixop></children></root></stree>"
    },
    "RegularRoots_2": {
      "expected": "<stree><root role=\"unknown\" id=\"4\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">m</identifier><root role=\"unknown\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">n</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">x</identifier></children></root></children></root></stree>"
    },
    "RegularRoots_3": {
      "expected": "<stree><root role=\"unknown\" id=\"9\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">m</identifier><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"8\">⁢<content><operator role=\"multiplication\" id=\"7\">⁢</operator></content><children><root role=\"unknown\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">n</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">x</identifier></children></root><root role=\"unknown\" id=\"6\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"4\">l</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">y</identifier></children></root></children></infixop></children></root></stree>"
    },
    "_comment_87": " Mixed roots",
    "MixedRoots_0": {
      "brief": false,
      "expected": "<stree><sqrt role=\"unknown\" id=\"3\"><children><root role=\"unknown\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">n</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></root></children></sqrt></stree>"
    },
    "MixedRoots_1": {
      "expected": "<stree><root role=\"unknown\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">n</identifier><sqrt role=\"unknown\" id=\"2\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></sqrt></children></root></stree>"
    },
    "MixedRoots_2": {
      "expected": "<stree><root role=\"unknown\" id=\"6\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">n</identifier><sqrt role=\"unknown\" id=\"5\"><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"4\">⁢<content><operator role=\"multiplication\" id=\"3\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">y</identifier></children></infixop></children></sqrt></children></root></stree>"
    },
    "_comment_88": " Simple function applications",
    "SimpleFuncsSingle_0": {
      "brief": true,
      "expected": "<identifier>f</identifier>"
    },
    "SimpleFuncsSingle_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_3": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><punctuated><content><punctuation>,</punctuation><punctuation>,</punctuation></content><children><identifier>x</identifier><punctuation>,</punctuation><identifier>y</identifier><punctuation>,</punctuation><identifier>z</identifier></children></punctuated></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_4": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><superscript><children><identifier>x</identifier><number>2</number></children></superscript></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_5": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><subscript><children><identifier>x</identifier><number>2</number></children></subscript></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_6": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><superscript><children><subscript><children><identifier>x</identifier><number>2</number></children></subscript><number>1</number></children></superscript></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_7": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><overscore><children><identifier>x</identifier><number>2</number></children></overscore></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_8": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><underscore><children><identifier>x</identifier><number>2</number></children></underscore></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_9": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><overscore><children><underscore><children><identifier>x</identifier><number>2</number></children></underscore><number>1</number></children></overscore></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_10": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><fraction><children><number>1</number><number>2</number></children></fraction></children></fenced></children></appl>"
    },
    "SimpleFuncsSingle_11": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></infixop>"
    },
    "_comment_89": " Simple functions with surrounding operators.",
    "SimpleFuncsWithOps_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "SimpleFuncsWithOps_1": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><number>2</number></children></infixop>"
    },
    "SimpleFuncsWithOps_2": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><number>2</number></children></infixop>"
    },
    "SimpleFuncsWithOps_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "SimpleFuncsWithOps_4": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></infixop>"
    },
    "SimpleFuncsWithOps_5": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></infixop>"
    },
    "SimpleFuncsWithOps_6": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></relseq>"
    },
    "SimpleFuncsWithOps_7": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></relseq>"
    },
    "SimpleFuncsWithOps_8": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></relseq>"
    },
    "_comment_90": " Multiple simple functions.",
    "SimpleFuncsMulti_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "SimpleFuncsMulti_1": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><identifier>h</identifier></content><children><identifier>h</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></relseq>"
    },
    "SimpleFuncsMulti_2": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>y</identifier></children></fenced></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><identifier>h</identifier></content><children><identifier>h</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl></children></relseq>"
    },
    "_comment_91": " Nested simple functions.",
    "SimpleFuncsNested_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></fenced></children></appl>"
    },
    "SimpleFuncsNested_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>h</identifier></content><children><identifier>h</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>⁢<content><operator>⁢</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>y</identifier></children></fenced></children></appl></children></infixop></children></fenced></children></appl>"
    },
    "SimpleFuncsNested_2": {
      "brief": true,
      "expected": "<infixop>⁢<content><operator>⁢</operator></content><children><identifier>h</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>g</identifier></content><children><identifier>g</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>y</identifier></children></fenced></children></appl></children></infixop></children></fenced></children></infixop>"
    },
    "SimpleFuncsNested_3": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>P</identifier></content><children><identifier>P</identifier><fenced><content><fence>[</fence><fence>]</fence></content><children><relseq>=<content><relation>=</relation></content><children><identifier>x</identifier><number>2</number></children></relseq></children></fenced></children></appl>"
    },
    "_comment_92": " Simple functions with explicit function application.",
    "SimpleFuncsExplicitApp_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl>"
    },
    "SimpleFuncsExplicitApp_1": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><identifier>f</identifier><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl></children></infixop>"
    },
    "SimpleFuncsExplicitApp_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><subscript><children><identifier>f</identifier><number>1</number></children></subscript><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl>"
    },
    "SimpleFuncsExplicitApp_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><superscript><children><subscript><children><identifier>f</identifier><identifier>n</identifier></children></subscript><number>2</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><identifier>f</identifier></content><children><superscript><children><subscript><children><identifier>f</identifier><identifier>m</identifier></children></subscript><number>2</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl></children></infixop>"
    },
    "_comment_93": " Prefix function applications",
    "PrefixFuncsSingle_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><superscript><children><identifier>x</identifier><number>2</number></children></superscript></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_3": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><subscript><children><identifier>x</identifier><number>2</number></children></subscript></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_4": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><superscript><children><subscript><children><identifier>x</identifier><number>2</number></children></subscript><number>1</number></children></superscript></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_5": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><overscore><children><identifier>x</identifier><number>2</number></children></overscore></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_6": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><underscore><children><identifier>x</identifier><number>2</number></children></underscore></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_7": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><overscore><children><underscore><children><identifier>x</identifier><number>2</number></children></underscore><number>1</number></children></overscore></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_8": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><fraction><children><number>1</number><number>2</number></children></fraction></children></fenced></children></appl>"
    },
    "PrefixFuncsSingle_9": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>+<content><operator>+</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl>"
    },
    "_comment_94": " Prefix functions applications with surrounding operators.",
    "PrefixFuncsWithOps_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "PrefixFuncsWithOps_1": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><number>2</number></children></infixop>"
    },
    "PrefixFuncsWithOps_2": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><number>2</number></children></infixop>"
    },
    "PrefixFuncsWithOps_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "PrefixFuncsWithOps_4": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></infixop>"
    },
    "PrefixFuncsWithOps_5": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></infixop>"
    },
    "PrefixFuncsWithOps_6": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></relseq>"
    },
    "PrefixFuncsWithOps_7": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></relseq>"
    },
    "PrefixFuncsWithOps_8": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><identifier>b</identifier></children></relseq>"
    },
    "_comment_95": " Multiple prefix function applications.",
    "PrefixFuncsMulti_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop>"
    },
    "PrefixFuncsMulti_1": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><function>tan</function></content><children><function>tan</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></relseq>"
    },
    "PrefixFuncsMulti_2": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>y</identifier></children></fenced></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><function>tan</function></content><children><function>tan</function><fenced><content><fence>(</fence><fence>)</fence></content><children><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></fenced></children></appl></children></relseq>"
    },
    "_comment_96": " Prefix function applications with sub- and superscripts.",
    "PrefixFuncsScripts_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl>"
    },
    "PrefixFuncsScripts_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><subscript><children><function>sin</function><number>1</number></children></subscript><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl>"
    },
    "PrefixFuncsScripts_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><subscript><children><function>sin</function><number>2</number></children></subscript><number>1</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl>"
    },
    "PrefixFuncsScripts_3": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><superscript><children><function>cos</function><number>2</number></children></superscript><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>y</identifier></children></fenced></children></appl></children></infixop><number>1</number></children></relseq>"
    },
    "_comment_97": " Prefix function applications with unfenced arguments.",
    "PrefixFuncsUnfenced_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl>"
    },
    "PrefixFuncsUnfenced_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></appl>"
    },
    "PrefixFuncsUnfenced_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><superscript><children><identifier>x</identifier><number>2</number></children></superscript></children></appl>"
    },
    "PrefixFuncsUnfenced_3": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><subscript><children><identifier>x</identifier><number>2</number></children></subscript></children></appl>"
    },
    "PrefixFuncsUnfenced_4": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><superscript><children><subscript><children><identifier>x</identifier><number>2</number></children></subscript><number>1</number></children></superscript></children></appl>"
    },
    "PrefixFuncsUnfenced_5": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><overscore><children><identifier>x</identifier><number>2</number></children></overscore></children></appl>"
    },
    "PrefixFuncsUnfenced_6": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><underscore><children><identifier>x</identifier><number>2</number></children></underscore></children></appl>"
    },
    "PrefixFuncsUnfenced_7": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><overscore><children><underscore><children><identifier>x</identifier><number>2</number></children></underscore><number>1</number></children></overscore></children></appl>"
    },
    "PrefixFuncsUnfenced_8": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fraction><children><number>1</number><number>2</number></children></fraction></children></appl>"
    },
    "_comment_98": " Prefix function applications with unfenced arguments in an operator",
    "_comment_99": " expression.",
    "PrefixFuncsUnfencedOps_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_1": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><number>2</number></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_2": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><number>1</number><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><number>2</number></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_3": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_4": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><identifier>b</identifier></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_5": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator><operator>+</operator></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><identifier>b</identifier></children></infixop>"
    },
    "PrefixFuncsUnfencedOps_6": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl></children></relseq>"
    },
    "PrefixFuncsUnfencedOps_7": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><identifier>b</identifier></children></relseq>"
    },
    "PrefixFuncsUnfencedOps_8": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation><relation>=</relation></content><children><identifier>a</identifier><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><identifier>b</identifier></children></relseq>"
    },
    "_comment_100": " Multiple prefix function applications with unfenced arguments.",
    "PrefixFuncsMultiUnfenced_0": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><identifier>x</identifier></children></appl></children></infixop>"
    },
    "PrefixFuncsMultiUnfenced_1": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><identifier>x</identifier></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><function>tan</function></content><children><function>tan</function><identifier>x</identifier></children></appl></children></relseq>"
    },
    "PrefixFuncsMultiUnfenced_2": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><identifier>x</identifier></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><identifier>y</identifier></children></appl></children></infixop><appl><content><punctuation>⁡</punctuation><function>tan</function></content><children><function>tan</function><infixop>⁢<content><operator>⁢</operator></content><children><identifier>x</identifier><identifier>y</identifier></children></infixop></children></appl></children></relseq>"
    },
    "_comment_101": " Prefix function applications with sub- and superscripts and unfenced",
    "_comment_102": " arguments.",
    "PrefixFuncsScriptUnfenced_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><identifier>x</identifier></children></appl>"
    },
    "PrefixFuncsScriptUnfenced_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><subscript><children><function>sin</function><number>1</number></children></subscript><identifier>x</identifier></children></appl>"
    },
    "PrefixFuncsScriptUnfenced_2": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><subscript><children><function>sin</function><number>2</number></children></subscript><number>1</number></children></superscript><identifier>x</identifier></children></appl>"
    },
    "PrefixFuncsScriptUnfenced_3": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><identifier>x</identifier></children></appl><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><superscript><children><function>cos</function><number>2</number></children></superscript><identifier>y</identifier></children></appl></children></infixop><number>1</number></children></relseq>"
    },
    "PrefixFuncsScriptUnfenced_4": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><superscript><children><subscript><children><superscript><children><subscript><children><function>sin</function><number>2</number></children></subscript><number>1</number></children></superscript><identifier>n</identifier></children></subscript><identifier>m</identifier></children></superscript><identifier>x</identifier></children></appl>"
    },
    "_comment_103": " Prefix functions without arguments.",
    "PrefixFuncsNoArgs_0": {
      "brief": true,
      "expected": "<function>sin</function>"
    },
    "PrefixFuncsNoArgs_1": {
      "brief": true,
      "expected": "<superscript><children><function>sin</function><number>2</number></children></superscript>"
    },
    "PrefixFuncsNoArgs_2": {
      "brief": true,
      "expected": "<infixop>+<content><operator>+</operator></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><superscript><children><function>cos</function><number>2</number></children></superscript></children></infixop>"
    },
    "PrefixFuncsNoArgs_3": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><infixop>+<content><operator>+</operator></content><children><superscript><children><function>sin</function><number>2</number></children></superscript><superscript><children><function>cos</function><number>2</number></children></superscript></children></infixop><number>1</number></children></relseq>"
    },
    "PrefixFuncsNoArgs_4": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><function>sin</function><fraction><children><number>1</number><function>csc</function></children></fraction></children></relseq>"
    },
    "_comment_104": " Nested prefix function applications, both with and without fenced arguments.",
    "PrefixFuncsNested_0": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>log</function></content><children><function>log</function><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><identifier>x</identifier></children></appl></children></appl>"
    },
    "PrefixFuncsNested_1": {
      "brief": true,
      "expected": "<appl><content><punctuation>⁡</punctuation><function>ln</function></content><children><function>ln</function><fenced><content><fence>(</fence><fence>)</fence></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></fenced></children></appl>"
    },
    "PrefixFuncsNested_2": {
      "brief": true,
      "expected": "<relseq>=<content><relation>=</relation></content><children><appl><content><punctuation>⁡</punctuation><function>log</function></content><children><function>log</function><appl><content><punctuation>⁡</punctuation><function>cos</function></content><children><function>cos</function><identifier>x</identifier></children></appl></children></appl><appl><content><punctuation>⁡</punctuation><function>ln</function></content><children><function>ln</function><fenced><content><fence>(</fence><fence>)</fence></content><children><appl><content><punctuation>⁡</punctuation><function>sin</function></content><children><function>sin</function><fenced><content><fence>(</fence><fence>)</fence></content><children><identifier>x</identifier></children></fenced></children></appl></children></fenced></children></appl></children></relseq>"
    },
    "_comment_179": " Set expressions.",
    "Sets_0": {
      "expected": "<fenced role=\"set empty\" id=\"3\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"1\">}</fence></content><children><empty role=\"unknown\" id=\"2\"/></children></fenced>"
    },
    "Sets_1": {
      "expected": "<stree><fenced role=\"set singleton\" id=\"3\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"2\">}</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier></children></fenced></stree>"
    },
    "Sets_2": {
      "expected": "<stree><fenced role=\"set collection\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><punctuated role=\"sequence\" id=\"5\"><content><punctuation role=\"comma\" id=\"2\">,</punctuation></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><punctuation role=\"comma\" id=\"2\">,</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></punctuated></children></fenced></stree>"
    },
    "Sets_3": {
      "expected": "<stree><fenced role=\"set extended\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><punctuated role=\"sequence\" id=\"5\"><content><punctuation role=\"vbar\" id=\"2\">|</punctuation></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><punctuation role=\"vbar\" id=\"2\">|</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></punctuated></children></fenced></stree>"
    },
    "Sets_4": {
      "expected": "<stree><fenced role=\"set extended\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><punctuated role=\"sequence\" id=\"5\"><content><punctuation role=\"colon\" id=\"2\">:</punctuation></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><punctuation role=\"colon\" id=\"2\">:</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></punctuated></children></fenced></stree>"
    },
    "Sets_5": {
      "expected": "<stree><fenced role=\"leftright\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><infixop role=\"addition\" id=\"5\">+<content><operator role=\"addition\" id=\"2\">+</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></infixop></children></fenced></stree>"
    },
    "Sets_6": {
      "expected": "<stree><fenced role=\"set singleton\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"3\">}</fence></content><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"5\">⁢<content><operator role=\"multiplication\" id=\"4\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">y</identifier></children></infixop></children></fenced></stree>"
    },
    "Sets_7": {
      "expected": "<stree><fenced role=\"set singleton\" id=\"5\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><fraction role=\"division\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">y</identifier></children></fraction></children></fenced></stree>"
    },
    "Sets_8": {
      "expected": "<stree><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"6\"><content><punctuation role=\"application\" id=\"5\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">P</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">P</identifier><fenced role=\"leftright\" id=\"4\"><content><fence role=\"open\" id=\"1\">{</fence><fence role=\"close\" id=\"3\">}</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">x</identifier></children></fenced></children></appl></stree>"
    },
    "Sets_9": {
      "expected": "<stree><fenced role=\"leftright\" id=\"6\"><content><fence role=\"open\" id=\"0\">{</fence><fence role=\"close\" id=\"4\">}</fence></content><children><infixop role=\"multiplication\" id=\"5\">*<content><operator role=\"multiplication\" id=\"2\">*</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">x</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">y</identifier></children></infixop></children></fenced></stree>"
    },
    "_comment_180": " Test for issue #287",
    "Sets_10": {
      "expected": "<stree><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"13\"><content><punctuation role=\"application\" id=\"12\">⁡</punctuation><identifier role=\"simple function\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">Γ</identifier></content><children><subscript role=\"simple function\" id=\"7\"><children><identifier role=\"simple function\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">Γ</identifier><fenced role=\"set singleton\" id=\"6\"><content><fence role=\"open\" id=\"1\">{</fence><fence role=\"close\" id=\"5\">}</fence></content><children><subscript role=\"latinletter\" id=\"4\"><children><identifier role=\"latinletter\" font=\"caligraphic\" annotation=\"clearspeak:simple\" id=\"2\">M</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">k</identifier></children></subscript></children></fenced></children></subscript><fenced role=\"leftright\" id=\"11\"><content><fence role=\"open\" id=\"8\">(</fence><fence role=\"close\" id=\"10\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"9\">X</identifier></children></fenced></children></appl></stree>"
    },
    "HiddenIgnoreElements_0": {
      "expected": "<stree><fraction role=\"division\" id=\"3\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">b</identifier></children></fraction></stree>"
    },
    "HiddenIgnoreElements_1": {
      "expected": "<stree><fraction role=\"division\" id=\"5\"><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"3\">⁢<content><operator role=\"multiplication\" id=\"2\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">d</identifier></children></infixop><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"4\">b</identifier></children></fraction></stree>"
    },
    "HiddenIgnoreElements_2": {
      "expected": "<stree><fraction role=\"division\" id=\"4\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">a</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">b</identifier></children></fraction></stree>"
    },
    "HiddenEmptyTokens_0": {
      "expected": "<stree><subscript role=\"vbar\" embellished=\"punctuation\" id=\"3\"><children><punctuation role=\"vbar\" id=\"1\">|</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></subscript></stree>"
    },
    "HiddenEmptyTokens_1": {
      "expected": "<stree><subscript role=\"vbar\" embellished=\"punctuation\" id=\"3\"><children><punctuation role=\"vbar\" id=\"1\">|</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></subscript></stree>"
    },
    "HiddenEmptyTokens_2": {
      "expected": "<stree><subscript role=\"vbar\" embellished=\"punctuation\" id=\"4\"><children><punctuation role=\"vbar\" id=\"2\">|</punctuation><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">t</identifier></children></subscript></stree>"
    },
    "_comment_181": " Tests for vulgar fractions.",
    "VulgarFractions_0": {
      "expected": "<stree><fraction role=\"vulgar\" annotation=\"clearspeak:simple\" id=\"2\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">1</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">2</number></children></fraction></stree>"
    },
    "VulgarFractions_1": {
      "expected": "<stree><fraction role=\"division\" id=\"2\"><children><number role=\"float\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">1.5</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">2</number></children></fraction></stree>"
    },
    "VulgarFractions_2": {
      "expected": "<stree><fraction role=\"division\" id=\"2\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">1</number><number role=\"float\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">2.5</number></children></fraction></stree>"
    },
    "VulgarFractions_3": {
      "expected": "<stree><fraction role=\"division\" id=\"6\"><children><superscript role=\"integer\" id=\"2\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">3</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">4</number></children></superscript><superscript role=\"integer\" id=\"5\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"3\">8</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"4\">10</number></children></superscript></children></fraction></stree>"
    },
    "_comment_182": " Issue 376: Division treated similar to multiplication.",
    "Issue376_0": {
      "expected": "<stree><infixop role=\"addition\" id=\"5\">+<content><operator role=\"addition\" id=\"1\">+</operator></content><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number><infixop role=\"division\" id=\"6\">÷<content><operator role=\"division\" id=\"3\">÷</operator></content><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">27</number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"4\">9</number></children></infixop></children></infixop></stree>"
    },
    "_comment_183": " Issue 382: Singleton integral in expression",
    "Issue382_0": {
      "expected": "<relseq role=\"equality\" id=\"3\">=<content><relation role=\"equality\" id=\"0\">=</relation></content><children><empty role=\"unknown\" id=\"2\"/><largeop role=\"integral\" id=\"1\">∫</largeop></children></relseq>"
    },
    "_comment_184": " TODO: This should be improved.",
    "Issue382_1": {
      "expected": "<stree><infixop role=\"addition\" id=\"3\">+<content><operator role=\"addition\" id=\"1\">+</operator></content><children><largeop role=\"integral\" id=\"0\">∫</largeop><largeop role=\"integral\" id=\"2\">∫</largeop></children></infixop></stree>"
    },
    "_comment_185": " Issue 383: Mathoperator with dash",
    "Issue383_0": {
      "expected": "<stree><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"6\"><content><punctuation role=\"application\" id=\"5\">⁡</punctuation><identifier role=\"simple function\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">p</identifier></content><children><prefixop role=\"simple function\" id=\"2\">-<content><operator role=\"subtraction\" annotation=\"general:text\" id=\"0\">-</operator></content><children><identifier role=\"simple function\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"1\">p</identifier></children></prefixop><identifier role=\"greekletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"4\">ω</identifier></children></appl></stree>"
    },
    "_comment_186": " Issue 284: Explicitly given invisible plus.",
    "Issue284_0": {
      "expected": "<stree><number role=\"mixed\" id=\"5\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number><fraction role=\"division\" id=\"4\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">3</number><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">p</identifier></children></fraction></children></number></stree>"
    },
    "Issue284_1": {
      "expected": "<stree><infixop role=\"addition\" id=\"8\">⁤<content><operator role=\"addition\" id=\"1\">⁤</operator></content><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number><number role=\"mixed\" id=\"7\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">2</number><fraction role=\"division\" id=\"6\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"4\">3</number><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">p</identifier></children></fraction></children></number></children></infixop></stree>"
    },
    "Issue284_2": {
      "expected": "<stree><infixop role=\"addition\" id=\"8\">+<content><operator role=\"addition\" id=\"1\">+</operator></content><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number><number role=\"mixed\" id=\"7\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">2</number><fraction role=\"division\" id=\"6\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"4\">3</number><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">p</identifier></children></fraction></children></number></children></infixop></stree>"
    },
    "Issue284_3": {
      "expected": "<stree><infixop role=\"addition\" id=\"8\">+<content><operator role=\"addition\" id=\"5\">+</operator></content><children><number role=\"mixed\" id=\"7\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"0\">2</number><fraction role=\"division\" id=\"4\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">3</number><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">p</identifier></children></fraction></children></number><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"6\">2</number></children></infixop></stree>"
    },
    "Issue284_4": {
      "expected": "<stree><number role=\"mixed\" id=\"5\"><children><number role=\"latinletter\" font=\"normal\" id=\"0\">a</number><fraction role=\"division\" id=\"4\"><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">3</number><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"3\">p</identifier></children></fraction></children></number></stree>"
    },
    "MglyphTokens_0": {
      "expected": "<identifier role=\"mglyph\" id=\"0\" ext-speech=\"my glyph\"/>"
    },
    "MglyphToken_1": {
      "expected": "<identifier role=\"mglyph\" id=\"0\" ext-speech=\"your glyph\"/>"
    },
    "MglyphToken_2": {
      "expected": "<operator role=\"mglyph\" id=\"0\" ext-speech=\"my glyph\"/>"
    },
    "MglyphToken_3": {
      "expected": "<operator role=\"mglyph\" id=\"0\" ext-speech=\"your glyph\"/>"
    },
    "MglyphToken_4": {
      "expected": "<number role=\"mglyph\" id=\"0\" ext-speech=\"my glyph\"/>"
    },
    "MglyphToken_5": {
      "expected": "<number role=\"mglyph\" id=\"0\" ext-speech=\"your glyph\"/>"
    },
    "MglyphToken_6": {
      "expected": "<unknown role=\"mglyph\" id=\"0\" ext-speech=\"my glyph\"/>"
    },
    "MglyphToken_7": {
      "expected": "<unknown role=\"mglyph\" id=\"0\" ext-speech=\"your glyph\"/>"
    },
    "MglyphToken_8": {
      "expected": "<unknown role=\"mglyph\" id=\"0\" ext-speech=\"my glyph\"/>"
    },
    "MglyphToken_9": {
      "expected": "<unknown role=\"mglyph\" id=\"0\" ext-speech=\"your glyph\"/>"
    },
    "MglyphGeneral_0": {
      "expected": "<relseq role=\"equality\" id=\"6\">=<content><relation role=\"equality\" id=\"3\">=</relation></content><children><infixop role=\"addition\" id=\"5\">+<content><operator role=\"addition\" id=\"1\">+</operator></content><children><identifier role=\"mglyph\" id=\"0\" ext-speech=\"23braid\"/><identifier role=\"mglyph\" id=\"2\" ext-speech=\"132braid\"/></children></infixop><identifier role=\"mglyph\" id=\"4\" ext-speech=\"13braid\"/></children></relseq>"
    },
    "MglyphGeneral_1": {
      "expected": "<stree><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"8\">⁢<content><operator role=\"multiplication\" id=\"7\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">N</identifier><subscript role=\"latinletter\" id=\"6\"><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"1\">M</identifier><relseq role=\"set\" id=\"5\">⊂<content><relation role=\"set\" id=\"3\">⊂</relation></content><children><number role=\"integer\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"2\">1</number><unknown role=\"mglyph\" id=\"4\" ext-speech=\"mfin\"/></children></relseq></children></subscript></children></infixop></stree>"
    },
    "issue451_0": {
      "expected": "<stree><relseq role=\"equality\" id=\"20\">=<content><relation role=\"equality\" id=\"4\">=</relation></content><children><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"19\"><content><punctuation role=\"application\" id=\"18\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier><fenced role=\"leftright\" id=\"15\"><content><fence role=\"open\" id=\"1\">(</fence><fence role=\"close\" id=\"3\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></fenced></children></appl><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"17\"><content><punctuation role=\"application\" id=\"16\">⁡</punctuation></content><children><underscore role=\"simple function\" id=\"12\"><children><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"10\">⁢<content><operator role=\"multiplication\" id=\"8\">⁢</operator><operator role=\"multiplication\" id=\"9\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">l</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">i</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"7\">m</identifier></children></infixop><relation role=\"underaccent\" annotation=\"accent:underaccent\" id=\"11\">←</relation></children></underscore><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"14\">M</identifier></children></appl></children></relseq></stree>"
    },
    "issue451_1": {
      "expected": "<stree><relseq role=\"equality\" id=\"16\">=<content><relation role=\"equality\" id=\"4\">=</relation></content><children><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"15\"><content><punctuation role=\"application\" id=\"14\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier><fenced role=\"leftright\" id=\"11\"><content><fence role=\"open\" id=\"1\">(</fence><fence role=\"close\" id=\"3\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></fenced></children></appl><appl role=\"implicit\" id=\"13\"><content><punctuation role=\"application\" id=\"12\">⁡</punctuation></content><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"8\">⁢<content><operator role=\"multiplication\" id=\"7\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">l</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">i</identifier></children></infixop><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"10\">M</identifier></children></appl></children></relseq></stree>"
    },
    "issue451_2": {
      "expected": "<stree><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"10\"><content><punctuation role=\"application\" id=\"9\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">f</identifier></content><children><superscript role=\"simple function\" id=\"4\"><children><subscript role=\"subsup\" id=\"3\"><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">f</identifier><operator role=\"dash\" id=\"1\">_</operator></children></subscript><operator role=\"subtraction\" id=\"2\">¯</operator></children></superscript><fenced role=\"leftright\" id=\"8\"><content><fence role=\"open\" id=\"5\">(</fence><fence role=\"close\" id=\"7\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">x</identifier></children></fenced></children></appl></stree>"
    },
    "issue451_3": {
      "expected": "<stree><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"10\"><content><punctuation role=\"application\" id=\"9\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">f</identifier></content><children><overscore role=\"simple function\" id=\"4\"><children><underscore role=\"underover\" id=\"3\"><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">f</identifier><operator role=\"underaccent\" annotation=\"accent:bar\" id=\"1\">_</operator></children></underscore><operator role=\"overaccent\" annotation=\"accent:bar\" id=\"2\">¯</operator></children></overscore><fenced role=\"leftright\" id=\"8\"><content><fence role=\"open\" id=\"5\">(</fence><fence role=\"close\" id=\"7\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">x</identifier></children></fenced></children></appl></stree>"
    },
    "issue451_4": {
      "expected": "<stree><relseq role=\"equality\" id=\"20\">=<content><relation role=\"equality\" id=\"4\">=</relation></content><children><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"19\"><content><punctuation role=\"application\" id=\"18\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier><fenced role=\"leftright\" id=\"15\"><content><fence role=\"open\" id=\"1\">(</fence><fence role=\"close\" id=\"3\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></fenced></children></appl><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"17\"><content><punctuation role=\"application\" id=\"16\">⁡</punctuation></content><children><underscore role=\"simple function\" id=\"12\"><children><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"10\" texclass=\"OP\">⁢<content><operator role=\"multiplication\" id=\"8\">⁢</operator><operator role=\"multiplication\" id=\"9\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"5\">l</identifier><identifier role=\"latinletter\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"6\">i</identifier><identifier role=\"latinletter\" font=\"normal\" annotation=\"clearspeak:simple\" id=\"7\">m</identifier></children></infixop><relation role=\"underaccent\" annotation=\"accent:underaccent\" id=\"11\">←</relation></children></underscore><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"14\">M</identifier></children></appl></children></relseq></stree>"
    },
    "issue451_5": {
      "expected": "<stree><relseq role=\"equality\" id=\"19\">=<content><relation role=\"equality\" id=\"4\">=</relation></content><children><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"18\"><content><punctuation role=\"application\" id=\"17\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier><fenced role=\"leftright\" id=\"12\"><content><fence role=\"open\" id=\"1\">(</fence><fence role=\"close\" id=\"3\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></fenced></children></appl><appl role=\"implicit\" id=\"16\"><content><punctuation role=\"application\" id=\"15\">⁡</punctuation></content><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"8\">⁢<content><operator role=\"multiplication\" id=\"7\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">l</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">i</identifier></children></infixop><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"14\"><content><punctuation role=\"application\" id=\"13\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"10\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"10\">M</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"11\">x</identifier></children></appl></children></appl></children></relseq></stree>"
    },
    "issue451_6": {
      "expected": "<stree><relseq role=\"equality\" id=\"19\">=<content><relation role=\"equality\" id=\"4\">=</relation></content><children><appl role=\"simple function\" annotation=\"clearspeak:simple\" id=\"16\"><content><punctuation role=\"application\" id=\"15\">⁡</punctuation><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier></content><children><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"0\">M</identifier><fenced role=\"leftright\" id=\"14\"><content><fence role=\"open\" id=\"1\">(</fence><fence role=\"close\" id=\"3\">)</fence></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"2\">t</identifier></children></fenced></children></appl><infixop role=\"implicit\" annotation=\"clearspeak:unit\" id=\"18\">⁢<content><operator role=\"multiplication\" id=\"17\">⁢</operator></content><children><appl role=\"implicit\" id=\"12\"><content><punctuation role=\"application\" id=\"11\">⁡</punctuation></content><children><infixop role=\"implicit\" annotation=\"clearspeak:simple;clearspeak:unit\" id=\"8\">⁢<content><operator role=\"multiplication\" id=\"7\">⁢</operator></content><children><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"5\">l</identifier><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"6\">i</identifier></children></infixop><identifier role=\"simple function\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"10\">M</identifier></children></appl><identifier role=\"latinletter\" font=\"italic\" annotation=\"clearspeak:simple\" id=\"13\">x</identifier></children></infixop></children></relseq></stree>"
    }
  }
}
