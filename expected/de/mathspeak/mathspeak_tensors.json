{
  "_comment0_": " This work was sponsored by ETH Zurich",
  "name": "MathspeakGermanTensors",
  "factory": "speech",
  "base": "input/mathspeak/mathspeak_tensors.json",
  "information": "German Mathspeak Tensor tests.",
  "domain": "mathspeak",
  "locale": "de",
  "compare": true,
  "active": "MathspeakGerman",
  "exclude": [],
  "tests": {
    "_comment3_": " Tensor tests are named with the convention of including the indices that are",
    "_comment4_": " present:",
    "_comment5_": "   B      D",
    "_comment6_": "     Base     R",
    "_comment7_": "   A      C",
    "_comment8_": "  Where R is the rest.",
    "PartialTensorABCD_default": {
      "expected": "Index a hoch b Grundlinie x Index c hoch d"
    },
    "PartialTensorABCD_brief": {
      "expected": "Index a hoch b Grund x Index c hoch d"
    },
    "PartialTensorABCD_sbrief": {
      "expected": "Index a hoch b Grund x Index c hoch d"
    },
    "PartialTensorABC_default": {
      "expected": "Index a hoch b Grundlinie x Index c"
    },
    "PartialTensorABC_brief": {
      "expected": "Index a hoch b Grund x Index c"
    },
    "PartialTensorABC_sbrief": {
      "expected": "Index a hoch b Grund x Index c"
    },
    "PartialTensorABD_default": {
      "expected": "Index a hoch b Grundlinie x hoch d"
    },
    "PartialTensorABD_brief": {
      "expected": "Index a hoch b Grund x hoch d"
    },
    "PartialTensorABD_sbrief": {
      "expected": "Index a hoch b Grund x hoch d"
    },
    "PartialTensorAB_default": {
      "expected": "Index a hoch b Grundlinie x"
    },
    "PartialTensorAB_brief": {
      "expected": "Index a hoch b Grund x"
    },
    "PartialTensorAB_sbrief": {
      "expected": "Index a hoch b Grund x"
    },
    "PartialTensorABCR_default": {
      "expected": "Index a hoch b Grundlinie x Index c Grundlinie r"
    },
    "PartialTensorABCR_brief": {
      "expected": "Index a hoch b Grund x Index c Grund r"
    },
    "PartialTensorABCR_sbrief": {
      "expected": "Index a hoch b Grund x Index c Grund r"
    },
    "PartialTensorABCDR_default": {
      "expected": "Index a hoch b Grundlinie x Index c hoch d Grundlinie r"
    },
    "PartialTensorABCDR_brief": {
      "expected": "Index a hoch b Grund x Index c hoch d Grund r"
    },
    "PartialTensorABCDR_sbrief": {
      "expected": "Index a hoch b Grund x Index c hoch d Grund r"
    },
    "PartialTensorABCDRoot_default": {
      "expected": "Anfang Quadratwurzel Index a hoch b Grundlinie x Index c hoch d Grundlinie Ende Quadratwurzel"
    },
    "PartialTensorABCDRoot_brief": {
      "expected": "Anfang Quadratwurzel Index a hoch b Grund x Index c hoch d Grund Ende Quadratwurzel"
    },
    "PartialTensorABCDRoot_sbrief": {
      "expected": "Quadratwurzel Index a hoch b Grund x Index c hoch d Grund Ende Quadratwurzel"
    },
    "PartialTensorABCDRootR_default": {
      "expected": "Anfang Quadratwurzel Index a hoch b Grundlinie x Index c hoch d Grundlinie Ende Quadratwurzel r"
    },
    "PartialTensorABCDRootR_brief": {
      "expected": "Anfang Quadratwurzel Index a hoch b Grund x Index c hoch d Grund Ende Quadratwurzel r"
    },
    "PartialTensorABCDRootR_sbrief": {
      "expected": "Quadratwurzel Index a hoch b Grund x Index c hoch d Grund Ende Quadratwurzel r"
    },
    "PartialTensorABCDFrac_default": {
      "expected": "Anfang Bruch 1 durch Index a hoch b Grundlinie x Index c hoch d Grundlinie Ende Bruch"
    },
    "PartialTensorABCDFrac_brief": {
      "expected": "Anfang Bruch 1 durch Index a hoch b Grund x Index c hoch d Grund Ende Bruch"
    },
    "PartialTensorABCDFrac_sbrief": {
      "expected": "Bruch 1 durch Index a hoch b Grund x Index c hoch d Grund Ende Bruch"
    },
    "PartialTensorABCDFracR_default": {
      "expected": "Anfang Bruch 1 durch Index a hoch b Grundlinie x Index c hoch d Grundlinie Ende Bruch r"
    },
    "PartialTensorABCDFracR_brief": {
      "expected": "Anfang Bruch 1 durch Index a hoch b Grund x Index c hoch d Grund Ende Bruch r"
    },
    "PartialTensorABCDFracR_sbrief": {
      "expected": "Bruch 1 durch Index a hoch b Grund x Index c hoch d Grund Ende Bruch r"
    },

    "_comment10_": "Rest.",
    "TensorMultiSimpleABC_default": {
      "expected": "Index a hoch b Grundlinie x Index c Index hoch l"
    },
    "TensorMultiSimpleABC_brief": {
      "expected": "Index a hoch b Grund x Index c Index hoch l"
    },
    "TensorMultiSimpleABC_sbrief": {
      "expected": "Index a hoch b Grund x Index c Index hoch l"
    },
    "TensorMultiSub_default": {
      "expected": "Index a hoch b Grundlinie x Index c Index Index l hoch d"
    },
    "TensorMultiSub_brief": {
      "expected": "Index a hoch b Grund x Index c Index Index l hoch d"
    },
    "TensorMultiSub_sbrief": {
      "expected": "Index a hoch b Grund x Index c Index Index l hoch d"
    },
    "TensorMultiSubSup_default": {
      "expected": "Index a hoch b Grundlinie x Index c Index Index l Index Index hoch k Index e hoch d"
    },
    "TensorMultiSubSup_brief": {
      "expected": "Index a hoch b Grund x Index c Index Index l Index Index hoch k Index e hoch d"
    },
    "TensorMultiSubSup_sbrief": {
      "expected": "Index a hoch b Grund x Index c Index Index l Index Index hoch k Index e hoch d"
    },
    "TensorMultiSimple_default": {
      "expected": "Index a hoch b Grundlinie x Index c Index hoch l hoch d"
    },
    "TensorMultiSimple_brief": {
      "expected": "Index a hoch b Grund x Index c Index hoch l hoch d"
    },
    "TensorMultiSimple_sbrief": {
      "expected": "Index a hoch b Grund x Index c Index hoch l hoch d"
    },
    "TensorMultiComplex_default": {
      "expected": "Index a hoch b Grundlinie x Index c k Index hoch l hoch d"
    },
    "TensorMultiComplex_brief": {
      "expected": "Index a hoch b Grund x Index c k Index hoch l hoch d"
    },
    "TensorMultiComplex_sbrief": {
      "expected": "Index a hoch b Grund x Index c k Index hoch l hoch d"
    },
    "TwoTensors_default": {
      "expected": "Index a hoch b Grundlinie x Index c hoch d Grundlinie Index a hoch b Grundlinie x Index c hoch d"
    },
    "TwoTensors_brief": {
      "expected": "Index a hoch b Grund x Index c hoch d Grund Index a hoch b Grund x Index c hoch d"
    },
    "TwoTensors_sbrief": {
      "expected": "Index a hoch b Grund x Index c hoch d Grund Index a hoch b Grund x Index c hoch d"
    }
  }
}
