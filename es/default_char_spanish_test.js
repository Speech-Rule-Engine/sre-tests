// Copyright 2019 Volker Sorge
//
// Licensed under the Apache License, Version 2.0 (the 'License');
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Abstract class for test cases of single characters.
 * @author Volker.Sorge@gmail.com (Volker Sorge)
 */

goog.provide('sre.DefaultCharSpanishTest');

goog.require('sre.AbstractCharacterTest');



/**
 * @constructor
 * @extends {sre.AbstractCharacterTest}
 */
sre.DefaultCharSpanishTest = function() {
  sre.DefaultCharSpanishTest.base(this, 'constructor');

  this.locale = 'es';
  this.domain = 'default';

  /**
   * @type {Array.<string>}
   */
  this.styles = ['default'];

  this.setActive('DefaultCharactersSpanish');
};
goog.inherits(sre.DefaultCharSpanishTest, sre.AbstractCharacterTest);


/**
 * Runs all character translation tests for default domain.
 */
sre.DefaultCharSpanishTest.prototype.testDefaultChars = function() {
  this.executeCharTest('0', ['cero']);
  this.executeCharTest('1', ['uno']);
  this.executeCharTest('2', ['dos']);
  this.executeCharTest('3', ['tres']);
  this.executeCharTest('4', ['cuatro']);
  this.executeCharTest('5', ['cinco']);
  this.executeCharTest('6', ['seis']);
  this.executeCharTest('7', ['siete']);
  this.executeCharTest('8', ['ocho']);
  this.executeCharTest('9', ['nueve']);
  this.executeCharTest('𝐀', ['negrita mayúscula A']);
  this.executeCharTest('𝐁', ['negrita mayúscula B']);
  this.executeCharTest('𝐂', ['negrita mayúscula C']);
  this.executeCharTest('𝐃', ['negrita mayúscula D']);
  this.executeCharTest('𝐄', ['negrita mayúscula E']);
  this.executeCharTest('𝐅', ['negrita mayúscula F']);
  this.executeCharTest('𝐆', ['negrita mayúscula G']);
  this.executeCharTest('𝐇', ['negrita mayúscula H']);
  this.executeCharTest('𝐈', ['negrita mayúscula I']);
  this.executeCharTest('𝐉', ['negrita mayúscula J']);
  this.executeCharTest('𝐊', ['negrita mayúscula K']);
  this.executeCharTest('𝐋', ['negrita mayúscula L']);
  this.executeCharTest('𝐌', ['negrita mayúscula M']);
  this.executeCharTest('𝐍', ['negrita mayúscula N']);
  this.executeCharTest('𝐎', ['negrita mayúscula O']);
  this.executeCharTest('𝐏', ['negrita mayúscula P']);
  this.executeCharTest('𝐐', ['negrita mayúscula Q']);
  this.executeCharTest('𝐑', ['negrita mayúscula R']);
  this.executeCharTest('𝐒', ['negrita mayúscula S']);
  this.executeCharTest('𝐓', ['negrita mayúscula T']);
  this.executeCharTest('𝐔', ['negrita mayúscula U']);
  this.executeCharTest('𝐕', ['negrita mayúscula V']);
  this.executeCharTest('𝐖', ['negrita mayúscula W']);
  this.executeCharTest('𝐗', ['negrita mayúscula X']);
  this.executeCharTest('𝐘', ['negrita mayúscula Y']);
  this.executeCharTest('𝐙', ['negrita mayúscula Z']);
  this.executeCharTest('𝐚', ['negrita a']);
  this.executeCharTest('𝐛', ['negrita b']);
  this.executeCharTest('𝐜', ['negrita c']);
  this.executeCharTest('𝐝', ['negrita d']);
  this.executeCharTest('𝐞', ['negrita e']);
  this.executeCharTest('𝐟', ['negrita f']);
  this.executeCharTest('𝐠', ['negrita g']);
  this.executeCharTest('𝐡', ['negrita h']);
  this.executeCharTest('𝐢', ['negrita i']);
  this.executeCharTest('𝐣', ['negrita j']);
  this.executeCharTest('𝐤', ['negrita k']);
  this.executeCharTest('𝐥', ['negrita l']);
  this.executeCharTest('𝐦', ['negrita m']);
  this.executeCharTest('𝐧', ['negrita n']);
  this.executeCharTest('𝐨', ['negrita o']);
  this.executeCharTest('𝐩', ['negrita p']);
  this.executeCharTest('𝐪', ['negrita q']);
  this.executeCharTest('𝐫', ['negrita r']);
  this.executeCharTest('𝐬', ['negrita s']);
  this.executeCharTest('𝐭', ['negrita t']);
  this.executeCharTest('𝐮', ['negrita u']);
  this.executeCharTest('𝐯', ['negrita v']);
  this.executeCharTest('𝐰', ['negrita w']);
  this.executeCharTest('𝐱', ['negrita x']);
  this.executeCharTest('𝐲', ['negrita y']);
  this.executeCharTest('𝐳', ['negrita z']);
  this.executeCharTest('𝕬', ['negrita Fraktur mayúscula A']);
  this.executeCharTest('𝕭', ['negrita Fraktur mayúscula B']);
  this.executeCharTest('𝕮', ['negrita Fraktur mayúscula C']);
  this.executeCharTest('𝕯', ['negrita Fraktur mayúscula D']);
  this.executeCharTest('𝕰', ['negrita Fraktur mayúscula E']);
  this.executeCharTest('𝕱', ['negrita Fraktur mayúscula F']);
  this.executeCharTest('𝕲', ['negrita Fraktur mayúscula G']);
  this.executeCharTest('𝕳', ['negrita Fraktur mayúscula H']);
  this.executeCharTest('𝕴', ['negrita Fraktur mayúscula I']);
  this.executeCharTest('𝕵', ['negrita Fraktur mayúscula J']);
  this.executeCharTest('𝕶', ['negrita Fraktur mayúscula K']);
  this.executeCharTest('𝕷', ['negrita Fraktur mayúscula L']);
  this.executeCharTest('𝕸', ['negrita Fraktur mayúscula M']);
  this.executeCharTest('𝕹', ['negrita Fraktur mayúscula N']);
  this.executeCharTest('𝕺', ['negrita Fraktur mayúscula O']);
  this.executeCharTest('𝕻', ['negrita Fraktur mayúscula P']);
  this.executeCharTest('𝕼', ['negrita Fraktur mayúscula Q']);
  this.executeCharTest('𝕽', ['negrita Fraktur mayúscula R']);
  this.executeCharTest('𝕾', ['negrita Fraktur mayúscula S']);
  this.executeCharTest('𝕿', ['negrita Fraktur mayúscula T']);
  this.executeCharTest('𝖀', ['negrita Fraktur mayúscula U']);
  this.executeCharTest('𝖁', ['negrita Fraktur mayúscula V']);
  this.executeCharTest('𝖂', ['negrita Fraktur mayúscula W']);
  this.executeCharTest('𝖃', ['negrita Fraktur mayúscula X']);
  this.executeCharTest('𝖄', ['negrita Fraktur mayúscula Y']);
  this.executeCharTest('𝖅', ['negrita Fraktur mayúscula Z']);
  this.executeCharTest('𝖆', ['negrita Fraktur a']);
  this.executeCharTest('𝖇', ['negrita Fraktur b']);
  this.executeCharTest('𝖈', ['negrita Fraktur c']);
  this.executeCharTest('𝖉', ['negrita Fraktur d']);
  this.executeCharTest('𝖊', ['negrita Fraktur e']);
  this.executeCharTest('𝖋', ['negrita Fraktur f']);
  this.executeCharTest('𝖌', ['negrita Fraktur g']);
  this.executeCharTest('𝖍', ['negrita Fraktur h']);
  this.executeCharTest('𝖎', ['negrita Fraktur i']);
  this.executeCharTest('𝖏', ['negrita Fraktur j']);
  this.executeCharTest('𝖐', ['negrita Fraktur k']);
  this.executeCharTest('𝖑', ['negrita Fraktur l']);
  this.executeCharTest('𝖒', ['negrita Fraktur m']);
  this.executeCharTest('𝖓', ['negrita Fraktur n']);
  this.executeCharTest('𝖔', ['negrita Fraktur o']);
  this.executeCharTest('𝖕', ['negrita Fraktur p']);
  this.executeCharTest('𝖖', ['negrita Fraktur q']);
  this.executeCharTest('𝖗', ['negrita Fraktur r']);
  this.executeCharTest('𝖘', ['negrita Fraktur s']);
  this.executeCharTest('𝖙', ['negrita Fraktur t']);
  this.executeCharTest('𝖚', ['negrita Fraktur u']);
  this.executeCharTest('𝖛', ['negrita Fraktur v']);
  this.executeCharTest('𝖜', ['negrita Fraktur w']);
  this.executeCharTest('𝖝', ['negrita Fraktur x']);
  this.executeCharTest('𝖞', ['negrita Fraktur y']);
  this.executeCharTest('𝖟', ['negrita Fraktur z']);
  this.executeCharTest('𝑨', ['negrita cursiva mayúscula A']);
  this.executeCharTest('𝑩', ['negrita cursiva mayúscula B']);
  this.executeCharTest('𝑪', ['negrita cursiva mayúscula C']);
  this.executeCharTest('𝑫', ['negrita cursiva mayúscula D']);
  this.executeCharTest('𝑬', ['negrita cursiva mayúscula E']);
  this.executeCharTest('𝑭', ['negrita cursiva mayúscula F']);
  this.executeCharTest('𝑮', ['negrita cursiva mayúscula G']);
  this.executeCharTest('𝑯', ['negrita cursiva mayúscula H']);
  this.executeCharTest('𝑰', ['negrita cursiva mayúscula I']);
  this.executeCharTest('𝑱', ['negrita cursiva mayúscula J']);
  this.executeCharTest('𝑲', ['negrita cursiva mayúscula K']);
  this.executeCharTest('𝑳', ['negrita cursiva mayúscula L']);
  this.executeCharTest('𝑴', ['negrita cursiva mayúscula M']);
  this.executeCharTest('𝑵', ['negrita cursiva mayúscula N']);
  this.executeCharTest('𝑶', ['negrita cursiva mayúscula O']);
  this.executeCharTest('𝑷', ['negrita cursiva mayúscula P']);
  this.executeCharTest('𝑸', ['negrita cursiva mayúscula Q']);
  this.executeCharTest('𝑹', ['negrita cursiva mayúscula R']);
  this.executeCharTest('𝑺', ['negrita cursiva mayúscula S']);
  this.executeCharTest('𝑻', ['negrita cursiva mayúscula T']);
  this.executeCharTest('𝑼', ['negrita cursiva mayúscula U']);
  this.executeCharTest('𝑽', ['negrita cursiva mayúscula V']);
  this.executeCharTest('𝑾', ['negrita cursiva mayúscula W']);
  this.executeCharTest('𝑿', ['negrita cursiva mayúscula X']);
  this.executeCharTest('𝒀', ['negrita cursiva mayúscula Y']);
  this.executeCharTest('𝒁', ['negrita cursiva mayúscula Z']);
  this.executeCharTest('𝒂', ['negrita cursiva a']);
  this.executeCharTest('𝒃', ['negrita cursiva b']);
  this.executeCharTest('𝒄', ['negrita cursiva c']);
  this.executeCharTest('𝒅', ['negrita cursiva d']);
  this.executeCharTest('𝒆', ['negrita cursiva e']);
  this.executeCharTest('𝒇', ['negrita cursiva f']);
  this.executeCharTest('𝒈', ['negrita cursiva g']);
  this.executeCharTest('𝒉', ['negrita cursiva h']);
  this.executeCharTest('𝒊', ['negrita cursiva i']);
  this.executeCharTest('𝒋', ['negrita cursiva j']);
  this.executeCharTest('𝒌', ['negrita cursiva k']);
  this.executeCharTest('𝒍', ['negrita cursiva l']);
  this.executeCharTest('𝒎', ['negrita cursiva m']);
  this.executeCharTest('𝒏', ['negrita cursiva n']);
  this.executeCharTest('𝒐', ['negrita cursiva o']);
  this.executeCharTest('𝒑', ['negrita cursiva p']);
  this.executeCharTest('𝒒', ['negrita cursiva q']);
  this.executeCharTest('𝒓', ['negrita cursiva r']);
  this.executeCharTest('𝒔', ['negrita cursiva s']);
  this.executeCharTest('𝒕', ['negrita cursiva t']);
  this.executeCharTest('𝒖', ['negrita cursiva u']);
  this.executeCharTest('𝒗', ['negrita cursiva v']);
  this.executeCharTest('𝒘', ['negrita cursiva w']);
  this.executeCharTest('𝒙', ['negrita cursiva x']);
  this.executeCharTest('𝒚', ['negrita cursiva y']);
  this.executeCharTest('𝒛', ['negrita cursiva z']);
  this.executeCharTest('𝓐', ['negrita script mayúscula A']);
  this.executeCharTest('𝓑', ['negrita script mayúscula B']);
  this.executeCharTest('𝓒', ['negrita script mayúscula C']);
  this.executeCharTest('𝓓', ['negrita script mayúscula D']);
  this.executeCharTest('𝓔', ['negrita script mayúscula E']);
  this.executeCharTest('𝓕', ['negrita script mayúscula F']);
  this.executeCharTest('𝓖', ['negrita script mayúscula G']);
  this.executeCharTest('𝓗', ['negrita script mayúscula H']);
  this.executeCharTest('𝓘', ['negrita script mayúscula I']);
  this.executeCharTest('𝓙', ['negrita script mayúscula J']);
  this.executeCharTest('𝓚', ['negrita script mayúscula K']);
  this.executeCharTest('𝓛', ['negrita script mayúscula L']);
  this.executeCharTest('𝓜', ['negrita script mayúscula M']);
  this.executeCharTest('𝓝', ['negrita script mayúscula N']);
  this.executeCharTest('𝓞', ['negrita script mayúscula O']);
  this.executeCharTest('𝓟', ['negrita script mayúscula P']);
  this.executeCharTest('𝓠', ['negrita script mayúscula Q']);
  this.executeCharTest('𝓡', ['negrita script mayúscula R']);
  this.executeCharTest('𝓢', ['negrita script mayúscula S']);
  this.executeCharTest('𝓣', ['negrita script mayúscula T']);
  this.executeCharTest('𝓤', ['negrita script mayúscula U']);
  this.executeCharTest('𝓥', ['negrita script mayúscula V']);
  this.executeCharTest('𝓦', ['negrita script mayúscula W']);
  this.executeCharTest('𝓧', ['negrita script mayúscula X']);
  this.executeCharTest('𝓨', ['negrita script mayúscula Y']);
  this.executeCharTest('𝓩', ['negrita script mayúscula Z']);
  this.executeCharTest('𝓪', ['negrita script a']);
  this.executeCharTest('𝓫', ['negrita script b']);
  this.executeCharTest('𝓬', ['negrita script c']);
  this.executeCharTest('𝓭', ['negrita script d']);
  this.executeCharTest('𝓮', ['negrita script e']);
  this.executeCharTest('𝓯', ['negrita script f']);
  this.executeCharTest('𝓰', ['negrita script g']);
  this.executeCharTest('𝓱', ['negrita script h']);
  this.executeCharTest('𝓲', ['negrita script i']);
  this.executeCharTest('𝓳', ['negrita script j']);
  this.executeCharTest('𝓴', ['negrita script k']);
  this.executeCharTest('𝓵', ['negrita script l']);
  this.executeCharTest('𝓶', ['negrita script m']);
  this.executeCharTest('𝓷', ['negrita script n']);
  this.executeCharTest('𝓸', ['negrita script o']);
  this.executeCharTest('𝓹', ['negrita script p']);
  this.executeCharTest('𝓺', ['negrita script q']);
  this.executeCharTest('𝓻', ['negrita script r']);
  this.executeCharTest('𝓼', ['negrita script s']);
  this.executeCharTest('𝓽', ['negrita script t']);
  this.executeCharTest('𝓾', ['negrita script u']);
  this.executeCharTest('𝓿', ['negrita script v']);
  this.executeCharTest('𝔀', ['negrita script w']);
  this.executeCharTest('𝔁', ['negrita script x']);
  this.executeCharTest('𝔂', ['negrita script y']);
  this.executeCharTest('𝔃', ['negrita script z']);
  this.executeCharTest('𝔸', ['negrita de pizarra mayúscula A']);
  this.executeCharTest('𝔹', ['negrita de pizarra mayúscula B']);
  this.executeCharTest('ℂ', ['negrita de pizarra mayúscula C']);
  this.executeCharTest('𝔻', ['negrita de pizarra mayúscula D']);
  this.executeCharTest('𝔼', ['negrita de pizarra mayúscula E']);
  this.executeCharTest('𝔽', ['negrita de pizarra mayúscula F']);
  this.executeCharTest('𝔾', ['negrita de pizarra mayúscula G']);
  this.executeCharTest('ℍ', ['negrita de pizarra mayúscula H']);
  this.executeCharTest('𝕀', ['negrita de pizarra mayúscula I']);
  this.executeCharTest('𝕁', ['negrita de pizarra mayúscula J']);
  this.executeCharTest('𝕂', ['negrita de pizarra mayúscula K']);
  this.executeCharTest('𝕃', ['negrita de pizarra mayúscula L']);
  this.executeCharTest('𝕄', ['negrita de pizarra mayúscula M']);
  this.executeCharTest('ℕ', ['negrita de pizarra mayúscula N']);
  this.executeCharTest('𝕆', ['negrita de pizarra mayúscula O']);
  this.executeCharTest('ℙ', ['negrita de pizarra mayúscula P']);
  this.executeCharTest('ℚ', ['negrita de pizarra mayúscula Q']);
  this.executeCharTest('ℝ', ['negrita de pizarra mayúscula R']);
  this.executeCharTest('𝕊', ['negrita de pizarra mayúscula S']);
  this.executeCharTest('𝕋', ['negrita de pizarra mayúscula T']);
  this.executeCharTest('𝕌', ['negrita de pizarra mayúscula U']);
  this.executeCharTest('𝕍', ['negrita de pizarra mayúscula V']);
  this.executeCharTest('𝕎', ['negrita de pizarra mayúscula W']);
  this.executeCharTest('𝕏', ['negrita de pizarra mayúscula X']);
  this.executeCharTest('𝕐', ['negrita de pizarra mayúscula Y']);
  this.executeCharTest('ℤ', ['negrita de pizarra mayúscula Z']);
  this.executeCharTest('𝕒', ['negrita de pizarra a']);
  this.executeCharTest('𝕓', ['negrita de pizarra b']);
  this.executeCharTest('𝕔', ['negrita de pizarra c']);
  this.executeCharTest('𝕕', ['negrita de pizarra d']);
  this.executeCharTest('𝕖', ['negrita de pizarra e']);
  this.executeCharTest('𝕗', ['negrita de pizarra f']);
  this.executeCharTest('𝕘', ['negrita de pizarra g']);
  this.executeCharTest('𝕙', ['negrita de pizarra h']);
  this.executeCharTest('𝕚', ['negrita de pizarra i']);
  this.executeCharTest('𝕛', ['negrita de pizarra j']);
  this.executeCharTest('𝕜', ['negrita de pizarra k']);
  this.executeCharTest('𝕝', ['negrita de pizarra l']);
  this.executeCharTest('𝕞', ['negrita de pizarra m']);
  this.executeCharTest('𝕟', ['negrita de pizarra n']);
  this.executeCharTest('𝕠', ['negrita de pizarra o']);
  this.executeCharTest('𝕡', ['negrita de pizarra p']);
  this.executeCharTest('𝕢', ['negrita de pizarra q']);
  this.executeCharTest('𝕣', ['negrita de pizarra r']);
  this.executeCharTest('𝕤', ['negrita de pizarra s']);
  this.executeCharTest('𝕥', ['negrita de pizarra t']);
  this.executeCharTest('𝕦', ['negrita de pizarra u']);
  this.executeCharTest('𝕧', ['negrita de pizarra v']);
  this.executeCharTest('𝕨', ['negrita de pizarra w']);
  this.executeCharTest('𝕩', ['negrita de pizarra x']);
  this.executeCharTest('𝕪', ['negrita de pizarra y']);
  this.executeCharTest('𝕫', ['negrita de pizarra z']);
  this.executeCharTest('𝔄', ['Fraktur mayúscula A']);
  this.executeCharTest('𝔅', ['Fraktur mayúscula B']);
  this.executeCharTest('ℭ', ['Fraktur mayúscula C']);
  this.executeCharTest('𝔇', ['Fraktur mayúscula D']);
  this.executeCharTest('𝔈', ['Fraktur mayúscula E']);
  this.executeCharTest('𝔉', ['Fraktur mayúscula F']);
  this.executeCharTest('𝔊', ['Fraktur mayúscula G']);
  this.executeCharTest('ℌ', ['Fraktur mayúscula H']);
  this.executeCharTest('ℑ', ['Fraktur mayúscula I']);
  this.executeCharTest('𝔍', ['Fraktur mayúscula J']);
  this.executeCharTest('𝔎', ['Fraktur mayúscula K']);
  this.executeCharTest('𝔏', ['Fraktur mayúscula L']);
  this.executeCharTest('𝔐', ['Fraktur mayúscula M']);
  this.executeCharTest('𝔑', ['Fraktur mayúscula N']);
  this.executeCharTest('𝔒', ['Fraktur mayúscula O']);
  this.executeCharTest('𝔓', ['Fraktur mayúscula P']);
  this.executeCharTest('𝔔', ['Fraktur mayúscula Q']);
  this.executeCharTest('ℜ', ['Fraktur mayúscula R']);
  this.executeCharTest('𝔖', ['Fraktur mayúscula S']);
  this.executeCharTest('𝔗', ['Fraktur mayúscula T']);
  this.executeCharTest('𝔘', ['Fraktur mayúscula U']);
  this.executeCharTest('𝔙', ['Fraktur mayúscula V']);
  this.executeCharTest('𝔚', ['Fraktur mayúscula W']);
  this.executeCharTest('𝔛', ['Fraktur mayúscula X']);
  this.executeCharTest('𝔜', ['Fraktur mayúscula Y']);
  this.executeCharTest('ℨ', ['Fraktur mayúscula Z']);
  this.executeCharTest('𝔞', ['Fraktur a']);
  this.executeCharTest('𝔟', ['Fraktur b']);
  this.executeCharTest('𝔠', ['Fraktur c']);
  this.executeCharTest('𝔡', ['Fraktur d']);
  this.executeCharTest('𝔢', ['Fraktur e']);
  this.executeCharTest('𝔣', ['Fraktur f']);
  this.executeCharTest('𝔤', ['Fraktur g']);
  this.executeCharTest('𝔥', ['Fraktur h']);
  this.executeCharTest('𝔦', ['Fraktur i']);
  this.executeCharTest('𝔧', ['Fraktur j']);
  this.executeCharTest('𝔨', ['Fraktur k']);
  this.executeCharTest('𝔩', ['Fraktur l']);
  this.executeCharTest('𝔪', ['Fraktur m']);
  this.executeCharTest('𝔫', ['Fraktur n']);
  this.executeCharTest('𝔬', ['Fraktur o']);
  this.executeCharTest('𝔭', ['Fraktur p']);
  this.executeCharTest('𝔮', ['Fraktur q']);
  this.executeCharTest('𝔯', ['Fraktur r']);
  this.executeCharTest('𝔰', ['Fraktur s']);
  this.executeCharTest('𝔱', ['Fraktur t']);
  this.executeCharTest('𝔲', ['Fraktur u']);
  this.executeCharTest('𝔳', ['Fraktur v']);
  this.executeCharTest('𝔴', ['Fraktur w']);
  this.executeCharTest('𝔵', ['Fraktur x']);
  this.executeCharTest('𝔶', ['Fraktur y']);
  this.executeCharTest('𝔷', ['Fraktur z']);
  this.executeCharTest('Ａ', ['mayúscula A']);
  this.executeCharTest('Ｂ', ['mayúscula B']);
  this.executeCharTest('Ｃ', ['mayúscula C']);
  this.executeCharTest('Ｄ', ['mayúscula D']);
  this.executeCharTest('Ｅ', ['mayúscula E']);
  this.executeCharTest('Ｆ', ['mayúscula F']);
  this.executeCharTest('Ｇ', ['mayúscula G']);
  this.executeCharTest('Ｈ', ['mayúscula H']);
  this.executeCharTest('Ｉ', ['mayúscula I']);
  this.executeCharTest('Ｊ', ['mayúscula J']);
  this.executeCharTest('Ｋ', ['mayúscula K']);
  this.executeCharTest('Ｌ', ['mayúscula L']);
  this.executeCharTest('Ｍ', ['mayúscula M']);
  this.executeCharTest('Ｎ', ['mayúscula N']);
  this.executeCharTest('Ｏ', ['mayúscula O']);
  this.executeCharTest('Ｐ', ['mayúscula P']);
  this.executeCharTest('Ｑ', ['mayúscula Q']);
  this.executeCharTest('Ｒ', ['mayúscula R']);
  this.executeCharTest('Ｓ', ['mayúscula S']);
  this.executeCharTest('Ｔ', ['mayúscula T']);
  this.executeCharTest('Ｕ', ['mayúscula U']);
  this.executeCharTest('Ｖ', ['mayúscula V']);
  this.executeCharTest('Ｗ', ['mayúscula W']);
  this.executeCharTest('Ｘ', ['mayúscula X']);
  this.executeCharTest('Ｙ', ['mayúscula Y']);
  this.executeCharTest('Ｚ', ['mayúscula Z']);
  this.executeCharTest('ａ', ['a']);
  this.executeCharTest('ｂ', ['b']);
  this.executeCharTest('ｃ', ['c']);
  this.executeCharTest('ｄ', ['d']);
  this.executeCharTest('ｅ', ['e']);
  this.executeCharTest('ｆ', ['f']);
  this.executeCharTest('ｇ', ['g']);
  this.executeCharTest('ｈ', ['h']);
  this.executeCharTest('ｉ', ['i']);
  this.executeCharTest('ｊ', ['j']);
  this.executeCharTest('ｋ', ['k']);
  this.executeCharTest('ｌ', ['l']);
  this.executeCharTest('ｍ', ['m']);
  this.executeCharTest('ｎ', ['n']);
  this.executeCharTest('ｏ', ['o']);
  this.executeCharTest('ｐ', ['p']);
  this.executeCharTest('ｑ', ['q']);
  this.executeCharTest('ｒ', ['r']);
  this.executeCharTest('ｓ', ['s']);
  this.executeCharTest('ｔ', ['t']);
  this.executeCharTest('ｕ', ['u']);
  this.executeCharTest('ｖ', ['v']);
  this.executeCharTest('ｗ', ['w']);
  this.executeCharTest('ｘ', ['x']);
  this.executeCharTest('ｙ', ['y']);
  this.executeCharTest('ｚ', ['z']);
  this.executeCharTest('𝐴', ['cursiva mayúscula A']);
  this.executeCharTest('𝐵', ['cursiva mayúscula B']);
  this.executeCharTest('𝐶', ['cursiva mayúscula C']);
  this.executeCharTest('𝐷', ['cursiva mayúscula D']);
  this.executeCharTest('𝐸', ['cursiva mayúscula E']);
  this.executeCharTest('𝐹', ['cursiva mayúscula F']);
  this.executeCharTest('𝐺', ['cursiva mayúscula G']);
  this.executeCharTest('𝐻', ['cursiva mayúscula H']);
  this.executeCharTest('𝐼', ['cursiva mayúscula I']);
  this.executeCharTest('𝐽', ['cursiva mayúscula J']);
  this.executeCharTest('𝐾', ['cursiva mayúscula K']);
  this.executeCharTest('𝐿', ['cursiva mayúscula L']);
  this.executeCharTest('𝑀', ['cursiva mayúscula M']);
  this.executeCharTest('𝑁', ['cursiva mayúscula N']);
  this.executeCharTest('𝑂', ['cursiva mayúscula O']);
  this.executeCharTest('𝑃', ['cursiva mayúscula P']);
  this.executeCharTest('𝑄', ['cursiva mayúscula Q']);
  this.executeCharTest('𝑅', ['cursiva mayúscula R']);
  this.executeCharTest('𝑆', ['cursiva mayúscula S']);
  this.executeCharTest('𝑇', ['cursiva mayúscula T']);
  this.executeCharTest('𝑈', ['cursiva mayúscula U']);
  this.executeCharTest('𝑉', ['cursiva mayúscula V']);
  this.executeCharTest('𝑊', ['cursiva mayúscula W']);
  this.executeCharTest('𝑋', ['cursiva mayúscula X']);
  this.executeCharTest('𝑌', ['cursiva mayúscula Y']);
  this.executeCharTest('𝑍', ['cursiva mayúscula Z']);
  this.executeCharTest('𝑎', ['cursiva a']);
  this.executeCharTest('𝑏', ['cursiva b']);
  this.executeCharTest('𝑐', ['cursiva c']);
  this.executeCharTest('𝑑', ['cursiva d']);
  this.executeCharTest('𝑒', ['cursiva e']);
  this.executeCharTest('𝑓', ['cursiva f']);
  this.executeCharTest('𝑔', ['cursiva g']);
  this.executeCharTest('ℎ', ['constante de planck']);
  this.executeCharTest('𝑖', ['cursiva i']);
  this.executeCharTest('𝑗', ['cursiva j']);
  this.executeCharTest('𝑘', ['cursiva k']);
  this.executeCharTest('𝑙', ['cursiva l']);
  this.executeCharTest('𝑚', ['cursiva m']);
  this.executeCharTest('𝑛', ['cursiva n']);
  this.executeCharTest('𝑜', ['cursiva o']);
  this.executeCharTest('𝑝', ['cursiva p']);
  this.executeCharTest('𝑞', ['cursiva q']);
  this.executeCharTest('𝑟', ['cursiva r']);
  this.executeCharTest('𝑠', ['cursiva s']);
  this.executeCharTest('𝑡', ['cursiva t']);
  this.executeCharTest('𝑢', ['cursiva u']);
  this.executeCharTest('𝑣', ['cursiva v']);
  this.executeCharTest('𝑤', ['cursiva w']);
  this.executeCharTest('𝑥', ['cursiva x']);
  this.executeCharTest('𝑦', ['cursiva y']);
  this.executeCharTest('𝑧', ['cursiva z']);
  this.executeCharTest('𝙰', ['monoespacio mayúscula A']);
  this.executeCharTest('𝙱', ['monoespacio mayúscula B']);
  this.executeCharTest('𝙲', ['monoespacio mayúscula C']);
  this.executeCharTest('𝙳', ['monoespacio mayúscula D']);
  this.executeCharTest('𝙴', ['monoespacio mayúscula E']);
  this.executeCharTest('𝙵', ['monoespacio mayúscula F']);
  this.executeCharTest('𝙶', ['monoespacio mayúscula G']);
  this.executeCharTest('𝙷', ['monoespacio mayúscula H']);
  this.executeCharTest('𝙸', ['monoespacio mayúscula I']);
  this.executeCharTest('𝙹', ['monoespacio mayúscula J']);
  this.executeCharTest('𝙺', ['monoespacio mayúscula K']);
  this.executeCharTest('𝙻', ['monoespacio mayúscula L']);
  this.executeCharTest('𝙼', ['monoespacio mayúscula M']);
  this.executeCharTest('𝙽', ['monoespacio mayúscula N']);
  this.executeCharTest('𝙾', ['monoespacio mayúscula O']);
  this.executeCharTest('𝙿', ['monoespacio mayúscula P']);
  this.executeCharTest('𝚀', ['monoespacio mayúscula Q']);
  this.executeCharTest('𝚁', ['monoespacio mayúscula R']);
  this.executeCharTest('𝚂', ['monoespacio mayúscula S']);
  this.executeCharTest('𝚃', ['monoespacio mayúscula T']);
  this.executeCharTest('𝚄', ['monoespacio mayúscula U']);
  this.executeCharTest('𝚅', ['monoespacio mayúscula V']);
  this.executeCharTest('𝚆', ['monoespacio mayúscula W']);
  this.executeCharTest('𝚇', ['monoespacio mayúscula X']);
  this.executeCharTest('𝚈', ['monoespacio mayúscula Y']);
  this.executeCharTest('𝚉', ['monoespacio mayúscula Z']);
  this.executeCharTest('𝚊', ['monoespacio a']);
  this.executeCharTest('𝚋', ['monoespacio b']);
  this.executeCharTest('𝚌', ['monoespacio c']);
  this.executeCharTest('𝚍', ['monoespacio d']);
  this.executeCharTest('𝚎', ['monoespacio e']);
  this.executeCharTest('𝚏', ['monoespacio f']);
  this.executeCharTest('𝚐', ['monoespacio g']);
  this.executeCharTest('𝚑', ['monoespacio h']);
  this.executeCharTest('𝚒', ['monoespacio i']);
  this.executeCharTest('𝚓', ['monoespacio j']);
  this.executeCharTest('𝚔', ['monoespacio k']);
  this.executeCharTest('𝚕', ['monoespacio l']);
  this.executeCharTest('𝚖', ['monoespacio m']);
  this.executeCharTest('𝚗', ['monoespacio n']);
  this.executeCharTest('𝚘', ['monoespacio o']);
  this.executeCharTest('𝚙', ['monoespacio p']);
  this.executeCharTest('𝚚', ['monoespacio q']);
  this.executeCharTest('𝚛', ['monoespacio r']);
  this.executeCharTest('𝚜', ['monoespacio s']);
  this.executeCharTest('𝚝', ['monoespacio t']);
  this.executeCharTest('𝚞', ['monoespacio u']);
  this.executeCharTest('𝚟', ['monoespacio v']);
  this.executeCharTest('𝚠', ['monoespacio w']);
  this.executeCharTest('𝚡', ['monoespacio x']);
  this.executeCharTest('𝚢', ['monoespacio y']);
  this.executeCharTest('𝚣', ['monoespacio z']);
  this.executeCharTest('A', ['mayúscula A']);
  this.executeCharTest('B', ['mayúscula B']);
  this.executeCharTest('C', ['mayúscula C']);
  this.executeCharTest('D', ['mayúscula D']);
  this.executeCharTest('E', ['mayúscula E']);
  this.executeCharTest('F', ['mayúscula F']);
  this.executeCharTest('G', ['mayúscula G']);
  this.executeCharTest('H', ['mayúscula H']);
  this.executeCharTest('I', ['mayúscula I']);
  this.executeCharTest('J', ['mayúscula J']);
  this.executeCharTest('K', ['mayúscula K']);
  this.executeCharTest('L', ['mayúscula L']);
  this.executeCharTest('M', ['mayúscula M']);
  this.executeCharTest('N', ['mayúscula N']);
  this.executeCharTest('O', ['mayúscula O']);
  this.executeCharTest('P', ['mayúscula P']);
  this.executeCharTest('Q', ['mayúscula Q']);
  this.executeCharTest('R', ['mayúscula R']);
  this.executeCharTest('S', ['mayúscula S']);
  this.executeCharTest('T', ['mayúscula T']);
  this.executeCharTest('U', ['mayúscula U']);
  this.executeCharTest('V', ['mayúscula V']);
  this.executeCharTest('W', ['mayúscula W']);
  this.executeCharTest('X', ['mayúscula X']);
  this.executeCharTest('Y', ['mayúscula Y']);
  this.executeCharTest('Z', ['mayúscula Z']);
  this.executeCharTest('a', ['a']);
  this.executeCharTest('b', ['b']);
  this.executeCharTest('c', ['c']);
  this.executeCharTest('d', ['d']);
  this.executeCharTest('e', ['e']);
  this.executeCharTest('f', ['f']);
  this.executeCharTest('g', ['g']);
  this.executeCharTest('h', ['h']);
  this.executeCharTest('i', ['i']);
  this.executeCharTest('j', ['j']);
  this.executeCharTest('k', ['k']);
  this.executeCharTest('l', ['l']);
  this.executeCharTest('m', ['m']);
  this.executeCharTest('n', ['n']);
  this.executeCharTest('o', ['o']);
  this.executeCharTest('p', ['p']);
  this.executeCharTest('q', ['q']);
  this.executeCharTest('r', ['r']);
  this.executeCharTest('s', ['s']);
  this.executeCharTest('t', ['t']);
  this.executeCharTest('u', ['u']);
  this.executeCharTest('v', ['v']);
  this.executeCharTest('w', ['w']);
  this.executeCharTest('x', ['x']);
  this.executeCharTest('y', ['y']);
  this.executeCharTest('z', ['z']);
  this.executeCharTest('𝒜', ['script mayúscula A']);
  this.executeCharTest('ℬ', ['script mayúscula B']);
  this.executeCharTest('𝒞', ['script mayúscula C']);
  this.executeCharTest('𝒟', ['script mayúscula D']);
  this.executeCharTest('ℰ', ['script mayúscula E']);
  this.executeCharTest('ℱ', ['script mayúscula F']);
  this.executeCharTest('𝒢', ['script mayúscula G']);
  this.executeCharTest('ℋ', ['script mayúscula H']);
  this.executeCharTest('ℐ', ['script mayúscula I']);
  this.executeCharTest('𝒥', ['script mayúscula J']);
  this.executeCharTest('𝒦', ['script mayúscula K']);
  this.executeCharTest('ℒ', ['script mayúscula L']);
  this.executeCharTest('ℳ', ['script mayúscula M']);
  this.executeCharTest('𝒩', ['script mayúscula N']);
  this.executeCharTest('𝒪', ['script mayúscula O']);
  this.executeCharTest('𝒫', ['script mayúscula P']);
  this.executeCharTest('𝒬', ['script mayúscula Q']);
  this.executeCharTest('ℛ', ['script mayúscula R']);
  this.executeCharTest('𝒮', ['script mayúscula S']);
  this.executeCharTest('𝒯', ['script mayúscula T']);
  this.executeCharTest('𝒰', ['script mayúscula U']);
  this.executeCharTest('𝒱', ['script mayúscula V']);
  this.executeCharTest('𝒲', ['script mayúscula W']);
  this.executeCharTest('𝒳', ['script mayúscula X']);
  this.executeCharTest('𝒴', ['script mayúscula Y']);
  this.executeCharTest('𝒵', ['script mayúscula Z']);
  this.executeCharTest('𝒶', ['script a']);
  this.executeCharTest('𝒷', ['script b']);
  this.executeCharTest('𝒸', ['script c']);
  this.executeCharTest('𝒹', ['script d']);
  this.executeCharTest('ℯ', ['script e']);
  this.executeCharTest('𝒻', ['script f']);
  this.executeCharTest('ℊ', ['script g']);
  this.executeCharTest('𝒽', ['script h']);
  this.executeCharTest('𝒾', ['script i']);
  this.executeCharTest('𝒿', ['script j']);
  this.executeCharTest('𝓀', ['script k']);
  this.executeCharTest('𝓁', ['script l']);
  this.executeCharTest('𝓂', ['script m']);
  this.executeCharTest('𝓃', ['script n']);
  this.executeCharTest('ℴ', ['script o']);
  this.executeCharTest('𝓅', ['script p']);
  this.executeCharTest('𝓆', ['script q']);
  this.executeCharTest('𝓇', ['script r']);
  this.executeCharTest('𝓈', ['script s']);
  this.executeCharTest('𝓉', ['script t']);
  this.executeCharTest('𝓊', ['script u']);
  this.executeCharTest('𝓋', ['script v']);
  this.executeCharTest('𝓌', ['script w']);
  this.executeCharTest('𝓍', ['script x']);
  this.executeCharTest('𝓎', ['script y']);
  this.executeCharTest('𝓏', ['script z']);
  this.executeCharTest('𝖠', ['sans serif mayúscula A']);
  this.executeCharTest('𝖡', ['sans serif mayúscula B']);
  this.executeCharTest('𝖢', ['sans serif mayúscula C']);
  this.executeCharTest('𝖣', ['sans serif mayúscula D']);
  this.executeCharTest('𝖤', ['sans serif mayúscula E']);
  this.executeCharTest('𝖥', ['sans serif mayúscula F']);
  this.executeCharTest('𝖦', ['sans serif mayúscula G']);
  this.executeCharTest('𝖧', ['sans serif mayúscula H']);
  this.executeCharTest('𝖨', ['sans serif mayúscula I']);
  this.executeCharTest('𝖩', ['sans serif mayúscula J']);
  this.executeCharTest('𝖪', ['sans serif mayúscula K']);
  this.executeCharTest('𝖫', ['sans serif mayúscula L']);
  this.executeCharTest('𝖬', ['sans serif mayúscula M']);
  this.executeCharTest('𝖭', ['sans serif mayúscula N']);
  this.executeCharTest('𝖮', ['sans serif mayúscula O']);
  this.executeCharTest('𝖯', ['sans serif mayúscula P']);
  this.executeCharTest('𝖰', ['sans serif mayúscula Q']);
  this.executeCharTest('𝖱', ['sans serif mayúscula R']);
  this.executeCharTest('𝖲', ['sans serif mayúscula S']);
  this.executeCharTest('𝖳', ['sans serif mayúscula T']);
  this.executeCharTest('𝖴', ['sans serif mayúscula U']);
  this.executeCharTest('𝖵', ['sans serif mayúscula V']);
  this.executeCharTest('𝖶', ['sans serif mayúscula W']);
  this.executeCharTest('𝖷', ['sans serif mayúscula X']);
  this.executeCharTest('𝖸', ['sans serif mayúscula Y']);
  this.executeCharTest('𝖹', ['sans serif mayúscula Z']);
  this.executeCharTest('𝖺', ['sans serif a']);
  this.executeCharTest('𝖻', ['sans serif b']);
  this.executeCharTest('𝖼', ['sans serif c']);
  this.executeCharTest('𝖽', ['sans serif d']);
  this.executeCharTest('𝖾', ['sans serif e']);
  this.executeCharTest('𝖿', ['sans serif f']);
  this.executeCharTest('𝗀', ['sans serif g']);
  this.executeCharTest('𝗁', ['sans serif h']);
  this.executeCharTest('𝗂', ['sans serif i']);
  this.executeCharTest('𝗃', ['sans serif j']);
  this.executeCharTest('𝗄', ['sans serif k']);
  this.executeCharTest('𝗅', ['sans serif l']);
  this.executeCharTest('𝗆', ['sans serif m']);
  this.executeCharTest('𝗇', ['sans serif n']);
  this.executeCharTest('𝗈', ['sans serif o']);
  this.executeCharTest('𝗉', ['sans serif p']);
  this.executeCharTest('𝗊', ['sans serif q']);
  this.executeCharTest('𝗋', ['sans serif r']);
  this.executeCharTest('𝗌', ['sans serif s']);
  this.executeCharTest('𝗍', ['sans serif t']);
  this.executeCharTest('𝗎', ['sans serif u']);
  this.executeCharTest('𝗏', ['sans serif v']);
  this.executeCharTest('𝗐', ['sans serif w']);
  this.executeCharTest('𝗑', ['sans serif x']);
  this.executeCharTest('𝗒', ['sans serif y']);
  this.executeCharTest('𝗓', ['sans serif z']);
  this.executeCharTest('𝘈', ['sans serif cursiva mayúscula A']);
  this.executeCharTest('𝘉', ['sans serif cursiva mayúscula B']);
  this.executeCharTest('𝘊', ['sans serif cursiva mayúscula C']);
  this.executeCharTest('𝘋', ['sans serif cursiva mayúscula D']);
  this.executeCharTest('𝘌', ['sans serif cursiva mayúscula E']);
  this.executeCharTest('𝘍', ['sans serif cursiva mayúscula F']);
  this.executeCharTest('𝘎', ['sans serif cursiva mayúscula G']);
  this.executeCharTest('𝘏', ['sans serif cursiva mayúscula H']);
  this.executeCharTest('𝘐', ['sans serif cursiva mayúscula I']);
  this.executeCharTest('𝘑', ['sans serif cursiva mayúscula J']);
  this.executeCharTest('𝘒', ['sans serif cursiva mayúscula K']);
  this.executeCharTest('𝘓', ['sans serif cursiva mayúscula L']);
  this.executeCharTest('𝘔', ['sans serif cursiva mayúscula M']);
  this.executeCharTest('𝘕', ['sans serif cursiva mayúscula N']);
  this.executeCharTest('𝘖', ['sans serif cursiva mayúscula O']);
  this.executeCharTest('𝘗', ['sans serif cursiva mayúscula P']);
  this.executeCharTest('𝘘', ['sans serif cursiva mayúscula Q']);
  this.executeCharTest('𝘙', ['sans serif cursiva mayúscula R']);
  this.executeCharTest('𝘚', ['sans serif cursiva mayúscula S']);
  this.executeCharTest('𝘛', ['sans serif cursiva mayúscula T']);
  this.executeCharTest('𝘜', ['sans serif cursiva mayúscula U']);
  this.executeCharTest('𝘝', ['sans serif cursiva mayúscula V']);
  this.executeCharTest('𝘞', ['sans serif cursiva mayúscula W']);
  this.executeCharTest('𝘟', ['sans serif cursiva mayúscula X']);
  this.executeCharTest('𝘠', ['sans serif cursiva mayúscula Y']);
  this.executeCharTest('𝘡', ['sans serif cursiva mayúscula Z']);
  this.executeCharTest('𝘢', ['sans serif cursiva a']);
  this.executeCharTest('𝘣', ['sans serif cursiva b']);
  this.executeCharTest('𝘤', ['sans serif cursiva c']);
  this.executeCharTest('𝘥', ['sans serif cursiva d']);
  this.executeCharTest('𝘦', ['sans serif cursiva e']);
  this.executeCharTest('𝘧', ['sans serif cursiva f']);
  this.executeCharTest('𝘨', ['sans serif cursiva g']);
  this.executeCharTest('𝘩', ['sans serif cursiva h']);
  this.executeCharTest('𝘪', ['sans serif cursiva i']);
  this.executeCharTest('𝘫', ['sans serif cursiva j']);
  this.executeCharTest('𝘬', ['sans serif cursiva k']);
  this.executeCharTest('𝘭', ['sans serif cursiva l']);
  this.executeCharTest('𝘮', ['sans serif cursiva m']);
  this.executeCharTest('𝘯', ['sans serif cursiva n']);
  this.executeCharTest('𝘰', ['sans serif cursiva o']);
  this.executeCharTest('𝘱', ['sans serif cursiva p']);
  this.executeCharTest('𝘲', ['sans serif cursiva q']);
  this.executeCharTest('𝘳', ['sans serif cursiva r']);
  this.executeCharTest('𝘴', ['sans serif cursiva s']);
  this.executeCharTest('𝘵', ['sans serif cursiva t']);
  this.executeCharTest('𝘶', ['sans serif cursiva u']);
  this.executeCharTest('𝘷', ['sans serif cursiva v']);
  this.executeCharTest('𝘸', ['sans serif cursiva w']);
  this.executeCharTest('𝘹', ['sans serif cursiva x']);
  this.executeCharTest('𝘺', ['sans serif cursiva y']);
  this.executeCharTest('𝘻', ['sans serif cursiva z']);
  this.executeCharTest('𝗔', ['sans serif negrita mayúscula A']);
  this.executeCharTest('𝗕', ['sans serif negrita mayúscula B']);
  this.executeCharTest('𝗖', ['sans serif negrita mayúscula C']);
  this.executeCharTest('𝗗', ['sans serif negrita mayúscula D']);
  this.executeCharTest('𝗘', ['sans serif negrita mayúscula E']);
  this.executeCharTest('𝗙', ['sans serif negrita mayúscula F']);
  this.executeCharTest('𝗚', ['sans serif negrita mayúscula G']);
  this.executeCharTest('𝗛', ['sans serif negrita mayúscula H']);
  this.executeCharTest('𝗜', ['sans serif negrita mayúscula I']);
  this.executeCharTest('𝗝', ['sans serif negrita mayúscula J']);
  this.executeCharTest('𝗞', ['sans serif negrita mayúscula K']);
  this.executeCharTest('𝗟', ['sans serif negrita mayúscula L']);
  this.executeCharTest('𝗠', ['sans serif negrita mayúscula M']);
  this.executeCharTest('𝗡', ['sans serif negrita mayúscula N']);
  this.executeCharTest('𝗢', ['sans serif negrita mayúscula O']);
  this.executeCharTest('𝗣', ['sans serif negrita mayúscula P']);
  this.executeCharTest('𝗤', ['sans serif negrita mayúscula Q']);
  this.executeCharTest('𝗥', ['sans serif negrita mayúscula R']);
  this.executeCharTest('𝗦', ['sans serif negrita mayúscula S']);
  this.executeCharTest('𝗧', ['sans serif negrita mayúscula T']);
  this.executeCharTest('𝗨', ['sans serif negrita mayúscula U']);
  this.executeCharTest('𝗩', ['sans serif negrita mayúscula V']);
  this.executeCharTest('𝗪', ['sans serif negrita mayúscula W']);
  this.executeCharTest('𝗫', ['sans serif negrita mayúscula X']);
  this.executeCharTest('𝗬', ['sans serif negrita mayúscula Y']);
  this.executeCharTest('𝗭', ['sans serif negrita mayúscula Z']);
  this.executeCharTest('𝗮', ['sans serif negrita a']);
  this.executeCharTest('𝗯', ['sans serif negrita b']);
  this.executeCharTest('𝗰', ['sans serif negrita c']);
  this.executeCharTest('𝗱', ['sans serif negrita d']);
  this.executeCharTest('𝗲', ['sans serif negrita e']);
  this.executeCharTest('𝗳', ['sans serif negrita f']);
  this.executeCharTest('𝗴', ['sans serif negrita g']);
  this.executeCharTest('𝗵', ['sans serif negrita h']);
  this.executeCharTest('𝗶', ['sans serif negrita i']);
  this.executeCharTest('𝗷', ['sans serif negrita j']);
  this.executeCharTest('𝗸', ['sans serif negrita k']);
  this.executeCharTest('𝗹', ['sans serif negrita l']);
  this.executeCharTest('𝗺', ['sans serif negrita m']);
  this.executeCharTest('𝗻', ['sans serif negrita n']);
  this.executeCharTest('𝗼', ['sans serif negrita o']);
  this.executeCharTest('𝗽', ['sans serif negrita p']);
  this.executeCharTest('𝗾', ['sans serif negrita q']);
  this.executeCharTest('𝗿', ['sans serif negrita r']);
  this.executeCharTest('𝘀', ['sans serif negrita s']);
  this.executeCharTest('𝘁', ['sans serif negrita t']);
  this.executeCharTest('𝘂', ['sans serif negrita u']);
  this.executeCharTest('𝘃', ['sans serif negrita v']);
  this.executeCharTest('𝘄', ['sans serif negrita w']);
  this.executeCharTest('𝘅', ['sans serif negrita x']);
  this.executeCharTest('𝘆', ['sans serif negrita y']);
  this.executeCharTest('𝘇', ['sans serif negrita z']);
  this.executeCharTest('𝘼', ['sans serif negrita cursiva mayúscula A']);
  this.executeCharTest('𝘽', ['sans serif negrita cursiva mayúscula B']);
  this.executeCharTest('𝘾', ['sans serif negrita cursiva mayúscula C']);
  this.executeCharTest('𝘿', ['sans serif negrita cursiva mayúscula D']);
  this.executeCharTest('𝙀', ['sans serif negrita cursiva mayúscula E']);
  this.executeCharTest('𝙁', ['sans serif negrita cursiva mayúscula F']);
  this.executeCharTest('𝙂', ['sans serif negrita cursiva mayúscula G']);
  this.executeCharTest('𝙃', ['sans serif negrita cursiva mayúscula H']);
  this.executeCharTest('𝙄', ['sans serif negrita cursiva mayúscula I']);
  this.executeCharTest('𝙅', ['sans serif negrita cursiva mayúscula J']);
  this.executeCharTest('𝙆', ['sans serif negrita cursiva mayúscula K']);
  this.executeCharTest('𝙇', ['sans serif negrita cursiva mayúscula L']);
  this.executeCharTest('𝙈', ['sans serif negrita cursiva mayúscula M']);
  this.executeCharTest('𝙉', ['sans serif negrita cursiva mayúscula N']);
  this.executeCharTest('𝙊', ['sans serif negrita cursiva mayúscula O']);
  this.executeCharTest('𝙋', ['sans serif negrita cursiva mayúscula P']);
  this.executeCharTest('𝙌', ['sans serif negrita cursiva mayúscula Q']);
  this.executeCharTest('𝙍', ['sans serif negrita cursiva mayúscula R']);
  this.executeCharTest('𝙎', ['sans serif negrita cursiva mayúscula S']);
  this.executeCharTest('𝙏', ['sans serif negrita cursiva mayúscula T']);
  this.executeCharTest('𝙐', ['sans serif negrita cursiva mayúscula U']);
  this.executeCharTest('𝙑', ['sans serif negrita cursiva mayúscula V']);
  this.executeCharTest('𝙒', ['sans serif negrita cursiva mayúscula W']);
  this.executeCharTest('𝙓', ['sans serif negrita cursiva mayúscula X']);
  this.executeCharTest('𝙔', ['sans serif negrita cursiva mayúscula Y']);
  this.executeCharTest('𝙕', ['sans serif negrita cursiva mayúscula Z']);
  this.executeCharTest('𝙖', ['sans serif negrita cursiva a']);
  this.executeCharTest('𝙗', ['sans serif negrita cursiva b']);
  this.executeCharTest('𝙘', ['sans serif negrita cursiva c']);
  this.executeCharTest('𝙙', ['sans serif negrita cursiva d']);
  this.executeCharTest('𝙚', ['sans serif negrita cursiva e']);
  this.executeCharTest('𝙛', ['sans serif negrita cursiva f']);
  this.executeCharTest('𝙜', ['sans serif negrita cursiva g']);
  this.executeCharTest('𝙝', ['sans serif negrita cursiva h']);
  this.executeCharTest('𝙞', ['sans serif negrita cursiva i']);
  this.executeCharTest('𝙟', ['sans serif negrita cursiva j']);
  this.executeCharTest('𝙠', ['sans serif negrita cursiva k']);
  this.executeCharTest('𝙡', ['sans serif negrita cursiva l']);
  this.executeCharTest('𝙢', ['sans serif negrita cursiva m']);
  this.executeCharTest('𝙣', ['sans serif negrita cursiva n']);
  this.executeCharTest('𝙤', ['sans serif negrita cursiva o']);
  this.executeCharTest('𝙥', ['sans serif negrita cursiva p']);
  this.executeCharTest('𝙦', ['sans serif negrita cursiva q']);
  this.executeCharTest('𝙧', ['sans serif negrita cursiva r']);
  this.executeCharTest('𝙨', ['sans serif negrita cursiva s']);
  this.executeCharTest('𝙩', ['sans serif negrita cursiva t']);
  this.executeCharTest('𝙪', ['sans serif negrita cursiva u']);
  this.executeCharTest('𝙫', ['sans serif negrita cursiva v']);
  this.executeCharTest('𝙬', ['sans serif negrita cursiva w']);
  this.executeCharTest('𝙭', ['sans serif negrita cursiva x']);
  this.executeCharTest('𝙮', ['sans serif negrita cursiva y']);
  this.executeCharTest('𝙯', ['sans serif negrita cursiva z']);
  this.executeCharTest('Α', ['mayúscula Alfa']);
  this.executeCharTest('Β', ['mayúscula Beta']);
  this.executeCharTest('Γ', ['mayúscula Gamma']);
  this.executeCharTest('Δ', ['mayúscula Delta']);
  this.executeCharTest('Ε', ['mayúscula Épsilon']);
  this.executeCharTest('Ζ', ['mayúscula Zeta']);
  this.executeCharTest('Η', ['mayúscula Eta']);
  this.executeCharTest('Θ', ['mayúscula Theta']);
  this.executeCharTest('Ι', ['mayúscula Iota']);
  this.executeCharTest('Κ', ['mayúscula Kappa']);
  this.executeCharTest('Λ', ['mayúscula Lambda']);
  this.executeCharTest('Μ', ['mayúscula Mi']);
  this.executeCharTest('Ν', ['mayúscula Ni']);
  this.executeCharTest('Ξ', ['mayúscula Xi']);
  this.executeCharTest('Ο', ['mayúscula Ómicron']);
  this.executeCharTest('Π', ['mayúscula Pi']);
  this.executeCharTest('Ρ', ['mayúscula Rho']);
  this.executeCharTest('ϴ', ['mayúscula Theta']);
  this.executeCharTest('Σ', ['mayúscula Sigma']);
  this.executeCharTest('Τ', ['mayúscula Tau']);
  this.executeCharTest('Υ', ['mayúscula Ípsilon']);
  this.executeCharTest('Φ', ['mayúscula Phi']);
  this.executeCharTest('Χ', ['mayúscula Ji']);
  this.executeCharTest('Ψ', ['mayúscula Psi']);
  this.executeCharTest('Ω', ['mayúscula Omega']);
  this.executeCharTest('∇', ['nabla']);
  this.executeCharTest('α', ['alfa']);
  this.executeCharTest('β', ['beta']);
  this.executeCharTest('γ', ['gamma']);
  this.executeCharTest('δ', ['delta']);
  this.executeCharTest('ε', ['épsilon']);
  this.executeCharTest('ζ', ['zeta']);
  this.executeCharTest('η', ['eta']);
  this.executeCharTest('θ', ['theta']);
  this.executeCharTest('ι', ['iota']);
  this.executeCharTest('κ', ['kappa']);
  this.executeCharTest('λ', ['lambda']);
  this.executeCharTest('μ', ['mi']);
  this.executeCharTest('ν', ['ni']);
  this.executeCharTest('ξ', ['xi']);
  this.executeCharTest('ο', ['ómicron']);
  this.executeCharTest('π', ['pi']);
  this.executeCharTest('ρ', ['rho']);
  this.executeCharTest('ς', ['sigma final']);
  this.executeCharTest('σ', ['sigma']);
  this.executeCharTest('τ', ['tau']);
  this.executeCharTest('υ', ['ípsilon']);
  this.executeCharTest('φ', ['phi']);
  this.executeCharTest('χ', ['ji']);
  this.executeCharTest('ψ', ['psi']);
  this.executeCharTest('ω', ['omega']);
  this.executeCharTest('∂', ['diferencial parcial']);
  this.executeCharTest('ϵ', ['épsilon']);
  this.executeCharTest('ϑ', ['theta']);
  this.executeCharTest('ϰ', ['kappa']);
  this.executeCharTest('ϕ', ['phi']);
  this.executeCharTest('ϱ', ['rho']);
  this.executeCharTest('ϖ', ['pi']);
  this.executeCharTest('𝚨', ['negrita mayúscula Alfa']);
  this.executeCharTest('𝚩', ['negrita mayúscula Beta']);
  this.executeCharTest('𝚪', ['negrita mayúscula Gamma']);
  this.executeCharTest('𝚫', ['negrita mayúscula Delta']);
  this.executeCharTest('𝚬', ['negrita mayúscula Épsilon']);
  this.executeCharTest('𝚭', ['negrita mayúscula Zeta']);
  this.executeCharTest('𝚮', ['negrita mayúscula Eta']);
  this.executeCharTest('𝚯', ['negrita mayúscula Theta']);
  this.executeCharTest('𝚰', ['negrita mayúscula Iota']);
  this.executeCharTest('𝚱', ['negrita mayúscula Kappa']);
  this.executeCharTest('𝚲', ['negrita mayúscula Lambda']);
  this.executeCharTest('𝚳', ['negrita mayúscula Mi']);
  this.executeCharTest('𝚴', ['negrita mayúscula Ni']);
  this.executeCharTest('𝚵', ['negrita mayúscula Xi']);
  this.executeCharTest('𝚶', ['negrita mayúscula Ómicron']);
  this.executeCharTest('𝚷', ['negrita mayúscula Pi']);
  this.executeCharTest('𝚸', ['negrita mayúscula Rho']);
  this.executeCharTest('𝚹', ['negrita mayúscula Theta']);
  this.executeCharTest('𝚺', ['negrita mayúscula Sigma']);
  this.executeCharTest('𝚻', ['negrita mayúscula Tau']);
  this.executeCharTest('𝚼', ['negrita mayúscula Ípsilon']);
  this.executeCharTest('𝚽', ['negrita mayúscula Phi']);
  this.executeCharTest('𝚾', ['negrita mayúscula Ji']);
  this.executeCharTest('𝚿', ['negrita mayúscula Psi']);
  this.executeCharTest('𝛀', ['negrita mayúscula Omega']);
  this.executeCharTest('𝛁', ['negrita nabla']);
  this.executeCharTest('𝛂', ['negrita alfa']);
  this.executeCharTest('𝛃', ['negrita beta']);
  this.executeCharTest('𝛄', ['negrita gamma']);
  this.executeCharTest('𝛅', ['negrita delta']);
  this.executeCharTest('𝛆', ['negrita épsilon']);
  this.executeCharTest('𝛇', ['negrita zeta']);
  this.executeCharTest('𝛈', ['negrita eta']);
  this.executeCharTest('𝛉', ['negrita theta']);
  this.executeCharTest('𝛊', ['negrita iota']);
  this.executeCharTest('𝛋', ['negrita kappa']);
  this.executeCharTest('𝛌', ['negrita lambda']);
  this.executeCharTest('𝛍', ['negrita mi']);
  this.executeCharTest('𝛎', ['negrita ni']);
  this.executeCharTest('𝛏', ['negrita xi']);
  this.executeCharTest('𝛐', ['negrita ómicron']);
  this.executeCharTest('𝛑', ['negrita pi']);
  this.executeCharTest('𝛒', ['negrita rho']);
  this.executeCharTest('𝛓', ['negrita sigma final']);
  this.executeCharTest('𝛔', ['negrita sigma']);
  this.executeCharTest('𝛕', ['negrita tau']);
  this.executeCharTest('𝛖', ['negrita ípsilon']);
  this.executeCharTest('𝛗', ['negrita phi']);
  this.executeCharTest('𝛘', ['negrita ji']);
  this.executeCharTest('𝛙', ['negrita psi']);
  this.executeCharTest('𝛚', ['negrita omega']);
  this.executeCharTest('𝛛', ['negrita diferencial parcial']);
  this.executeCharTest('𝛜', ['negrita épsilon']);
  this.executeCharTest('𝛝', ['negrita theta']);
  this.executeCharTest('𝛞', ['negrita kappa']);
  this.executeCharTest('𝛟', ['negrita phi']);
  this.executeCharTest('𝛠', ['negrita rho']);
  this.executeCharTest('𝛡', ['negrita pi']);
  this.executeCharTest('𝛢', ['cursiva mayúscula Alfa']);
  this.executeCharTest('𝛣', ['cursiva mayúscula Beta']);
  this.executeCharTest('𝛤', ['cursiva mayúscula Gamma']);
  this.executeCharTest('𝛥', ['cursiva mayúscula Delta']);
  this.executeCharTest('𝛦', ['cursiva mayúscula Épsilon']);
  this.executeCharTest('𝛧', ['cursiva mayúscula Zeta']);
  this.executeCharTest('𝛨', ['cursiva mayúscula Eta']);
  this.executeCharTest('𝛩', ['cursiva mayúscula Theta']);
  this.executeCharTest('𝛪', ['cursiva mayúscula Iota']);
  this.executeCharTest('𝛫', ['cursiva mayúscula Kappa']);
  this.executeCharTest('𝛬', ['cursiva mayúscula Lambda']);
  this.executeCharTest('𝛭', ['cursiva mayúscula Mi']);
  this.executeCharTest('𝛮', ['cursiva mayúscula Ni']);
  this.executeCharTest('𝛯', ['cursiva mayúscula Xi']);
  this.executeCharTest('𝛰', ['cursiva mayúscula Ómicron']);
  this.executeCharTest('𝛱', ['cursiva mayúscula Pi']);
  this.executeCharTest('𝛲', ['cursiva mayúscula Rho']);
  this.executeCharTest('𝛳', ['cursiva mayúscula Theta']);
  this.executeCharTest('𝛴', ['cursiva mayúscula Sigma']);
  this.executeCharTest('𝛵', ['cursiva mayúscula Tau']);
  this.executeCharTest('𝛶', ['cursiva mayúscula Ípsilon']);
  this.executeCharTest('𝛷', ['cursiva mayúscula Phi']);
  this.executeCharTest('𝛸', ['cursiva mayúscula Ji']);
  this.executeCharTest('𝛹', ['cursiva mayúscula Psi']);
  this.executeCharTest('𝛺', ['cursiva mayúscula Omega']);
  this.executeCharTest('𝛻', ['cursiva nabla']);
  this.executeCharTest('𝛼', ['cursiva alfa']);
  this.executeCharTest('𝛽', ['cursiva beta']);
  this.executeCharTest('𝛾', ['cursiva gamma']);
  this.executeCharTest('𝛿', ['cursiva delta']);
  this.executeCharTest('𝜀', ['cursiva épsilon']);
  this.executeCharTest('𝜁', ['cursiva zeta']);
  this.executeCharTest('𝜂', ['cursiva eta']);
  this.executeCharTest('𝜃', ['cursiva theta']);
  this.executeCharTest('𝜄', ['cursiva iota']);
  this.executeCharTest('𝜅', ['cursiva kappa']);
  this.executeCharTest('𝜆', ['cursiva lambda']);
  this.executeCharTest('𝜇', ['cursiva mi']);
  this.executeCharTest('𝜈', ['cursiva ni']);
  this.executeCharTest('𝜉', ['cursiva xi']);
  this.executeCharTest('𝜊', ['cursiva ómicron']);
  this.executeCharTest('𝜋', ['cursiva pi']);
  this.executeCharTest('𝜌', ['cursiva rho']);
  this.executeCharTest('𝜍', ['cursiva sigma final']);
  this.executeCharTest('𝜎', ['cursiva sigma']);
  this.executeCharTest('𝜏', ['cursiva tau']);
  this.executeCharTest('𝜐', ['cursiva ípsilon']);
  this.executeCharTest('𝜑', ['cursiva phi']);
  this.executeCharTest('𝜒', ['cursiva ji']);
  this.executeCharTest('𝜓', ['cursiva psi']);
  this.executeCharTest('𝜔', ['cursiva omega']);
  this.executeCharTest('𝜕', ['cursiva diferencial parcial']);
  this.executeCharTest('𝜖', ['cursiva épsilon']);
  this.executeCharTest('𝜗', ['cursiva theta']);
  this.executeCharTest('𝜘', ['cursiva kappa']);
  this.executeCharTest('𝜙', ['cursiva phi']);
  this.executeCharTest('𝜚', ['cursiva rho']);
  this.executeCharTest('𝜛', ['cursiva pi']);
  this.executeCharTest('𝜜', ['negrita cursiva mayúscula Alfa']);
  this.executeCharTest('𝜝', ['negrita cursiva mayúscula Beta']);
  this.executeCharTest('𝜞', ['negrita cursiva mayúscula Gamma']);
  this.executeCharTest('𝜟', ['negrita cursiva mayúscula Delta']);
  this.executeCharTest('𝜠', ['negrita cursiva mayúscula Épsilon']);
  this.executeCharTest('𝜡', ['negrita cursiva mayúscula Zeta']);
  this.executeCharTest('𝜢', ['negrita cursiva mayúscula Eta']);
  this.executeCharTest('𝜣', ['negrita cursiva mayúscula Theta']);
  this.executeCharTest('𝜤', ['negrita cursiva mayúscula Iota']);
  this.executeCharTest('𝜥', ['negrita cursiva mayúscula Kappa']);
  this.executeCharTest('𝜦', ['negrita cursiva mayúscula Lambda']);
  this.executeCharTest('𝜧', ['negrita cursiva mayúscula Mi']);
  this.executeCharTest('𝜨', ['negrita cursiva mayúscula Ni']);
  this.executeCharTest('𝜩', ['negrita cursiva mayúscula Xi']);
  this.executeCharTest('𝜪', ['negrita cursiva mayúscula Ómicron']);
  this.executeCharTest('𝜫', ['negrita cursiva mayúscula Pi']);
  this.executeCharTest('𝜬', ['negrita cursiva mayúscula Rho']);
  this.executeCharTest('𝜭', ['negrita cursiva mayúscula Theta']);
  this.executeCharTest('𝜮', ['negrita cursiva mayúscula Sigma']);
  this.executeCharTest('𝜯', ['negrita cursiva mayúscula Tau']);
  this.executeCharTest('𝜰', ['negrita cursiva mayúscula Ípsilon']);
  this.executeCharTest('𝜱', ['negrita cursiva mayúscula Phi']);
  this.executeCharTest('𝜲', ['negrita cursiva mayúscula Ji']);
  this.executeCharTest('𝜳', ['negrita cursiva mayúscula Psi']);
  this.executeCharTest('𝜴', ['negrita cursiva mayúscula Omega']);
  this.executeCharTest('𝜵', ['negrita cursiva nabla']);
  this.executeCharTest('𝜶', ['negrita cursiva alfa']);
  this.executeCharTest('𝜷', ['negrita cursiva beta']);
  this.executeCharTest('𝜸', ['negrita cursiva gamma']);
  this.executeCharTest('𝜹', ['negrita cursiva delta']);
  this.executeCharTest('𝜺', ['negrita cursiva épsilon']);
  this.executeCharTest('𝜻', ['negrita cursiva zeta']);
  this.executeCharTest('𝜼', ['negrita cursiva eta']);
  this.executeCharTest('𝜽', ['negrita cursiva theta']);
  this.executeCharTest('𝜾', ['negrita cursiva iota']);
  this.executeCharTest('𝜿', ['negrita cursiva kappa']);
  this.executeCharTest('𝝀', ['negrita cursiva lambda']);
  this.executeCharTest('𝝁', ['negrita cursiva mi']);
  this.executeCharTest('𝝂', ['negrita cursiva ni']);
  this.executeCharTest('𝝃', ['negrita cursiva xi']);
  this.executeCharTest('𝝄', ['negrita cursiva ómicron']);
  this.executeCharTest('𝝅', ['negrita cursiva pi']);
  this.executeCharTest('𝝆', ['negrita cursiva rho']);
  this.executeCharTest('𝝇', ['negrita cursiva sigma final']);
  this.executeCharTest('𝝈', ['negrita cursiva sigma']);
  this.executeCharTest('𝝉', ['negrita cursiva tau']);
  this.executeCharTest('𝝊', ['negrita cursiva ípsilon']);
  this.executeCharTest('𝝋', ['negrita cursiva phi']);
  this.executeCharTest('𝝌', ['negrita cursiva ji']);
  this.executeCharTest('𝝍', ['negrita cursiva psi']);
  this.executeCharTest('𝝎', ['negrita cursiva omega']);
  this.executeCharTest('𝝏', ['negrita cursiva diferencial parcial']);
  this.executeCharTest('𝝐', ['negrita cursiva épsilon']);
  this.executeCharTest('𝝑', ['negrita cursiva theta']);
  this.executeCharTest('𝝒', ['negrita cursiva kappa']);
  this.executeCharTest('𝝓', ['negrita cursiva phi']);
  this.executeCharTest('𝝔', ['negrita cursiva rho']);
  this.executeCharTest('𝝕', ['negrita cursiva pi']);
  this.executeCharTest('𝝖', ['sans serif negrita mayúscula Alfa']);
  this.executeCharTest('𝝗', ['sans serif negrita mayúscula Beta']);
  this.executeCharTest('𝝘', ['sans serif negrita mayúscula Gamma']);
  this.executeCharTest('𝝙', ['sans serif negrita mayúscula Delta']);
  this.executeCharTest('𝝚', ['sans serif negrita mayúscula Épsilon']);
  this.executeCharTest('𝝛', ['sans serif negrita mayúscula Zeta']);
  this.executeCharTest('𝝜', ['sans serif negrita mayúscula Eta']);
  this.executeCharTest('𝝝', ['sans serif negrita mayúscula Theta']);
  this.executeCharTest('𝝞', ['sans serif negrita mayúscula Iota']);
  this.executeCharTest('𝝟', ['sans serif negrita mayúscula Kappa']);
  this.executeCharTest('𝝠', ['sans serif negrita mayúscula Lambda']);
  this.executeCharTest('𝝡', ['sans serif negrita mayúscula Mi']);
  this.executeCharTest('𝝢', ['sans serif negrita mayúscula Ni']);
  this.executeCharTest('𝝣', ['sans serif negrita mayúscula Xi']);
  this.executeCharTest('𝝤', ['sans serif negrita mayúscula Ómicron']);
  this.executeCharTest('𝝥', ['sans serif negrita mayúscula Pi']);
  this.executeCharTest('𝝦', ['sans serif negrita mayúscula Rho']);
  this.executeCharTest('𝝧', ['sans serif negrita mayúscula Theta']);
  this.executeCharTest('𝝨', ['sans serif negrita mayúscula Sigma']);
  this.executeCharTest('𝝩', ['sans serif negrita mayúscula Tau']);
  this.executeCharTest('𝝪', ['sans serif negrita mayúscula Ípsilon']);
  this.executeCharTest('𝝫', ['sans serif negrita mayúscula Phi']);
  this.executeCharTest('𝝬', ['sans serif negrita mayúscula Ji']);
  this.executeCharTest('𝝭', ['sans serif negrita mayúscula Psi']);
  this.executeCharTest('𝝮', ['sans serif negrita mayúscula Omega']);
  this.executeCharTest('𝝯', ['sans serif negrita nabla']);
  this.executeCharTest('𝝰', ['sans serif negrita alfa']);
  this.executeCharTest('𝝱', ['sans serif negrita beta']);
  this.executeCharTest('𝝲', ['sans serif negrita gamma']);
  this.executeCharTest('𝝳', ['sans serif negrita delta']);
  this.executeCharTest('𝝴', ['sans serif negrita épsilon']);
  this.executeCharTest('𝝵', ['sans serif negrita zeta']);
  this.executeCharTest('𝝶', ['sans serif negrita eta']);
  this.executeCharTest('𝝷', ['sans serif negrita theta']);
  this.executeCharTest('𝝸', ['sans serif negrita iota']);
  this.executeCharTest('𝝹', ['sans serif negrita kappa']);
  this.executeCharTest('𝝺', ['sans serif negrita lambda']);
  this.executeCharTest('𝝻', ['sans serif negrita mi']);
  this.executeCharTest('𝝼', ['sans serif negrita ni']);
  this.executeCharTest('𝝽', ['sans serif negrita xi']);
  this.executeCharTest('𝝾', ['sans serif negrita ómicron']);
  this.executeCharTest('𝝿', ['sans serif negrita pi']);
  this.executeCharTest('𝞀', ['sans serif negrita rho']);
  this.executeCharTest('𝞁', ['sans serif negrita sigma final']);
  this.executeCharTest('𝞂', ['sans serif negrita sigma']);
  this.executeCharTest('𝞃', ['sans serif negrita tau']);
  this.executeCharTest('𝞄', ['sans serif negrita ípsilon']);
  this.executeCharTest('𝞅', ['sans serif negrita phi']);
  this.executeCharTest('𝞆', ['sans serif negrita ji']);
  this.executeCharTest('𝞇', ['sans serif negrita psi']);
  this.executeCharTest('𝞈', ['sans serif negrita omega']);
  this.executeCharTest('𝞉', ['sans serif negrita diferencial parcial']);
  this.executeCharTest('𝞊', ['sans serif negrita épsilon']);
  this.executeCharTest('𝞋', ['sans serif negrita theta']);
  this.executeCharTest('𝞌', ['sans serif negrita kappa']);
  this.executeCharTest('𝞍', ['sans serif negrita phi']);
  this.executeCharTest('𝞎', ['sans serif negrita rho']);
  this.executeCharTest('𝞏', ['sans serif negrita pi']);
  this.executeCharTest('𝞐', ['sans serif negrita cursiva mayúscula Alfa']);
  this.executeCharTest('𝞑', ['sans serif negrita cursiva mayúscula Beta']);
  this.executeCharTest('𝞒', ['sans serif negrita cursiva mayúscula Gamma']);
  this.executeCharTest('𝞓', ['sans serif negrita cursiva mayúscula Delta']);
  this.executeCharTest('𝞔', ['sans serif negrita cursiva mayúscula Épsilon']);
  this.executeCharTest('𝞕', ['sans serif negrita cursiva mayúscula Zeta']);
  this.executeCharTest('𝞖', ['sans serif negrita cursiva mayúscula Eta']);
  this.executeCharTest('𝞗', ['sans serif negrita cursiva mayúscula Theta']);
  this.executeCharTest('𝞘', ['sans serif negrita cursiva mayúscula Iota']);
  this.executeCharTest('𝞙', ['sans serif negrita cursiva mayúscula Kappa']);
  this.executeCharTest('𝞚', ['sans serif negrita cursiva mayúscula Lambda']);
  this.executeCharTest('𝞛', ['sans serif negrita cursiva mayúscula Mi']);
  this.executeCharTest('𝞜', ['sans serif negrita cursiva mayúscula Ni']);
  this.executeCharTest('𝞝', ['sans serif negrita cursiva mayúscula Xi']);
  this.executeCharTest('𝞞', ['sans serif negrita cursiva mayúscula Ómicron']);
  this.executeCharTest('𝞟', ['sans serif negrita cursiva mayúscula Pi']);
  this.executeCharTest('𝞠', ['sans serif negrita cursiva mayúscula Rho']);
  this.executeCharTest('𝞡', ['sans serif negrita cursiva mayúscula Theta']);
  this.executeCharTest('𝞢', ['sans serif negrita cursiva mayúscula Sigma']);
  this.executeCharTest('𝞣', ['sans serif negrita cursiva mayúscula Tau']);
  this.executeCharTest('𝞤', ['sans serif negrita cursiva mayúscula Ípsilon']);
  this.executeCharTest('𝞥', ['sans serif negrita cursiva mayúscula Phi']);
  this.executeCharTest('𝞦', ['sans serif negrita cursiva mayúscula Ji']);
  this.executeCharTest('𝞧', ['sans serif negrita cursiva mayúscula Psi']);
  this.executeCharTest('𝞨', ['sans serif negrita cursiva mayúscula Omega']);
  this.executeCharTest('𝞩', ['sans serif negrita cursiva nabla']);
  this.executeCharTest('𝞪', ['sans serif negrita cursiva alfa']);
  this.executeCharTest('𝞫', ['sans serif negrita cursiva beta']);
  this.executeCharTest('𝞬', ['sans serif negrita cursiva gamma']);
  this.executeCharTest('𝞭', ['sans serif negrita cursiva delta']);
  this.executeCharTest('𝞮', ['sans serif negrita cursiva épsilon']);
  this.executeCharTest('𝞯', ['sans serif negrita cursiva zeta']);
  this.executeCharTest('𝞰', ['sans serif negrita cursiva eta']);
  this.executeCharTest('𝞱', ['sans serif negrita cursiva theta']);
  this.executeCharTest('𝞲', ['sans serif negrita cursiva iota']);
  this.executeCharTest('𝞳', ['sans serif negrita cursiva kappa']);
  this.executeCharTest('𝞴', ['sans serif negrita cursiva lambda']);
  this.executeCharTest('𝞵', ['sans serif negrita cursiva mi']);
  this.executeCharTest('𝞶', ['sans serif negrita cursiva ni']);
  this.executeCharTest('𝞷', ['sans serif negrita cursiva xi']);
  this.executeCharTest('𝞸', ['sans serif negrita cursiva ómicron']);
  this.executeCharTest('𝞹', ['sans serif negrita cursiva pi']);
  this.executeCharTest('𝞺', ['sans serif negrita cursiva rho']);
  this.executeCharTest('𝞻', ['sans serif negrita cursiva sigma final']);
  this.executeCharTest('𝞼', ['sans serif negrita cursiva sigma']);
  this.executeCharTest('𝞽', ['sans serif negrita cursiva tau']);
  this.executeCharTest('𝞾', ['sans serif negrita cursiva ípsilon']);
  this.executeCharTest('𝞿', ['sans serif negrita cursiva phi']);
  this.executeCharTest('𝟀', ['sans serif negrita cursiva ji']);
  this.executeCharTest('𝟁', ['sans serif negrita cursiva psi']);
  this.executeCharTest('𝟂', ['sans serif negrita cursiva omega']);
  this.executeCharTest('𝟃', ['sans serif negrita cursiva diferencial parcial']);
  this.executeCharTest('𝟄', ['sans serif negrita cursiva épsilon']);
  this.executeCharTest('𝟅', ['sans serif negrita cursiva theta']);
  this.executeCharTest('𝟆', ['sans serif negrita cursiva kappa']);
  this.executeCharTest('𝟇', ['sans serif negrita cursiva phi']);
  this.executeCharTest('𝟈', ['sans serif negrita cursiva rho']);
  this.executeCharTest('𝟉', ['sans serif negrita cursiva pi']);
  this.executeCharTest('⁰', ['superíndice cero']);
  this.executeCharTest('¹', ['superíndice uno']);
  this.executeCharTest('²', ['al cuadrado']);
  this.executeCharTest('³', ['al cubo']);
  this.executeCharTest('⁴', ['superíndice cuatro']);
  this.executeCharTest('⁵', ['superíndice cinco']);
  this.executeCharTest('⁶', ['superíndice seis']);
  this.executeCharTest('⁷', ['superíndice siete']);
  this.executeCharTest('⁸', ['superíndice ocho']);
  this.executeCharTest('⁹', ['superíndice nueve']);
  this.executeCharTest('₀', ['subíndice cero']);
  this.executeCharTest('₁', ['subíndice uno']);
  this.executeCharTest('₂', ['subíndice dos']);
  this.executeCharTest('₃', ['subíndice tres']);
  this.executeCharTest('₄', ['subíndice cuatro']);
  this.executeCharTest('₅', ['subíndice cinco']);
  this.executeCharTest('₆', ['subíndice seis']);
  this.executeCharTest('₇', ['subíndice siete']);
  this.executeCharTest('₈', ['subíndice ocho']);
  this.executeCharTest('₉', ['subíndice nueve']);
  this.executeCharTest('⓪', ['cero en circulo']);
  this.executeCharTest('①', ['uno en circulo']);
  this.executeCharTest('②', ['dos en circulo']);
  this.executeCharTest('③', ['tres en circulo']);
  this.executeCharTest('④', ['cuatro en circulo']);
  this.executeCharTest('⑤', ['cinco en circulo']);
  this.executeCharTest('⑥', ['seis en circulo']);
  this.executeCharTest('⑦', ['siete en circulo']);
  this.executeCharTest('⑧', ['ocho en circulo']);
  this.executeCharTest('⑨', ['nueve en circulo']);
  this.executeCharTest('⑩', ['diez en circulo']);
  this.executeCharTest('⑪', ['once en circulo']);
  this.executeCharTest('⑫', ['doce en circulo']);
  this.executeCharTest('⑬', ['trece en circulo']);
  this.executeCharTest('⑭', ['catorce en circulo']);
  this.executeCharTest('⑮', ['quince en circulo']);
  this.executeCharTest('⑯', ['dieciséis en circulo']);
  this.executeCharTest('⑰', ['diecisiete en circulo']);
  this.executeCharTest('⑱', ['dieciocho en circulo']);
  this.executeCharTest('⑲', ['diecinueve en circulo']);
  this.executeCharTest('⑳', ['veinte en circulo']);
  this.executeCharTest('㉑', ['veintiuno en circulo']);
  this.executeCharTest('㉒', ['veintidós en circulo']);
  this.executeCharTest('㉓', ['veintitrés en circulo']);
  this.executeCharTest('㉔', ['veinticuatro en circulo']);
  this.executeCharTest('㉕', ['veinticinco en circulo']);
  this.executeCharTest('㉖', ['veintiséis en circulo']);
  this.executeCharTest('㉗', ['veintisiete en circulo']);
  this.executeCharTest('㉘', ['veintiocho en circulo']);
  this.executeCharTest('㉙', ['veintinueve en circulo']);
  this.executeCharTest('㉚', ['treinta en circulo']);
  this.executeCharTest('㉛', ['treinta y uno en circulo']);
  this.executeCharTest('㉜', ['treinta y dos en circulo']);
  this.executeCharTest('㉝', ['treinta y tres en circulo']);
  this.executeCharTest('㉞', ['treinta y cuatro en circulo']);
  this.executeCharTest('㉟', ['treinta y cinco en circulo']);
  this.executeCharTest('㊱', ['treinta y seis en circulo']);
  this.executeCharTest('㊲', ['treinta y siete en circulo']);
  this.executeCharTest('㊳', ['treinta y ocho en circulo']);
  this.executeCharTest('㊴', ['treinta y nueve en circulo']);
  this.executeCharTest('㊵', ['cuarenta en circulo']);
  this.executeCharTest('㊶', ['cuarenta y uno en circulo']);
  this.executeCharTest('㊷', ['cuarenta y dos en circulo']);
  this.executeCharTest('㊸', ['cuarenta y tres en circulo']);
  this.executeCharTest('㊹', ['cuarenta y cuatro en circulo']);
  this.executeCharTest('㊺', ['cuarenta y cinco en circulo']);
  this.executeCharTest('㊻', ['cuarenta y seis en circulo']);
  this.executeCharTest('㊼', ['cuarenta y siete en circulo']);
  this.executeCharTest('㊽', ['cuarenta y ocho en circulo']);
  this.executeCharTest('㊾', ['cuarenta y nueve en circulo']);
  this.executeCharTest('㊿', ['cincuenta en circulo']);
  this.executeCharTest('⑴', ['uno entre paréntesis']);
  this.executeCharTest('⑵', ['dos entre paréntesis']);
  this.executeCharTest('⑶', ['tres entre paréntesis']);
  this.executeCharTest('⑷', ['cuatro entre paréntesis']);
  this.executeCharTest('⑸', ['cinco entre paréntesis']);
  this.executeCharTest('⑹', ['seis entre paréntesis']);
  this.executeCharTest('⑺', ['siete entre paréntesis']);
  this.executeCharTest('⑻', ['ocho entre paréntesis']);
  this.executeCharTest('⑼', ['nueve entre paréntesis']);
  this.executeCharTest('⑽', ['diez entre paréntesis']);
  this.executeCharTest('⑾', ['once entre paréntesis']);
  this.executeCharTest('⑿', ['doce entre paréntesis']);
  this.executeCharTest('⒀', ['trece entre paréntesis']);
  this.executeCharTest('⒁', ['catorce entre paréntesis']);
  this.executeCharTest('⒂', ['quince entre paréntesis']);
  this.executeCharTest('⒃', ['dieciséis entre paréntesis']);
  this.executeCharTest('⒄', ['diecisiete entre paréntesis']);
  this.executeCharTest('⒅', ['dieciocho entre paréntesis']);
  this.executeCharTest('⒆', ['diecinueve entre paréntesis']);
  this.executeCharTest('⒇', ['veinte entre paréntesis']);
  this.executeCharTest('🄀', ['cero punto']);
  this.executeCharTest('⒈', ['uno punto']);
  this.executeCharTest('⒉', ['dos punto']);
  this.executeCharTest('⒊', ['tres punto']);
  this.executeCharTest('⒋', ['cuatro punto']);
  this.executeCharTest('⒌', ['cinco punto']);
  this.executeCharTest('⒍', ['seis punto']);
  this.executeCharTest('⒎', ['siete punto']);
  this.executeCharTest('⒏', ['ocho punto']);
  this.executeCharTest('⒐', ['nueve punto']);
  this.executeCharTest('⒑', ['diez punto']);
  this.executeCharTest('⒒', ['once punto']);
  this.executeCharTest('⒓', ['doce punto']);
  this.executeCharTest('⒔', ['trece punto']);
  this.executeCharTest('⒕', ['catorce punto']);
  this.executeCharTest('⒖', ['quince punto']);
  this.executeCharTest('⒗', ['dieciséis punto']);
  this.executeCharTest('⒘', ['diecisiete punto']);
  this.executeCharTest('⒙', ['dieciocho punto']);
  this.executeCharTest('⒚', ['diecinueve punto']);
  this.executeCharTest('⒛', ['veinte punto']);
  this.executeCharTest('⓿', ['cero en circulo negro']);
  this.executeCharTest('❶', ['uno en circulo negro']);
  this.executeCharTest('❷', ['dos en circulo negro']);
  this.executeCharTest('❸', ['tres en circulo negro']);
  this.executeCharTest('❹', ['cuatro en circulo negro']);
  this.executeCharTest('❺', ['cinco en circulo negro']);
  this.executeCharTest('❻', ['seis en circulo negro']);
  this.executeCharTest('❼', ['siete en circulo negro']);
  this.executeCharTest('❽', ['ocho en circulo negro']);
  this.executeCharTest('❾', ['nueve en circulo negro']);
  this.executeCharTest('❿', ['diez en circulo negro']);
  this.executeCharTest('⓫', ['once en circulo negro']);
  this.executeCharTest('⓬', ['doce en circulo negro']);
  this.executeCharTest('⓭', ['trece en circulo negro']);
  this.executeCharTest('⓮', ['catorce en circulo negro']);
  this.executeCharTest('⓯', ['quince en circulo negro']);
  this.executeCharTest('⓰', ['dieciséis en circulo negro']);
  this.executeCharTest('⓱', ['diecisiete en circulo negro']);
  this.executeCharTest('⓲', ['dieciocho en circulo negro']);
  this.executeCharTest('⓳', ['diecinueve en circulo negro']);
  this.executeCharTest('⓴', ['veinte en circulo negro']);
  this.executeCharTest('⓵', ['uno en doble circulo']);
  this.executeCharTest('⓶', ['dos en doble circulo']);
  this.executeCharTest('⓷', ['tres en doble circulo']);
  this.executeCharTest('⓸', ['cuatro en doble circulo']);
  this.executeCharTest('⓹', ['cinco en doble circulo']);
  this.executeCharTest('⓺', ['seis en doble circulo']);
  this.executeCharTest('⓻', ['siete en doble circulo']);
  this.executeCharTest('⓼', ['ocho en doble circulo']);
  this.executeCharTest('⓽', ['nueve en doble circulo']);
  this.executeCharTest('⓾', ['diez en doble circulo']);
  this.executeCharTest('🄋', ['sans serif cero en circulo']);
  this.executeCharTest('➀', ['sans serif uno en circulo']);
  this.executeCharTest('➁', ['sans serif dos en circulo']);
  this.executeCharTest('➂', ['sans serif tres en circulo']);
  this.executeCharTest('➃', ['sans serif cuatro en circulo']);
  this.executeCharTest('➄', ['sans serif cinco en circulo']);
  this.executeCharTest('➅', ['sans serif seis en circulo']);
  this.executeCharTest('➆', ['sans serif siete en circulo']);
  this.executeCharTest('➇', ['sans serif ocho en circulo']);
  this.executeCharTest('➈', ['sans serif nueve en circulo']);
  this.executeCharTest('➉', ['sans serif diez en circulo']);
  this.executeCharTest('🄌', ['sans serif cero en circulo negro']);
  this.executeCharTest('➊', ['sans serif uno en circulo negro']);
  this.executeCharTest('➋', ['sans serif dos en circulo negro']);
  this.executeCharTest('➌', ['sans serif tres en circulo negro']);
  this.executeCharTest('➍', ['sans serif cuatro en circulo negro']);
  this.executeCharTest('➎', ['sans serif cinco en circulo negro']);
  this.executeCharTest('➏', ['sans serif seis en circulo negro']);
  this.executeCharTest('➐', ['sans serif siete en circulo negro']);
  this.executeCharTest('➑', ['sans serif ocho en circulo negro']);
  this.executeCharTest('➒', ['sans serif nueve en circulo negro']);
  this.executeCharTest('➓', ['sans serif diez en circulo negro']);
  this.executeCharTest('０', ['cero']);
  this.executeCharTest('１', ['uno']);
  this.executeCharTest('２', ['dos']);
  this.executeCharTest('３', ['tres']);
  this.executeCharTest('４', ['cuatro']);
  this.executeCharTest('５', ['cinco']);
  this.executeCharTest('６', ['seis']);
  this.executeCharTest('７', ['siete']);
  this.executeCharTest('８', ['ocho']);
  this.executeCharTest('９', ['nueve']);
  this.executeCharTest('𝟎', ['negrita cero']);
  this.executeCharTest('𝟏', ['negrita uno']);
  this.executeCharTest('𝟐', ['negrita dos']);
  this.executeCharTest('𝟑', ['negrita tres']);
  this.executeCharTest('𝟒', ['negrita cuatro']);
  this.executeCharTest('𝟓', ['negrita cinco']);
  this.executeCharTest('𝟔', ['negrita seis']);
  this.executeCharTest('𝟕', ['negrita siete']);
  this.executeCharTest('𝟖', ['negrita ocho']);
  this.executeCharTest('𝟗', ['negrita nueve']);
  this.executeCharTest('𝟘', ['negrita de pizarra cero']);
  this.executeCharTest('𝟙', ['negrita de pizarra uno']);
  this.executeCharTest('𝟚', ['negrita de pizarra dos']);
  this.executeCharTest('𝟛', ['negrita de pizarra tres']);
  this.executeCharTest('𝟜', ['negrita de pizarra cuatro']);
  this.executeCharTest('𝟝', ['negrita de pizarra cinco']);
  this.executeCharTest('𝟞', ['negrita de pizarra seis']);
  this.executeCharTest('𝟟', ['negrita de pizarra siete']);
  this.executeCharTest('𝟠', ['negrita de pizarra ocho']);
  this.executeCharTest('𝟡', ['negrita de pizarra nueve']);
  this.executeCharTest('𝟢', ['sans serif cero']);
  this.executeCharTest('𝟣', ['sans serif uno']);
  this.executeCharTest('𝟤', ['sans serif dos']);
  this.executeCharTest('𝟥', ['sans serif tres']);
  this.executeCharTest('𝟦', ['sans serif cuatro']);
  this.executeCharTest('𝟧', ['sans serif cinco']);
  this.executeCharTest('𝟨', ['sans serif seis']);
  this.executeCharTest('𝟩', ['sans serif siete']);
  this.executeCharTest('𝟪', ['sans serif ocho']);
  this.executeCharTest('𝟫', ['sans serif nueve']);
  this.executeCharTest('𝟬', ['sans serif negrita cero']);
  this.executeCharTest('𝟭', ['sans serif negrita uno']);
  this.executeCharTest('𝟮', ['sans serif negrita dos']);
  this.executeCharTest('𝟯', ['sans serif negrita tres']);
  this.executeCharTest('𝟰', ['sans serif negrita cuatro']);
  this.executeCharTest('𝟱', ['sans serif negrita cinco']);
  this.executeCharTest('𝟲', ['sans serif negrita seis']);
  this.executeCharTest('𝟳', ['sans serif negrita siete']);
  this.executeCharTest('𝟴', ['sans serif negrita ocho']);
  this.executeCharTest('𝟵', ['sans serif negrita nueve']);
  this.executeCharTest('𝟶', ['monoespacio cero']);
  this.executeCharTest('𝟷', ['monoespacio uno']);
  this.executeCharTest('𝟸', ['monoespacio dos']);
  this.executeCharTest('𝟹', ['monoespacio tres']);
  this.executeCharTest('𝟺', ['monoespacio cuatro']);
  this.executeCharTest('𝟻', ['monoespacio cinco']);
  this.executeCharTest('𝟼', ['monoespacio seis']);
  this.executeCharTest('𝟽', ['monoespacio siete']);
  this.executeCharTest('𝟾', ['monoespacio ocho']);
  this.executeCharTest('𝟿', ['monoespacio nueve']);
  this.executeCharTest('🄁', ['cero coma']);
  this.executeCharTest('🄂', ['uno coma']);
  this.executeCharTest('🄃', ['dos coma']);
  this.executeCharTest('🄄', ['tres coma']);
  this.executeCharTest('🄅', ['cuatro coma']);
  this.executeCharTest('🄆', ['cinco coma']);
  this.executeCharTest('🄇', ['seis coma']);
  this.executeCharTest('🄈', ['siete coma']);
  this.executeCharTest('🄉', ['ocho coma']);
  this.executeCharTest('🄊', ['nueve coma']);
  this.executeCharTest('Ⓐ', ['mayúscula A en circulo']);
  this.executeCharTest('Ⓑ', ['mayúscula B en circulo']);
  this.executeCharTest('Ⓒ', ['mayúscula C en circulo']);
  this.executeCharTest('Ⓓ', ['mayúscula D en circulo']);
  this.executeCharTest('Ⓔ', ['mayúscula E en circulo']);
  this.executeCharTest('Ⓕ', ['mayúscula F en circulo']);
  this.executeCharTest('Ⓖ', ['mayúscula G en circulo']);
  this.executeCharTest('Ⓗ', ['mayúscula H en circulo']);
  this.executeCharTest('Ⓘ', ['mayúscula I en circulo']);
  this.executeCharTest('Ⓙ', ['mayúscula J en circulo']);
  this.executeCharTest('Ⓚ', ['mayúscula K en circulo']);
  this.executeCharTest('Ⓛ', ['mayúscula L en circulo']);
  this.executeCharTest('Ⓜ', ['mayúscula M en circulo']);
  this.executeCharTest('Ⓝ', ['mayúscula N en circulo']);
  this.executeCharTest('Ⓞ', ['mayúscula O en circulo']);
  this.executeCharTest('Ⓟ', ['mayúscula P en circulo']);
  this.executeCharTest('Ⓠ', ['mayúscula Q en circulo']);
  this.executeCharTest('Ⓡ', ['mayúscula R en circulo']);
  this.executeCharTest('Ⓢ', ['mayúscula S en circulo']);
  this.executeCharTest('Ⓣ', ['mayúscula T en circulo']);
  this.executeCharTest('Ⓤ', ['mayúscula U en circulo']);
  this.executeCharTest('Ⓥ', ['mayúscula V en circulo']);
  this.executeCharTest('Ⓦ', ['mayúscula W en circulo']);
  this.executeCharTest('Ⓧ', ['mayúscula X en circulo']);
  this.executeCharTest('Ⓨ', ['mayúscula Y en circulo']);
  this.executeCharTest('Ⓩ', ['mayúscula Z en circulo']);
  this.executeCharTest('ⓐ', ['a en circulo']);
  this.executeCharTest('ⓑ', ['b en circulo']);
  this.executeCharTest('ⓒ', ['c en circulo']);
  this.executeCharTest('ⓓ', ['d en circulo']);
  this.executeCharTest('ⓔ', ['e en circulo']);
  this.executeCharTest('ⓕ', ['f en circulo']);
  this.executeCharTest('ⓖ', ['g en circulo']);
  this.executeCharTest('ⓗ', ['h en circulo']);
  this.executeCharTest('ⓘ', ['i en circulo']);
  this.executeCharTest('ⓙ', ['j en circulo']);
  this.executeCharTest('ⓚ', ['k en circulo']);
  this.executeCharTest('ⓛ', ['l en circulo']);
  this.executeCharTest('ⓜ', ['m en circulo']);
  this.executeCharTest('ⓝ', ['n en circulo']);
  this.executeCharTest('ⓞ', ['o en circulo']);
  this.executeCharTest('ⓟ', ['p en circulo']);
  this.executeCharTest('ⓠ', ['q en circulo']);
  this.executeCharTest('ⓡ', ['r en circulo']);
  this.executeCharTest('ⓢ', ['s en circulo']);
  this.executeCharTest('ⓣ', ['t en circulo']);
  this.executeCharTest('ⓤ', ['u en circulo']);
  this.executeCharTest('ⓥ', ['v en circulo']);
  this.executeCharTest('ⓦ', ['w en circulo']);
  this.executeCharTest('ⓧ', ['x en circulo']);
  this.executeCharTest('ⓨ', ['y en circulo']);
  this.executeCharTest('ⓩ', ['z en circulo']);
  this.executeCharTest('🄐', ['mayúscula A entre paréntesis']);
  this.executeCharTest('🄑', ['mayúscula B entre paréntesis']);
  this.executeCharTest('🄒', ['mayúscula C entre paréntesis']);
  this.executeCharTest('🄓', ['mayúscula D entre paréntesis']);
  this.executeCharTest('🄔', ['mayúscula E entre paréntesis']);
  this.executeCharTest('🄕', ['mayúscula F entre paréntesis']);
  this.executeCharTest('🄖', ['mayúscula G entre paréntesis']);
  this.executeCharTest('🄗', ['mayúscula H entre paréntesis']);
  this.executeCharTest('🄘', ['mayúscula I entre paréntesis']);
  this.executeCharTest('🄙', ['mayúscula J entre paréntesis']);
  this.executeCharTest('🄚', ['mayúscula K entre paréntesis']);
  this.executeCharTest('🄛', ['mayúscula L entre paréntesis']);
  this.executeCharTest('🄜', ['mayúscula M entre paréntesis']);
  this.executeCharTest('🄝', ['mayúscula N entre paréntesis']);
  this.executeCharTest('🄞', ['mayúscula O entre paréntesis']);
  this.executeCharTest('🄟', ['mayúscula P entre paréntesis']);
  this.executeCharTest('🄠', ['mayúscula Q entre paréntesis']);
  this.executeCharTest('🄡', ['mayúscula R entre paréntesis']);
  this.executeCharTest('🄢', ['mayúscula S entre paréntesis']);
  this.executeCharTest('🄣', ['mayúscula T entre paréntesis']);
  this.executeCharTest('🄤', ['mayúscula U entre paréntesis']);
  this.executeCharTest('🄥', ['mayúscula V entre paréntesis']);
  this.executeCharTest('🄦', ['mayúscula W entre paréntesis']);
  this.executeCharTest('🄧', ['mayúscula X entre paréntesis']);
  this.executeCharTest('🄨', ['mayúscula Y entre paréntesis']);
  this.executeCharTest('🄩', ['mayúscula Z entre paréntesis']);
  this.executeCharTest('⒜', ['a entre paréntesis']);
  this.executeCharTest('⒝', ['b entre paréntesis']);
  this.executeCharTest('⒞', ['c entre paréntesis']);
  this.executeCharTest('⒟', ['d entre paréntesis']);
  this.executeCharTest('⒠', ['e entre paréntesis']);
  this.executeCharTest('⒡', ['f entre paréntesis']);
  this.executeCharTest('⒢', ['g entre paréntesis']);
  this.executeCharTest('⒣', ['h entre paréntesis']);
  this.executeCharTest('⒤', ['i entre paréntesis']);
  this.executeCharTest('⒥', ['j entre paréntesis']);
  this.executeCharTest('⒦', ['k entre paréntesis']);
  this.executeCharTest('⒧', ['l entre paréntesis']);
  this.executeCharTest('⒨', ['m entre paréntesis']);
  this.executeCharTest('⒩', ['n entre paréntesis']);
  this.executeCharTest('⒪', ['o entre paréntesis']);
  this.executeCharTest('⒫', ['p entre paréntesis']);
  this.executeCharTest('⒬', ['q entre paréntesis']);
  this.executeCharTest('⒭', ['r entre paréntesis']);
  this.executeCharTest('⒮', ['s entre paréntesis']);
  this.executeCharTest('⒯', ['t entre paréntesis']);
  this.executeCharTest('⒰', ['u entre paréntesis']);
  this.executeCharTest('⒱', ['v entre paréntesis']);
  this.executeCharTest('⒲', ['w entre paréntesis']);
  this.executeCharTest('⒳', ['x entre paréntesis']);
  this.executeCharTest('⒴', ['y entre paréntesis']);
  this.executeCharTest('⒵', ['z entre paréntesis']);
  this.executeCharTest('🄰', ['mayúscula A en cuadrado']);
  this.executeCharTest('🄱', ['mayúscula B en cuadrado']);
  this.executeCharTest('🄲', ['mayúscula C en cuadrado']);
  this.executeCharTest('🄳', ['mayúscula D en cuadrado']);
  this.executeCharTest('🄴', ['mayúscula E en cuadrado']);
  this.executeCharTest('🄵', ['mayúscula F en cuadrado']);
  this.executeCharTest('🄶', ['mayúscula G en cuadrado']);
  this.executeCharTest('🄷', ['mayúscula H en cuadrado']);
  this.executeCharTest('🄸', ['mayúscula I en cuadrado']);
  this.executeCharTest('🄹', ['mayúscula J en cuadrado']);
  this.executeCharTest('🄺', ['mayúscula K en cuadrado']);
  this.executeCharTest('🄻', ['mayúscula L en cuadrado']);
  this.executeCharTest('🄼', ['mayúscula M en cuadrado']);
  this.executeCharTest('🄽', ['mayúscula N en cuadrado']);
  this.executeCharTest('🄾', ['mayúscula O en cuadrado']);
  this.executeCharTest('🄿', ['mayúscula P en cuadrado']);
  this.executeCharTest('🅀', ['mayúscula Q en cuadrado']);
  this.executeCharTest('🅁', ['mayúscula R en cuadrado']);
  this.executeCharTest('🅂', ['mayúscula S en cuadrado']);
  this.executeCharTest('🅃', ['mayúscula T en cuadrado']);
  this.executeCharTest('🅄', ['mayúscula U en cuadrado']);
  this.executeCharTest('🅅', ['mayúscula V en cuadrado']);
  this.executeCharTest('🅆', ['mayúscula W en cuadrado']);
  this.executeCharTest('🅇', ['mayúscula X en cuadrado']);
  this.executeCharTest('🅈', ['mayúscula Y en cuadrado']);
  this.executeCharTest('🅉', ['mayúscula Z en cuadrado']);
  this.executeCharTest('🅰', ['mayúscula A en cuadrado negro']);
  this.executeCharTest('🅱', ['mayúscula B en cuadrado negro']);
  this.executeCharTest('🅲', ['mayúscula C en cuadrado negro']);
  this.executeCharTest('🅳', ['mayúscula D en cuadrado negro']);
  this.executeCharTest('🅴', ['mayúscula E en cuadrado negro']);
  this.executeCharTest('🅵', ['mayúscula F en cuadrado negro']);
  this.executeCharTest('🅶', ['mayúscula G en cuadrado negro']);
  this.executeCharTest('🅷', ['mayúscula H en cuadrado negro']);
  this.executeCharTest('🅸', ['mayúscula I en cuadrado negro']);
  this.executeCharTest('🅹', ['mayúscula J en cuadrado negro']);
  this.executeCharTest('🅺', ['mayúscula K en cuadrado negro']);
  this.executeCharTest('🅻', ['mayúscula L en cuadrado negro']);
  this.executeCharTest('🅼', ['mayúscula M en cuadrado negro']);
  this.executeCharTest('🅽', ['mayúscula N en cuadrado negro']);
  this.executeCharTest('🅾', ['mayúscula O en cuadrado negro']);
  this.executeCharTest('🅿', ['mayúscula P en cuadrado negro']);
  this.executeCharTest('🆀', ['mayúscula Q en cuadrado negro']);
  this.executeCharTest('🆁', ['mayúscula R en cuadrado negro']);
  this.executeCharTest('🆂', ['mayúscula S en cuadrado negro']);
  this.executeCharTest('🆃', ['mayúscula T en cuadrado negro']);
  this.executeCharTest('🆄', ['mayúscula U en cuadrado negro']);
  this.executeCharTest('🆅', ['mayúscula V en cuadrado negro']);
  this.executeCharTest('🆆', ['mayúscula W en cuadrado negro']);
  this.executeCharTest('🆇', ['mayúscula X en cuadrado negro']);
  this.executeCharTest('🆈', ['mayúscula Y en cuadrado negro']);
  this.executeCharTest('🆉', ['mayúscula Z en cuadrado negro']);
  this.executeCharTest('🅐', ['mayúscula A en circulo negro']);
  this.executeCharTest('🅑', ['mayúscula B en circulo negro']);
  this.executeCharTest('🅒', ['mayúscula C en circulo negro']);
  this.executeCharTest('🅓', ['mayúscula D en circulo negro']);
  this.executeCharTest('🅔', ['mayúscula E en circulo negro']);
  this.executeCharTest('🅕', ['mayúscula F en circulo negro']);
  this.executeCharTest('🅖', ['mayúscula G en circulo negro']);
  this.executeCharTest('🅗', ['mayúscula H en circulo negro']);
  this.executeCharTest('🅘', ['mayúscula I en circulo negro']);
  this.executeCharTest('🅙', ['mayúscula J en circulo negro']);
  this.executeCharTest('🅚', ['mayúscula K en circulo negro']);
  this.executeCharTest('🅛', ['mayúscula L en circulo negro']);
  this.executeCharTest('🅜', ['mayúscula M en circulo negro']);
  this.executeCharTest('🅝', ['mayúscula N en circulo negro']);
  this.executeCharTest('🅞', ['mayúscula O en circulo negro']);
  this.executeCharTest('🅟', ['mayúscula P en circulo negro']);
  this.executeCharTest('🅠', ['mayúscula Q en circulo negro']);
  this.executeCharTest('🅡', ['mayúscula R en circulo negro']);
  this.executeCharTest('🅢', ['mayúscula S en circulo negro']);
  this.executeCharTest('🅣', ['mayúscula T en circulo negro']);
  this.executeCharTest('🅤', ['mayúscula U en circulo negro']);
  this.executeCharTest('🅥', ['mayúscula V en circulo negro']);
  this.executeCharTest('🅦', ['mayúscula W en circulo negro']);
  this.executeCharTest('🅧', ['mayúscula X en circulo negro']);
  this.executeCharTest('🅨', ['mayúscula Y en circulo negro']);
  this.executeCharTest('🅩', ['mayúscula Z en circulo negro']);
  this.executeCharTest('ᴦ', ['pequeño mayúscula gamma']);
  this.executeCharTest('ᴧ', ['pequeña mayúscula lamda']);
  this.executeCharTest('ᴨ', ['pequeña mayúscula Pi']);
  this.executeCharTest('ᴩ', ['pequeña mayúscula Rho']);
  this.executeCharTest('ᴪ', ['pequeña mayúscula Psi']);
  this.executeCharTest('ᵞ', ['modificador de pequeño gamma']);
  this.executeCharTest('ᵠ', ['modificador de pequeño phi']);
  this.executeCharTest('ᵦ', ['subscripción pequeña beta']);
  this.executeCharTest('ᵧ', ['subíndice pequeña gamma']);
  this.executeCharTest('ᵨ', ['subíndice rho']);
  this.executeCharTest('ᵩ', ['subíndice phi']);
  this.executeCharTest('ᵪ', ['subscripción chi']);
  this.executeCharTest('ϐ', ['símbolo beta']);
  this.executeCharTest('ϗ', ['símbolo kai griego']);
  this.executeCharTest('϶', ['épsilon invertido']);
  this.executeCharTest('𝟊', ['Matemática Bold Capital Digamma']);
  this.executeCharTest('𝟋', ['Matemática negrita pequeño digamma']);
  this.executeCharTest('ℵ', ['alef']);
  this.executeCharTest('ℶ', ['bet']);
  this.executeCharTest('ℷ', ['guímel']);
  this.executeCharTest('ℸ', ['dálet']);
  this.executeCharTest('ǖ', ['u con diéresis y macron']);
  this.executeCharTest('ǘ', ['u con diéresis y acento agudo']);
  this.executeCharTest('ǚ', ['u con diéresis y acento']);
  this.executeCharTest('ǜ', ['u con diéresis y grave']);
  this.executeCharTest('ǟ', ['a con diéresis y macron']);
  this.executeCharTest('ǡ', ['a con punto arriba y macron']);
  this.executeCharTest('ǭ', ['o con pecíolo y macron']);
  this.executeCharTest('ǻ', ['a con ring above y acento agudo']);
  this.executeCharTest('ȫ', ['o con diéresis y macron']);
  this.executeCharTest('ȭ', ['o con tilde y macron']);
  this.executeCharTest('ȱ', ['o con Dot Above y Macron']);
  this.executeCharTest('ḉ', ['c con cedilla y agudo']);
  this.executeCharTest('ḕ', ['e con macrón y grave']);
  this.executeCharTest('ḗ', ['e con macrón y agudo']);
  this.executeCharTest('ḝ', ['e con cedilla y breve']);
  this.executeCharTest('ḯ', ['i con diéresis y agudo']);
  this.executeCharTest('ḹ', ['l con punto debajo y macrón']);
  this.executeCharTest('ṍ', ['o con tilde y acute']);
  this.executeCharTest('ṏ', ['o con tilde y diéresis']);
  this.executeCharTest('ṑ', ['o con macrón y grave']);
  this.executeCharTest('ṓ', ['o con macrón y agudo']);
  this.executeCharTest('ṝ', ['r con punto debajo y macrón']);
  this.executeCharTest('ṥ', ['s con agudo y punto arriba']);
  this.executeCharTest('ṧ', ['s con carón y punto arriba']);
  this.executeCharTest('ṩ', ['s con punto debajo y punto arriba']);
  this.executeCharTest('ṹ', ['u con tilde y agudo']);
  this.executeCharTest('ṻ', ['u con macrón y diéresis']);
  this.executeCharTest('ấ', ['a con acento circunflejo y agudo']);
  this.executeCharTest('ầ', ['a con acento circunflejo y grave']);
  this.executeCharTest('ẩ', ['a con acento circunflejo y gancho arriba']);
  this.executeCharTest('ẫ', ['a con acento circunflejo y tilde']);
  this.executeCharTest('ậ', ['a con acento circunflejo y punto debajo']);
  this.executeCharTest('ắ', ['a con breve y agudo']);
  this.executeCharTest('ằ', ['a con breve y grave']);
  this.executeCharTest('ẳ', ['a con breve y gancho arriba']);
  this.executeCharTest('ẵ', ['a con breve y tilde']);
  this.executeCharTest('ặ', ['a con breve y punto debajo']);
  this.executeCharTest('ế', ['e con acento circunflejo y agudo']);
  this.executeCharTest('ề', ['e con acento circunflejo y grave']);
  this.executeCharTest('ể', ['e con acento circunflejo y gancho arriba']);
  this.executeCharTest('ễ', ['e con acento circunflejo y tilde']);
  this.executeCharTest('ệ', ['e con acento circunflejo y punto debajo']);
  this.executeCharTest('ố', ['o con acento circunflejo y agudo']);
  this.executeCharTest('ồ', ['o con acento circunflejo y grave']);
  this.executeCharTest('ổ', ['o con acento circunflejo y gancho arriba']);
  this.executeCharTest('ỗ', ['o con acento circunflejo y tilde']);
  this.executeCharTest('ộ', ['o con acento circunflejo y punto debajo']);
  this.executeCharTest('ớ', ['o with horn and acute']);
  this.executeCharTest('ờ', ['o with horn and grave']);
  this.executeCharTest('ở', ['o with horn and hook above']);
  this.executeCharTest('ỡ', ['o with horn and tilde']);
  this.executeCharTest('ợ', ['o con cuerno y punto debajo']);
  this.executeCharTest('ứ', ['u con cuerno y agudo']);
  this.executeCharTest('ừ', ['u con cuerno y grave']);
  this.executeCharTest('ử', ['u con cuerno y gancho arriba']);
  this.executeCharTest('ữ', ['u con cuerno y tilde']);
  this.executeCharTest('ự', ['u con cuerno y punto debajo']);
  this.executeCharTest('ø', ['o barrada']);
  this.executeCharTest('đ', ['d con barra']);
  this.executeCharTest('ħ', ['h con guión']);
  this.executeCharTest('ł', ['l con guión']);
  this.executeCharTest('ŧ', ['t con guión']);
  this.executeCharTest('ƀ', ['b con línea']);
  this.executeCharTest('ƛ', ['lambda tachada']);
  this.executeCharTest('ƶ', ['z con línea']);
  this.executeCharTest('ƾ', ['parada glotal invertida con línea']);
  this.executeCharTest('ǥ', ['g con línea']);
  this.executeCharTest('ǿ', ['o con línea y acento agudo']);
  this.executeCharTest('ȼ', ['c con trazo']);
  this.executeCharTest('ɇ', ['pequeña e con trazo']);
  this.executeCharTest('ɉ', ['j con trazo']);
  this.executeCharTest('ɍ', ['con trazo']);
  this.executeCharTest('ɏ', ['y con trazo']);
  this.executeCharTest('ɟ', ['pequeña sin puntos j con trazo']);
  this.executeCharTest('ɨ', ['i con trazo']);
  this.executeCharTest('ʄ', ['pequeña sin puntos j con trazo y gancho']);
  this.executeCharTest('ʡ', ['parada glotal con trazo']);
  this.executeCharTest('ʢ', ['parada invertida glotal con trazo']);
  this.executeCharTest('ᴓ', ['de lado O con trazo']);
  this.executeCharTest('ᵼ', ['iota con trazo']);
  this.executeCharTest('ᵽ', ['p con trazo']);
  this.executeCharTest('ᵿ', ['upsilon con trazo']);
  this.executeCharTest('ẜ', ['larga s con trazo diagonal']);
  this.executeCharTest('ẝ', ['pequeña s larga con trazo alto']);
  this.executeCharTest('ƍ', ['delta convertido']);
  this.executeCharTest('ẛ', ['s larga con punto arriba']);
  this.executeCharTest('ẟ', ['delta pequeña latina']);
  this.executeCharTest('ĸ', ['kra']);
  this.executeCharTest('ſ', ['s larga']);
  this.executeCharTest('ƃ', ['b con barra encima']);
  this.executeCharTest('ƅ', ['tono seis']);
  this.executeCharTest('ƈ', ['c con gancho']);
  this.executeCharTest('ƌ', ['d con barra encima']);
  this.executeCharTest('ƒ', ['f con gancho']);
  this.executeCharTest('ƕ', ['hv']);
  this.executeCharTest('ƙ', ['k con gancho']);
  this.executeCharTest('ƚ', ['l con barra']);
  this.executeCharTest('ƞ', ['n con pierna derecha larga']);
  this.executeCharTest('ơ', ['o con cuerno']);
  this.executeCharTest('ƣ', ['oi']);
  this.executeCharTest('ƥ', ['p con gancho']);
  this.executeCharTest('ƨ', ['dos tonos']);
  this.executeCharTest('ƪ', ['latin letter invertido Esh bucle']);
  this.executeCharTest('ƫ', ['t con palatal gancho']);
  this.executeCharTest('ƭ', ['t con gancho']);
  this.executeCharTest('ư', ['u con horn']);
  this.executeCharTest('ƴ', ['y con gancho']);
  this.executeCharTest('ƹ', ['ezh invertido']);
  this.executeCharTest('ƺ', ['ezh con cola']);
  this.executeCharTest('ƽ', ['tono cinco']);
  this.executeCharTest('ƿ', ['wynn']);
  this.executeCharTest('ǆ', ['dz con acento']);
  this.executeCharTest('ǉ', ['lj']);
  this.executeCharTest('ǌ', ['nj']);
  this.executeCharTest('ǣ', ['ae con macron']);
  this.executeCharTest('ǯ', ['ezh con acento']);
  this.executeCharTest('ǳ', ['dz']);
  this.executeCharTest('ȝ', ['latín letra pequeña yogh']);
  this.executeCharTest('ɮ', ['lezh letra pequeña latina']);
  this.executeCharTest('ʒ', ['ezh']);
  this.executeCharTest('ʓ', ['pequeña Ezh con Curl']);
  this.executeCharTest('ʤ', ['latín letra pequeña Dezh Digraph']);
  this.executeCharTest('ǝ', ['e convertido']);
  this.executeCharTest('ǽ', ['ae con acento agudo']);
  this.executeCharTest('ȡ', ['d con rizo']);
  this.executeCharTest('ȣ', ['ou']);
  this.executeCharTest('ȥ', ['z con gancho']);
  this.executeCharTest('ȴ', ['l con rizo']);
  this.executeCharTest('ȵ', ['n con rizo']);
  this.executeCharTest('ȶ', ['t con rizo']);
  this.executeCharTest('ȸ', ['letra pequeña latina db digraph']);
  this.executeCharTest('ȹ', ['latín letra pequeña Qp Digraph']);
  this.executeCharTest('ȿ', ['s con cola cruzada']);
  this.executeCharTest('ɀ', ['z con cola swash']);
  this.executeCharTest('ɂ', ['latín letra pequeña parada glotal']);
  this.executeCharTest('ɋ', ['q con cola de gancho']);
  this.executeCharTest('ɐ', ['convertida en una']);
  this.executeCharTest('ɑ', ['alfa minúscula latina']);
  this.executeCharTest('ɒ', ['convertida en alfa']);
  this.executeCharTest('ɓ', ['b con gancho']);
  this.executeCharTest('ɔ', ['abierta o']);
  this.executeCharTest('ɕ', ['c con rizo']);
  this.executeCharTest('ɖ', ['d con cola']);
  this.executeCharTest('ɗ', ['d con gancho']);
  this.executeCharTest('ɘ', ['invertida E']);
  this.executeCharTest('ə', ['schwa']);
  this.executeCharTest('ɚ', ['pequeña Schwa con gancho']);
  this.executeCharTest('ɛ', ['e abierta']);
  this.executeCharTest('ɜ', ['invertida abierta E']);
  this.executeCharTest('ɝ', ['letra pequeña latina invertida E abierta con gancho']);
  this.executeCharTest('ɞ', ['cerrada invertida abierta E']);
  this.executeCharTest('ɠ', ['g con gancho']);
  this.executeCharTest('ɡ', ['escritura latina de letras pequeñas G']);
  this.executeCharTest('ɣ', ['latín letra pequeña gamma']);
  this.executeCharTest('ɤ', ['cuerno de carnero de letra pequeña latina']);
  this.executeCharTest('ɥ', ['girada h']);
  this.executeCharTest('ɦ', ['h con gancho']);
  this.executeCharTest('ɧ', ['pequeña letra latina Heng con gancho']);
  this.executeCharTest('ɩ', ['latín letra minúscula Iota']);
  this.executeCharTest('ɫ', ['l con tilde medio']);
  this.executeCharTest('ɬ', ['l con cinturón']);
  this.executeCharTest('ɭ', ['letra L latina pequeña con gancho Retroflex']);
  this.executeCharTest('ɯ', ['girada m']);
  this.executeCharTest('ɰ', ['vuelta M con pierna larga']);
  this.executeCharTest('ɱ', ['m con gancho']);
  this.executeCharTest('ɲ', ['n con gancho izquierdo']);
  this.executeCharTest('ɳ', ['n con gancho retroflex']);
  this.executeCharTest('ɵ', ['letra minúscula omega']);
  this.executeCharTest('ɷ', ['latin Small Letter Closed Omega']);
  this.executeCharTest('ɸ', ['Letra pequeña latina']);
  this.executeCharTest('ɹ', ['vuelta r']);
  this.executeCharTest('ɺ', ['vuelta R con pierna larga']);
  this.executeCharTest('ɻ', ['vuelta R con gancho']);
  this.executeCharTest('ɼ', ['R con pierna larga']);
  this.executeCharTest('ɽ', ['R con cola']);
  this.executeCharTest('ɾ', ['R con anzuelo']);
  this.executeCharTest('ɿ', ['invertida R con anzuelo']);
  this.executeCharTest('ʂ', ['S con gancho']);
  this.executeCharTest('ʃ', ['Pequeña letra latina esh']);
  this.executeCharTest('ʅ', ['Latín letra pequeña en cuclillas invertida Esh']);
  this.executeCharTest('ʆ', ['Esh minúscula latina con rizo']);
  this.executeCharTest('ʇ', ['vuelta t']);
  this.executeCharTest('ʈ', ['T con gancho retroflex']);
  this.executeCharTest('ʉ', ['Letra de letra pequeña latina U']);
  this.executeCharTest('ʊ', ['Upsilon']);
  this.executeCharTest('ʋ', ['V con gancho']);
  this.executeCharTest('ʌ', ['convertida V']);
  this.executeCharTest('ʍ', ['girada w']);
  this.executeCharTest('ʎ', ['vuelta y']);
  this.executeCharTest('ʐ', ['Z con gancho retroflex']);
  this.executeCharTest('ʑ', ['z con rizo']);
  this.executeCharTest('ʕ', ['faríngea con voz fricativa']);
  this.executeCharTest('ʖ', ['invertida parada glotal']);
  this.executeCharTest('ʗ', ['estirada c']);
  this.executeCharTest('ʘ', ['Carta Bilabial Click']);
  this.executeCharTest('ʚ', ['cerrada abierta e']);
  this.executeCharTest('ʞ', ['vuelta k']);
  this.executeCharTest('ʠ', ['q con gancho']);
  this.executeCharTest('ʣ', ['pequeña letra Dz Digraph']);
  this.executeCharTest('ʥ', ['Letra pequeña latina Dz Digraph con Curl']);
  this.executeCharTest('ʦ', ['Latín letra pequeña Ts Digraph']);
  this.executeCharTest('ʧ', ['Letra pequeña latina Tesh Digraph']);
  this.executeCharTest('ʨ', ['Latín letra pequeña Tc Digraph con Curl']);
  this.executeCharTest('ʩ', ['Letra pequeña latina Feng Digraph']);
  this.executeCharTest('ʪ', ['pequeña letra Ls Digraph']);
  this.executeCharTest('ʫ', ['pequeña letra Lz Digraph']);
  this.executeCharTest('ʬ', ['percusion bilabial']);
  this.executeCharTest('ʭ', ['de percusión bidental']);
  this.executeCharTest('ʮ', ['convertida en H con anzuelo']);
  this.executeCharTest('ʯ', ['convertida en H con anzuelo y cola']);
  this.executeCharTest('ᴂ', ['vuelta ae']);
  this.executeCharTest('ᴈ', ['convertida abierta E']);
  this.executeCharTest('ᴉ', ['convertida i']);
  this.executeCharTest('ᴑ', ['de lado O']);
  this.executeCharTest('ᴒ', ['de lado abierto O']);
  this.executeCharTest('ᴔ', ['vuelta oe']);
  this.executeCharTest('ᴖ', ['mitad superior O']);
  this.executeCharTest('ᴗ', ['Letra latina, letra inferior, mitad inferior O']);
  this.executeCharTest('ᴝ', ['hacia los lados U']);
  this.executeCharTest('ᴞ', ['de lado diaeresizada U']);
  this.executeCharTest('ᴟ', ['girada hacia los lados M']);
  this.executeCharTest('ᴤ', ['Carta latina expresada espirante laríngeo']);
  this.executeCharTest('ᴥ', ['ain']);
  this.executeCharTest('ᵫ', ['ue']);
  this.executeCharTest('ᵬ', ['B con tilde medio']);
  this.executeCharTest('ᵭ', ['D con tilde medio']);
  this.executeCharTest('ᵮ', ['F con tilde medio']);
  this.executeCharTest('ᵯ', ['M con tilde medio']);
  this.executeCharTest('ᵰ', ['N con tilde medio']);
  this.executeCharTest('ᵱ', ['P con tilde medio']);
  this.executeCharTest('ᵲ', ['R con tilde medio']);
  this.executeCharTest('ᵳ', ['R con anzuelo y tilde medio']);
  this.executeCharTest('ᵴ', ['S con tilde medio']);
  this.executeCharTest('ᵵ', ['T con tilde medio']);
  this.executeCharTest('ᵶ', ['z con tilde media']);
  this.executeCharTest('ᵷ', ['girada g']);
  this.executeCharTest('ᵹ', ['insular g']);
  this.executeCharTest('ᵺ', ['th con tachado']);
  this.executeCharTest('ᶀ', ['B con gancho palatal']);
  this.executeCharTest('ᶁ', ['D con gancho palatal']);
  this.executeCharTest('ᶂ', ['F con gancho palatino']);
  this.executeCharTest('ᶃ', ['G con gancho palatal']);
  this.executeCharTest('ᶄ', ['K con gancho palatino']);
  this.executeCharTest('ᶅ', ['L con gancho palatino']);
  this.executeCharTest('ᶆ', ['M con gancho palatino']);
  this.executeCharTest('ᶇ', ['N con gancho palatal']);
  this.executeCharTest('ᶈ', ['P con gancho palatino']);
  this.executeCharTest('ᶉ', ['R con gancho palatal']);
  this.executeCharTest('ᶊ', ['S con gancho palatal']);
  this.executeCharTest('ᶋ', ['Pequeña letra latina Esh con gancho palatal']);
  this.executeCharTest('ᶌ', ['V con gancho palatal']);
  this.executeCharTest('ᶍ', ['X con gancho palatal']);
  this.executeCharTest('ᶎ', ['Z con gancho palatal']);
  this.executeCharTest('ᶏ', ['a con gancho retroflex']);
  this.executeCharTest('ᶐ', ['Alfa latina pequeña letra con gancho retroflex']);
  this.executeCharTest('ᶑ', ['D con gancho y cola']);
  this.executeCharTest('ᶒ', ['pequeña E con gancho retroflex']);
  this.executeCharTest('ᶓ', ['E Pequeña Open con Gancho Retroflex']);
  this.executeCharTest('ᶔ', ['E abierta invertido con gancho retroflex']);
  this.executeCharTest('ᶕ', ['pequeña Schwa con gancho retroflex']);
  this.executeCharTest('ᶖ', ['I con gancho retroflex']);
  this.executeCharTest('ᶗ', ['pequeña latina Open O con gancho retroflex']);
  this.executeCharTest('ᶘ', ['Esh de letra pequeña latina con gancho retroflex']);
  this.executeCharTest('ᶙ', ['U con gancho retroflex']);
  this.executeCharTest('ᶚ', ['pequeña Ezh con gancho retroflex']);
  this.executeCharTest('ŉ', ['n precedida por apóstrofe']);
  this.executeCharTest('ŋ', ['eng']);
  this.executeCharTest('à', ['a grave']);
  this.executeCharTest('á', ['a aguda']);
  this.executeCharTest('â', ['a acento circunflejo']);
  this.executeCharTest('ã', ['a con tilde']);
  this.executeCharTest('ä', ['a diéresis']);
  this.executeCharTest('å', ['a con anillo']);
  this.executeCharTest('ç', ['c cedilla']);
  this.executeCharTest('è', ['e grave']);
  this.executeCharTest('é', ['e aguda']);
  this.executeCharTest('ê', ['e acento circunflejo']);
  this.executeCharTest('ë', ['e diéresis']);
  this.executeCharTest('ì', ['i grave']);
  this.executeCharTest('í', ['i aguda']);
  this.executeCharTest('î', ['i acento circunflejo']);
  this.executeCharTest('ï', ['i diéresis']);
  this.executeCharTest('ñ', ['eñe']);
  this.executeCharTest('ò', ['o grave']);
  this.executeCharTest('ó', ['o aguda']);
  this.executeCharTest('ô', ['o acento circunflejo']);
  this.executeCharTest('õ', ['o con tilde']);
  this.executeCharTest('ö', ['o diéresis']);
  this.executeCharTest('ù', ['u grave']);
  this.executeCharTest('ú', ['u aguda']);
  this.executeCharTest('û', ['u acento circunflejo']);
  this.executeCharTest('ü', ['u diéresis']);
  this.executeCharTest('ý', ['Y aguda']);
  this.executeCharTest('ÿ', ['y diéresis']);
  this.executeCharTest('ā', ['a barra']);
  this.executeCharTest('ă', ['a con breve']);
  this.executeCharTest('ą', ['a con ogonek']);
  this.executeCharTest('ć', ['c con agudo']);
  this.executeCharTest('ĉ', ['c con acento circunflejo']);
  this.executeCharTest('ċ', ['c con punto arriba']);
  this.executeCharTest('č', ['c con carón']);
  this.executeCharTest('ď', ['d con carón']);
  this.executeCharTest('ē', ['e barra']);
  this.executeCharTest('ĕ', ['e con breve']);
  this.executeCharTest('ė', ['e con punto arriba']);
  this.executeCharTest('ę', ['e con ogonek']);
  this.executeCharTest('ě', ['e con carón']);
  this.executeCharTest('ĝ', ['g con acento circunflejo']);
  this.executeCharTest('ğ', ['g con breve']);
  this.executeCharTest('ġ', ['g con punto arriba']);
  this.executeCharTest('ģ', ['g con cedilla']);
  this.executeCharTest('ĥ', ['h con acento circunflejo']);
  this.executeCharTest('ĩ', ['i con tilde']);
  this.executeCharTest('ī', ['i barra']);
  this.executeCharTest('ĭ', ['i con breve']);
  this.executeCharTest('į', ['i con ogonek']);
  this.executeCharTest('ı', ['i sin punto']);
  this.executeCharTest('ĵ', ['j con acento circunflejo']);
  this.executeCharTest('ķ', ['k con cedilla']);
  this.executeCharTest('ĺ', ['l con agudo']);
  this.executeCharTest('ļ', ['l con cedilla']);
  this.executeCharTest('ľ', ['l con carón']);
  this.executeCharTest('ŀ', ['l con punto mediano']);
  this.executeCharTest('ń', ['n con agudo']);
  this.executeCharTest('ņ', ['n con cedilla']);
  this.executeCharTest('ň', ['n con carón']);
  this.executeCharTest('ō', ['o barra']);
  this.executeCharTest('ŏ', ['o con breve']);
  this.executeCharTest('ő', ['o con doble acento agudo']);
  this.executeCharTest('ŕ', ['r con agudo']);
  this.executeCharTest('ŗ', ['r con cedilla']);
  this.executeCharTest('ř', ['r con carón']);
  this.executeCharTest('ś', ['s con agudo']);
  this.executeCharTest('ŝ', ['s con acento circunflejo']);
  this.executeCharTest('ş', ['s con cedilla']);
  this.executeCharTest('š', ['s con carón']);
  this.executeCharTest('ţ', ['t con cedilla']);
  this.executeCharTest('ť', ['t con carón']);
  this.executeCharTest('ũ', ['u con tilde']);
  this.executeCharTest('ū', ['u barra']);
  this.executeCharTest('ŭ', ['u con breve']);
  this.executeCharTest('ů', ['u con anillo arriba']);
  this.executeCharTest('ű', ['u con doble acento agudo']);
  this.executeCharTest('ų', ['u con ogonek']);
  this.executeCharTest('ŵ', ['w con circunflejo']);
  this.executeCharTest('ŷ', ['y con circunflejo']);
  this.executeCharTest('ź', ['z con agudo']);
  this.executeCharTest('ż', ['z con punto']);
  this.executeCharTest('ž', ['z con carón']);
  this.executeCharTest('ǎ', ['a con acento']);
  this.executeCharTest('ǐ', ['i con acento']);
  this.executeCharTest('ǒ', ['o con acento']);
  this.executeCharTest('ǔ', ['u con acento']);
  this.executeCharTest('ǧ', ['g con acento']);
  this.executeCharTest('ǩ', ['k con acento']);
  this.executeCharTest('ǫ', ['o con pecíolo']);
  this.executeCharTest('ǰ', ['j con acento']);
  this.executeCharTest('ǵ', ['g con agudo']);
  this.executeCharTest('ǹ', ['n con grave']);
  this.executeCharTest('ȁ', ['a con doble tumba']);
  this.executeCharTest('ȃ', ['a con letras invertidas']);
  this.executeCharTest('ȅ', ['e con doble tumba']);
  this.executeCharTest('ȇ', ['e con letras invertidas']);
  this.executeCharTest('ȉ', ['i con doble tumba']);
  this.executeCharTest('ȋ', ['i con Breve invertida']);
  this.executeCharTest('ȍ', ['o con doble tumba']);
  this.executeCharTest('ȏ', ['o con letras invertidas']);
  this.executeCharTest('ȑ', ['r con doble sepulcro']);
  this.executeCharTest('ȓ', ['r con letras invertidas']);
  this.executeCharTest('ȕ', ['u con doble tumba']);
  this.executeCharTest('ȗ', ['u con letras invertidas']);
  this.executeCharTest('ș', ['s con coma debajo']);
  this.executeCharTest('ț', ['t con coma debajo']);
  this.executeCharTest('ȟ', ['h con caron']);
  this.executeCharTest('ȧ', ['con un punto arriba']);
  this.executeCharTest('ȩ', ['e con cedilla']);
  this.executeCharTest('ȯ', ['o con punto arriba']);
  this.executeCharTest('ȳ', ['y con Macron']);
  this.executeCharTest('ȷ', ['s in punto j']);
  this.executeCharTest('ḁ', ['a con anillo debajo']);
  this.executeCharTest('ḃ', ['b con punto arriba']);
  this.executeCharTest('ḅ', ['b con punto debajo']);
  this.executeCharTest('ḇ', ['b con línea debajo']);
  this.executeCharTest('ḋ', ['d con punto arriba']);
  this.executeCharTest('ḍ', ['d con punto debajo']);
  this.executeCharTest('ḏ', ['d con línea debajo']);
  this.executeCharTest('ḑ', ['d con cedilla']);
  this.executeCharTest('ḓ', ['d con acento circunflejo debajo']);
  this.executeCharTest('ḙ', ['e con acento circunflejo debajo']);
  this.executeCharTest('ḛ', ['e con tilde debajo']);
  this.executeCharTest('ḟ', ['f con punto arriba']);
  this.executeCharTest('ḡ', ['g con macrón']);
  this.executeCharTest('ḣ', ['h con punto arriba']);
  this.executeCharTest('ḥ', ['h con punto debajo']);
  this.executeCharTest('ḧ', ['h con diéresis']);
  this.executeCharTest('ḩ', ['h con cedilla']);
  this.executeCharTest('ḫ', ['h con breve debajo']);
  this.executeCharTest('ḭ', ['i con tilde debajo']);
  this.executeCharTest('ḱ', ['k con agudo']);
  this.executeCharTest('ḳ', ['k con punto debajo']);
  this.executeCharTest('ḵ', ['k con línea debajo']);
  this.executeCharTest('ḷ', ['l con punto debajo']);
  this.executeCharTest('ḻ', ['l con línea debajo']);
  this.executeCharTest('ḽ', ['l con acento circunflejo debajo']);
  this.executeCharTest('ḿ', ['m con agudo']);
  this.executeCharTest('ṁ', ['m con punto arriba']);
  this.executeCharTest('ṃ', ['m con punto debajo']);
  this.executeCharTest('ṅ', ['n con punto arriba']);
  this.executeCharTest('ṇ', ['n con punto debajo']);
  this.executeCharTest('ṉ', ['n con línea debajo']);
  this.executeCharTest('ṋ', ['n con acento circunflejo debajo']);
  this.executeCharTest('ṕ', ['p con agudo']);
  this.executeCharTest('ṗ', ['p con punto arriba']);
  this.executeCharTest('ṙ', ['r con punto arriba']);
  this.executeCharTest('ṛ', ['r con punto debajo']);
  this.executeCharTest('ṟ', ['r con línea debajo']);
  this.executeCharTest('ṡ', ['s con punto arriba']);
  this.executeCharTest('ṣ', ['s con punto debajo']);
  this.executeCharTest('ṫ', ['t con punto arriba']);
  this.executeCharTest('ṭ', ['t con punto debajo']);
  this.executeCharTest('ṯ', ['t con línea debajo']);
  this.executeCharTest('ṱ', ['t con acento circunflejo debajo']);
  this.executeCharTest('ṳ', ['u con diéresis debajo']);
  this.executeCharTest('ṵ', ['u con tilde debajo']);
  this.executeCharTest('ṷ', ['u con acento circunflejo debajo']);
  this.executeCharTest('ṽ', ['v con tilde']);
  this.executeCharTest('ṿ', ['v con punto debajo']);
  this.executeCharTest('ẁ', ['w con grave']);
  this.executeCharTest('ẃ', ['w con agudo']);
  this.executeCharTest('ẅ', ['w con diéresis']);
  this.executeCharTest('ẇ', ['w con punto arriba']);
  this.executeCharTest('ẉ', ['w con punto debajo']);
  this.executeCharTest('ẋ', ['x con punto arriba']);
  this.executeCharTest('ẍ', ['x con diéresis']);
  this.executeCharTest('ẏ', ['y con punto arriba']);
  this.executeCharTest('ẑ', ['z con acento circunflejo']);
  this.executeCharTest('ẓ', ['z con punto debajo']);
  this.executeCharTest('ẕ', ['z con línea debajo']);
  this.executeCharTest('ẖ', ['h con línea debajo']);
  this.executeCharTest('ẗ', ['t con diéresis']);
  this.executeCharTest('ẘ', ['w con anillo arriba']);
  this.executeCharTest('ẙ', ['y con anillo arriba']);
  this.executeCharTest('ẚ', ['a con medio derecho de anillo']);
  this.executeCharTest('ạ', ['a con punto debajo']);
  this.executeCharTest('ả', ['a con gancho arriba']);
  this.executeCharTest('ẹ', ['e con punto debajo']);
  this.executeCharTest('ẻ', ['e con gancho arriba']);
  this.executeCharTest('ẽ', ['e con tilde']);
  this.executeCharTest('ỉ', ['i con gancho arriba']);
  this.executeCharTest('ị', ['i con punto debajo']);
  this.executeCharTest('ọ', ['o con punto debajo']);
  this.executeCharTest('ỏ', ['o con gancho arriba']);
  this.executeCharTest('ụ', ['u con punto debajo']);
  this.executeCharTest('ủ', ['u con gancho arriba']);
  this.executeCharTest('ỳ', ['y con grave']);
  this.executeCharTest('ỵ', ['y con punto debajo']);
  this.executeCharTest('ỷ', ['y con gancho arriba']);
  this.executeCharTest('ỹ', ['y con tilde']);
  this.executeCharTest('ͣ', ['combinando a']);
  this.executeCharTest('ͤ', ['combinando e']);
  this.executeCharTest('ͥ', ['combinando i']);
  this.executeCharTest('ͦ', ['combinando o']);
  this.executeCharTest('ͧ', ['combinando u']);
  this.executeCharTest('ͨ', ['combinando c']);
  this.executeCharTest('ͩ', ['combinando d']);
  this.executeCharTest('ͪ', ['combinando h']);
  this.executeCharTest('ͫ', ['combinando m']);
  this.executeCharTest('ͬ', ['combinando r']);
  this.executeCharTest('ͭ', ['combinando t']);
  this.executeCharTest('ͮ', ['combinando v']);
  this.executeCharTest('ͯ', ['combinando x']);
  this.executeCharTest('ᵢ', ['subíndice i']);
  this.executeCharTest('ᵣ', ['subíndice r']);
  this.executeCharTest('ᵤ', ['subíndice u']);
  this.executeCharTest('ᵥ', ['subíndice latino letra pequeña V']);
  this.executeCharTest('᷊', ['combinando r abajo']);
  this.executeCharTest('ᷓ', ['combinando letra minúscula en latín, aplanado, abierto arriba']);
  this.executeCharTest('ᷔ', ['combinando ae']);
  this.executeCharTest('ᷕ', ['combinando ao']);
  this.executeCharTest('ᷖ', ['combinando av']);
  this.executeCharTest('ᷗ', ['combinando Letra Pequeña Latina C Cedilla']);
  this.executeCharTest('ᷘ', ['combinando insular d']);
  this.executeCharTest('ᷙ', ['combinando la eth']);
  this.executeCharTest('ᷚ', ['combinando g']);
  this.executeCharTest('ᷛ', ['combinando pequeña mayúscula G']);
  this.executeCharTest('ᷜ', ['combinando k']);
  this.executeCharTest('ᷝ', ['combinando l']);
  this.executeCharTest('ᷞ', ['combinando pequeña mayúscula L']);
  this.executeCharTest('ᷟ', ['combinando pequeña mayúscula M']);
  this.executeCharTest('ᷠ', ['combinando n']);
  this.executeCharTest('ᷡ', ['combinando pequeña mayúscula N']);
  this.executeCharTest('ᷢ', ['combinando pequeña mayúscula R']);
  this.executeCharTest('ᷣ', ['combinando pequeña r rotunda']);
  this.executeCharTest('ᷤ', ['combinando s']);
  this.executeCharTest('ᷥ', ['combinando larga s']);
  this.executeCharTest('ᷦ', ['combinando z']);
  this.executeCharTest('ⁱ', ['superíndice i']);
  this.executeCharTest('ⁿ', ['superíndice n']);
  this.executeCharTest('ₐ', ['subíndice a']);
  this.executeCharTest('ₑ', ['subíndice e']);
  this.executeCharTest('ₒ', ['subíndice o']);
  this.executeCharTest('ₓ', ['subíndice x']);
  this.executeCharTest('ₔ', ['subíndice schwa']);
  this.executeCharTest('ₕ', ['subíndice h']);
  this.executeCharTest('ₖ', ['subíndice k']);
  this.executeCharTest('ₗ', ['subíndice l']);
  this.executeCharTest('ₘ', ['subíndice m']);
  this.executeCharTest('ₙ', ['subíndice n']);
  this.executeCharTest('ₚ', ['subíndice p']);
  this.executeCharTest('ₛ', ['subíndice s']);
  this.executeCharTest('ₜ', ['subíndice t']);
  this.executeCharTest('ⱼ', ['subíndice j']);
  this.executeCharTest('🄪', ['concha de tortuga con corchetes mayúscula S']);
  this.executeCharTest('🄫', ['círculo itálico mayúscula C']);
  this.executeCharTest('🄬', ['círculo itálico mayúscula R']);
  this.executeCharTest('🆊', ['cruzada negativa cuadrada Mayúscula P']);
  this.executeCharTest('Ǖ', ['mayúscula U con diéresis y macron']);
  this.executeCharTest('Ǘ', ['mayúscula U con diéresis y acento agudo']);
  this.executeCharTest('Ǚ', ['mayúscula U con diéresis y acento']);
  this.executeCharTest('Ǜ', ['mayúscula U con diéresis y grave']);
  this.executeCharTest('Ǟ', ['mayúscula A con diéresis y macron']);
  this.executeCharTest('Ǡ', ['mayúscula A con punto arriba y macron']);
  this.executeCharTest('Ǭ', ['mayúscula O con pecíolo y macron']);
  this.executeCharTest('Ǻ', ['mayúscula A con ring above y acento agudo']);
  this.executeCharTest('Ȫ', ['mayúscula O con diaéresis y macron']);
  this.executeCharTest('Ȭ', ['mayúscula O con tilde y macron']);
  this.executeCharTest('Ȱ', ['mayúscula O con dot above y macron']);
  this.executeCharTest('Ḉ', ['mayúscula C con cedilla y agudo']);
  this.executeCharTest('Ḕ', ['mayúscula E con macrón y grave']);
  this.executeCharTest('Ḗ', ['mayúscula E con macrón y agudo']);
  this.executeCharTest('Ḝ', ['mayúscula E with cedilla and breve']);
  this.executeCharTest('Ḯ', ['mayúscula I con diéresis y agudo']);
  this.executeCharTest('Ḹ', ['mayúscula L con punto debajo y macrón']);
  this.executeCharTest('Ṍ', ['mayúscula O con tilde y acute']);
  this.executeCharTest('Ṏ', ['mayúscula O con tilde y diéresis']);
  this.executeCharTest('Ṑ', ['mayúscula O con macrón y grave']);
  this.executeCharTest('Ṓ', ['mayúscula O con macrón y agudo']);
  this.executeCharTest('Ṝ', ['mayúscula R con punto debajo y macrón']);
  this.executeCharTest('Ṥ', ['mayúscula S con agudo y punto arriba']);
  this.executeCharTest('Ṧ', ['mayúscula S con carón y punto arriba']);
  this.executeCharTest('Ṩ', ['mayúscula S con punto debajo y punto arriba']);
  this.executeCharTest('Ṹ', ['mayúscula U con tilde y agudo']);
  this.executeCharTest('Ṻ', ['mayúscula U con macrón y diéresis']);
  this.executeCharTest('Ấ', ['mayúscula A con acento circunflejo y agudo']);
  this.executeCharTest('Ầ', ['mayúscula A con acento circunflejo y grave']);
  this.executeCharTest('Ẩ', ['mayúscula A con acento circunflejo y gancho arriba']);
  this.executeCharTest('Ẫ', ['mayúscula A con acento circunflejo y tilde']);
  this.executeCharTest('Ậ', ['mayúscula A con acento circunflejo y punto debajo']);
  this.executeCharTest('Ắ', ['mayúscula A con breve y agudo']);
  this.executeCharTest('Ằ', ['mayúscula A con breve y grave']);
  this.executeCharTest('Ẳ', ['mayúscula A con breve y gancho arriba']);
  this.executeCharTest('Ẵ', ['mayúscula A con breve y tilde']);
  this.executeCharTest('Ặ', ['mayúscula A con breve y punto debajo']);
  this.executeCharTest('Ế', ['mayúscula E con acento circunflejo y agudo']);
  this.executeCharTest('Ề', ['mayúscula E con acento circunflejo y grave']);
  this.executeCharTest('Ể', ['mayúscula E con acento circunflejo y gancho arriba']);
  this.executeCharTest('Ễ', ['mayúscula E con acento circunflejo y tilde']);
  this.executeCharTest('Ệ', ['mayúscula E con acento circunflejo y punto debajo']);
  this.executeCharTest('Ố', ['mayúscula O con acento circunflejo y agudo']);
  this.executeCharTest('Ồ', ['mayúscula O con acento circunflejo y grave']);
  this.executeCharTest('Ổ', ['mayúscula O con acento circunflejo y gancho arriba']);
  this.executeCharTest('Ỗ', ['mayúscula O con acento circunflejo y tilde']);
  this.executeCharTest('Ộ', ['mayúscula O con acento circunflejo y punto debajo']);
  this.executeCharTest('Ớ', ['mayúscula O with horn and acute']);
  this.executeCharTest('Ờ', ['mayúscula O with horn and grave']);
  this.executeCharTest('Ở', ['mayúscula O with horn and hook above']);
  this.executeCharTest('Ỡ', ['mayúscula O with horn and tilde']);
  this.executeCharTest('Ợ', ['mayúscula O con cuerno y punto debajo']);
  this.executeCharTest('Ứ', ['mayúscula U con cuerno y agudo']);
  this.executeCharTest('Ừ', ['mayúscula U con cuerno y grave']);
  this.executeCharTest('Ử', ['mayúscula U con cuerno y gancho arriba']);
  this.executeCharTest('Ữ', ['mayúscula U con cuerno y tilde']);
  this.executeCharTest('Ự', ['mayúscula U con cuerno y punto debajo']);
  this.executeCharTest('À', ['mayúscula A grave']);
  this.executeCharTest('Á', ['mayúscula A aguda']);
  this.executeCharTest('Â', ['mayúscula A acento circunflejo']);
  this.executeCharTest('Ã', ['mayúscula A con tilde']);
  this.executeCharTest('Ä', ['mayúscula A diéresis']);
  this.executeCharTest('Å', ['mayúscula A con anillo']);
  this.executeCharTest('Ç', ['mayúscula C cedilla']);
  this.executeCharTest('È', ['mayúscula E grave']);
  this.executeCharTest('É', ['mayúscula E aguda']);
  this.executeCharTest('Ê', ['mayúscula E acento circunflejo']);
  this.executeCharTest('Ë', ['mayúscula E diéresis']);
  this.executeCharTest('Ì', ['mayúscula I grave']);
  this.executeCharTest('Í', ['mayúscula I aguda']);
  this.executeCharTest('Î', ['mayúscula I acento circumflejo']);
  this.executeCharTest('Ï', ['mayúscula I diéresis']);
  this.executeCharTest('Ñ', ['mayúscula Ñ']);
  this.executeCharTest('Ò', ['mayúscula O grave']);
  this.executeCharTest('Ó', ['mayúscula O aguda']);
  this.executeCharTest('Ô', ['mayúscula O acento circunflejo']);
  this.executeCharTest('Õ', ['mayúscula O con tilde']);
  this.executeCharTest('Ö', ['mayúscula O diéresis']);
  this.executeCharTest('Ù', ['mayúscula U grave']);
  this.executeCharTest('Ú', ['mayúscula U aguda']);
  this.executeCharTest('Û', ['mayúscula U acento circunflejo']);
  this.executeCharTest('Ü', ['mayúscula U diéresis']);
  this.executeCharTest('Ý', ['mayúscula Y aguda']);
  this.executeCharTest('Ā', ['mayúscula A barra']);
  this.executeCharTest('Ă', ['mayúscula A con breve']);
  this.executeCharTest('Ą', ['mayúscula A con ogonek']);
  this.executeCharTest('Ć', ['mayúscula C con agudo']);
  this.executeCharTest('Ĉ', ['mayúscula C con acento circunflejo']);
  this.executeCharTest('Ċ', ['mayúscula C con punto arriba']);
  this.executeCharTest('Č', ['mayúscula C con carón']);
  this.executeCharTest('Ď', ['mayúscula D con carón']);
  this.executeCharTest('Ē', ['mayúscula E barra']);
  this.executeCharTest('Ĕ', ['mayúscula E con breve']);
  this.executeCharTest('Ė', ['mayúscula E con punto arriba']);
  this.executeCharTest('Ę', ['mayúscula E con ogonek']);
  this.executeCharTest('Ě', ['mayúscula E con carón']);
  this.executeCharTest('Ĝ', ['mayúscula G con acento circunflejo']);
  this.executeCharTest('Ğ', ['mayúscula G con breve']);
  this.executeCharTest('Ġ', ['mayúscula G con punto arriba']);
  this.executeCharTest('Ģ', ['mayúscula G con cedilla']);
  this.executeCharTest('Ĥ', ['mayúscula H con acento circunflejo']);
  this.executeCharTest('Ĩ', ['mayúscula I con tilde']);
  this.executeCharTest('Ī', ['mayúscula I barra']);
  this.executeCharTest('Ĭ', ['mayúscula I con breve']);
  this.executeCharTest('Į', ['mayúscula I con ogonek']);
  this.executeCharTest('İ', ['mayúscula I con punto arriba']);
  this.executeCharTest('Ĵ', ['mayúscula J con acento circunflejo']);
  this.executeCharTest('Ķ', ['mayúscula K con cedilla']);
  this.executeCharTest('Ĺ', ['mayúscula L con agudo']);
  this.executeCharTest('Ļ', ['mayúscula L con cedilla']);
  this.executeCharTest('Ľ', ['mayúscula L con carón']);
  this.executeCharTest('Ŀ', ['mayúscula L con punto mediano']);
  this.executeCharTest('Ń', ['mayúscula N con agudo']);
  this.executeCharTest('Ņ', ['mayúscula N con cedilla']);
  this.executeCharTest('Ň', ['mayúscula n con carón']);
  this.executeCharTest('Ō', ['mayúscula O barra']);
  this.executeCharTest('Ŏ', ['mayúscula O con breve']);
  this.executeCharTest('Ő', ['mayúscula O con doble acento agudo ']);
  this.executeCharTest('Ŕ', ['mayúscula R con agudo']);
  this.executeCharTest('Ŗ', ['mayúscula R con cedilla']);
  this.executeCharTest('Ř', ['mayúscula R con carón']);
  this.executeCharTest('Ś', ['mayúscula S con agudo']);
  this.executeCharTest('Ŝ', ['mayúscula S con acento circunflejo']);
  this.executeCharTest('Ş', ['mayúscula S con cedilla']);
  this.executeCharTest('Š', ['mayúscula S con carón']);
  this.executeCharTest('Ţ', ['mayúscula T con cedilla']);
  this.executeCharTest('Ť', ['mayúscula T con carón']);
  this.executeCharTest('Ũ', ['mayúscula U con tilde']);
  this.executeCharTest('Ū', ['mayúscula U barra']);
  this.executeCharTest('Ŭ', ['mayúscula U con breve']);
  this.executeCharTest('Ů', ['mayúscula U con anillo arriba']);
  this.executeCharTest('Ű', ['mayúscula U con doble acento agudo']);
  this.executeCharTest('Ų', ['mayúscula U con ogonek']);
  this.executeCharTest('Ŵ', ['mayúscula W con acento circunflejo']);
  this.executeCharTest('Ŷ', ['mayúscula Y con circunflejo']);
  this.executeCharTest('Ÿ', ['mayúscula Y diéresis']);
  this.executeCharTest('Ź', ['mayúscula Z con agudo']);
  this.executeCharTest('Ż', ['mayúscula Z con punto']);
  this.executeCharTest('Ž', ['mayúscula Z con carón']);
  this.executeCharTest('Ǎ', ['mayúscula A con acento']);
  this.executeCharTest('Ǐ', ['mayúscula I con acento']);
  this.executeCharTest('Ǒ', ['mayúscula O con acento']);
  this.executeCharTest('Ǔ', ['mayúscula U con acento']);
  this.executeCharTest('Ǧ', ['mayúscula G con acento']);
  this.executeCharTest('Ǩ', ['mayúscula K con acento']);
  this.executeCharTest('Ǫ', ['mayúscula O con pecíolo']);
  this.executeCharTest('Ǵ', ['mayúscula G con acento agudo']);
  this.executeCharTest('Ǹ', ['mayúscula N con grave']);
  this.executeCharTest('Ȁ', ['mayúscula con doble tumba']);
  this.executeCharTest('Ȃ', ['mayúscula a con breve invertido']);
  this.executeCharTest('Ȅ', ['mayúscula E con doble tumba']);
  this.executeCharTest('Ȇ', ['mayúscula E con Breve invertido']);
  this.executeCharTest('Ȉ', ['mayúscula I con doble tumba']);
  this.executeCharTest('Ȋ', ['mayúscula I con Breve invertido']);
  this.executeCharTest('Ȍ', ['mayúscula O con doble tumba']);
  this.executeCharTest('Ȏ', ['mayúscula O con Breve invertido']);
  this.executeCharTest('Ȑ', ['mayúscula R con doble tumba']);
  this.executeCharTest('Ȓ', ['mayúscula R con breve invertido']);
  this.executeCharTest('Ȕ', ['mayúscula U con doble tumba']);
  this.executeCharTest('Ȗ', ['mayúscula U con breve invertido']);
  this.executeCharTest('Ș', ['mayúscula S con coma debajo']);
  this.executeCharTest('Ț', ['mayúscula T con coma debajo']);
  this.executeCharTest('Ȟ', ['mayúscula H con Caron']);
  this.executeCharTest('Ȧ', ['mayúscula con un punto arriba']);
  this.executeCharTest('Ȩ', ['mayúscula E con cedilla']);
  this.executeCharTest('Ȯ', ['mayúscula O con punto arriba']);
  this.executeCharTest('Ȳ', ['Mayúscula Y con Macron']);
  this.executeCharTest('Ḁ', ['mayúscula A con anillo debajo']);
  this.executeCharTest('Ḃ', ['mayúscula B con punto arriba']);
  this.executeCharTest('Ḅ', ['mayúscula B con punto debajo']);
  this.executeCharTest('Ḇ', ['mayúscula B con línea debajo']);
  this.executeCharTest('Ḋ', ['mayúscula D con punto arriba']);
  this.executeCharTest('Ḍ', ['mayúscula D con punto debajo']);
  this.executeCharTest('Ḏ', ['mayúscula D con línea debajo']);
  this.executeCharTest('Ḑ', ['mayúscula D con cedilla']);
  this.executeCharTest('Ḓ', ['mayúscula D con acento circunflejo debajo']);
  this.executeCharTest('Ḙ', ['mayúscula E con acento circunflejo debajo']);
  this.executeCharTest('Ḛ', ['mayúscula E con tilde debajo']);
  this.executeCharTest('Ḟ', ['mayúscula F con punto arriba']);
  this.executeCharTest('Ḡ', ['mayúscula G con macrón']);
  this.executeCharTest('Ḣ', ['mayúscula H con punto arriba']);
  this.executeCharTest('Ḥ', ['mayúscula H con punto debajo']);
  this.executeCharTest('Ḧ', ['mayúscula H con diéresis']);
  this.executeCharTest('Ḩ', ['mayúscula H con cedilla']);
  this.executeCharTest('Ḫ', ['mayúscula H con breve debajo']);
  this.executeCharTest('Ḭ', ['mayúscula I con tilde debajo']);
  this.executeCharTest('Ḱ', ['mayúscula K con agudo']);
  this.executeCharTest('Ḳ', ['mayúscula K con punto debajo']);
  this.executeCharTest('Ḵ', ['mayúscula K con línea debajo']);
  this.executeCharTest('Ḷ', ['mayúscula L con punto debajo']);
  this.executeCharTest('Ḻ', ['mayúscula L con línea debajo']);
  this.executeCharTest('Ḽ', ['mayúscula L con acento circunflejo debajo']);
  this.executeCharTest('Ḿ', ['mayúscula M con agudo']);
  this.executeCharTest('Ṁ', ['mayúscula M con punto arriba']);
  this.executeCharTest('Ṃ', ['mayúscula M con punto debajo']);
  this.executeCharTest('Ṅ', ['mayúscula N con punto arriba']);
  this.executeCharTest('Ṇ', ['mayúscula N con punto debajo']);
  this.executeCharTest('Ṉ', ['mayúscula N con línea debajo']);
  this.executeCharTest('Ṋ', ['mayúscula N con acento circunflejo debajo']);
  this.executeCharTest('Ṕ', ['mayúscula P con agudo']);
  this.executeCharTest('Ṗ', ['mayúscula P con punto arriba']);
  this.executeCharTest('Ṙ', ['mayúscula R con punto arriba']);
  this.executeCharTest('Ṛ', ['mayúscula R con punto debajo']);
  this.executeCharTest('Ṟ', ['mayúscula R con línea debajo']);
  this.executeCharTest('Ṡ', ['mayúscula S con punto arriba']);
  this.executeCharTest('Ṣ', ['mayúscula S con punto debajo']);
  this.executeCharTest('Ṫ', ['mayúscula T con punto arriba']);
  this.executeCharTest('Ṭ', ['mayúscula T con punto debajo']);
  this.executeCharTest('Ṯ', ['mayúscula T con línea debajo']);
  this.executeCharTest('Ṱ', ['mayúscula T con acento circunflejo debajo']);
  this.executeCharTest('Ṳ', ['mayúscula U con diéresis debajo']);
  this.executeCharTest('Ṵ', ['mayúscula U con tilde debajo']);
  this.executeCharTest('Ṷ', ['mayúscula U con acento circunflejo debajo']);
  this.executeCharTest('Ṽ', ['mayúscula V con tilde']);
  this.executeCharTest('Ṿ', ['mayúscula V con punto debajo']);
  this.executeCharTest('Ẁ', ['mayúscula W con grave']);
  this.executeCharTest('Ẃ', ['mayúscula W con agudo']);
  this.executeCharTest('Ẅ', ['mayúscula W con diéresis']);
  this.executeCharTest('Ẇ', ['mayúscula W con punto arriba']);
  this.executeCharTest('Ẉ', ['mayúscula W con punto debajo']);
  this.executeCharTest('Ẋ', ['mayúscula X con punto arriba']);
  this.executeCharTest('Ẍ', ['mayúscula X con diéresis']);
  this.executeCharTest('Ẏ', ['mayúscula Y con punto arriba']);
  this.executeCharTest('Ẑ', ['mayúscula Z con acento circunflejo']);
  this.executeCharTest('Ẓ', ['mayúscula Z con punto debajo']);
  this.executeCharTest('Ẕ', ['mayúscula Z with line below']);
  this.executeCharTest('Ạ', ['mayúscula A con punto debajo']);
  this.executeCharTest('Ả', ['mayúscula A con gancho arriba']);
  this.executeCharTest('Ẹ', ['mayúscula E con punto debajo']);
  this.executeCharTest('Ẻ', ['mayúscula E con gancho arriba']);
  this.executeCharTest('Ẽ', ['mayúscula E con tilde']);
  this.executeCharTest('Ỉ', ['mayúscula I con gancho arriba']);
  this.executeCharTest('Ị', ['mayúscula I con punto debajo']);
  this.executeCharTest('Ọ', ['mayúscula O con punto debajo']);
  this.executeCharTest('Ỏ', ['mayúscula O con gancho arriba']);
  this.executeCharTest('Ụ', ['mayúscula U con punto debajo']);
  this.executeCharTest('Ủ', ['mayúscula U con gancho arriba']);
  this.executeCharTest('Ỳ', ['mayúscula Y con grave']);
  this.executeCharTest('Ỵ', ['mayúscula Y con punto debajo']);
  this.executeCharTest('Ỷ', ['mayúscula Y con gancho arriba']);
  this.executeCharTest('Ỹ', ['mayúscula Y con tilde']);
  this.executeCharTest('⊾', ['ángulo recto con arco']);
  this.executeCharTest('⍼', ['ángulo recto con flecha zigzag hacia abajo']);
  this.executeCharTest('⟀', ['ángulo sólido']);
  this.executeCharTest('⦛', ['Ángulo medido de apertura a la izquierda']);
  this.executeCharTest('⦜', ['Variante de ángulo recto con cuadrado']);
  this.executeCharTest('⦝', ['ángulo recto medido con punto']);
  this.executeCharTest('⦞', ['Ángulo con S dentro']);
  this.executeCharTest('⦟', ['Ángulo agudo']);
  this.executeCharTest('⦠', ['Ángulo esférico de apertura a la izquierda']);
  this.executeCharTest('⦡', ['Apertura de ángulo esférico']);
  this.executeCharTest('⦢', ['Ángulo de giro']);
  this.executeCharTest('⦣', ['Ángulo invertido']);
  this.executeCharTest('⦤', ['ángulo con barra inferior']);
  this.executeCharTest('⦥', ['ángulo inverso con barra inferior']);
  this.executeCharTest('⦦', ['ángulo oblicuo hacia arriba']);
  this.executeCharTest('⦧', ['ángulo oblicuo hacia abajo']);
  this.executeCharTest('⦨', ['measured angle with open arm ending in arrow pointing up and to the right']);
  this.executeCharTest('⦩', ['measured angle with open arm ending in arrow pointing up and to the left']);
  this.executeCharTest('⦪', ['measured angle with open arm ending in arrow pointing down and to the right']);
  this.executeCharTest('⦫', ['measured angle with open arm ending in arrow pointing down and to the left']);
  this.executeCharTest('⦬', ['measured angle with open arm ending in arrow pointing right and up']);
  this.executeCharTest('⦭', ['measured angle with open arm ending in arrow pointing left and up']);
  this.executeCharTest('⦮', ['measured angle with open arm ending in arrow pointing right and down']);
  this.executeCharTest('⦯', ['measured angle with open arm ending in arrow pointing left and down']);
  this.executeCharTest('←', ['flecha izquierda']);
  this.executeCharTest('↑', ['flecha arriba']);
  this.executeCharTest('→', ['flecha derecha']);
  this.executeCharTest('↓', ['flecha abajo']);
  this.executeCharTest('↔', ['flecha izquierda y derecha']);
  this.executeCharTest('↕', ['flecha arriba y abajo']);
  this.executeCharTest('↖', ['flecha a noroeste']);
  this.executeCharTest('↗', ['flecha a nordeste']);
  this.executeCharTest('↘', ['flecha a sureste']);
  this.executeCharTest('↙', ['flecha a suroeste']);
  this.executeCharTest('↚', ['flecha izquierda tachada']);
  this.executeCharTest('↛', ['flecha tachada']);
  this.executeCharTest('↜', ['flecha ondulada izquierda']);
  this.executeCharTest('↝', ['flecha ondulada']);
  this.executeCharTest('↞', ['flecha izquierda con doble punta']);
  this.executeCharTest('↟', ['flecha con doble punta hacia arriba']);
  this.executeCharTest('↠', ['flecha derechaa con doble punta']);
  this.executeCharTest('↡', ['flecha con doble punta hacia abajo']);
  this.executeCharTest('↢', ['flecha izquierda con cola']);
  this.executeCharTest('↣', ['flecha derecha con cola']);
  this.executeCharTest('↤', ['flecha izquierda de barra']);
  this.executeCharTest('↥', ['barra con flecha']);
  this.executeCharTest('↦', ['flecha derecha de barra']);
  this.executeCharTest('↧', ['flecha con barra']);
  this.executeCharTest('↨', ['flecha arriba y abajo con base']);
  this.executeCharTest('↩', ['flecha izquierda con gancho']);
  this.executeCharTest('↪', ['flecha con gancho']);
  this.executeCharTest('↫', ['flecha izquierda con lazo']);
  this.executeCharTest('↬', ['flecha con lazo']);
  this.executeCharTest('↭', ['flecha ondulada izquierda y derecha']);
  this.executeCharTest('↮', ['flecha izquierda y derecha tachada']);
  this.executeCharTest('↯', ['flecha zigzag abajo']);
  this.executeCharTest('↰', ['flecha arriba con punta izquierda']);
  this.executeCharTest('↱', ['flecha arriba con punta derecha']);
  this.executeCharTest('↲', ['flecha abajo con punta izquierda']);
  this.executeCharTest('↳', ['flecha abajo con punta derecha']);
  this.executeCharTest('↴', ['flecha derecha desde esquina inferior']);
  this.executeCharTest('↵', ['flecha hacia abajo desde esquina izquierda']);
  this.executeCharTest('↶', ['flecha semicircular superior en sentido antihorario']);
  this.executeCharTest('↷', ['flecha semicircular superior en sentido horario']);
  this.executeCharTest('↸', ['flecha noroeste a barra larga']);
  this.executeCharTest('↹', ['flecha izquierda a barra arriba de flecha derecha a barra']);
  this.executeCharTest('↺', ['flecha circular abierta en sentido antihorario']);
  this.executeCharTest('↻', ['flecha circular abierta en sentido horario']);
  this.executeCharTest('⇄', ['flecha derecha arriba de flecha izquierda']);
  this.executeCharTest('⇅', ['flecha arriba a la izquierda de flecha abajo']);
  this.executeCharTest('⇆', ['flecha izquierda arriba de flecha derecha']);
  this.executeCharTest('⇇', ['dos flechas hacia la izquierda']);
  this.executeCharTest('⇈', ['dos flechas hacia arriba']);
  this.executeCharTest('⇉', ['dos flechas']);
  this.executeCharTest('⇊', ['dos flechas hacia abajo']);
  this.executeCharTest('⇍', ['flecha doble izquierda tachada']);
  this.executeCharTest('⇎', ['flecha doble izquierda y derecha tachada']);
  this.executeCharTest('⇏', ['flecha doble tachada']);
  this.executeCharTest('⇐', ['flecha doble hacia la izquierda']);
  this.executeCharTest('⇑', ['flecha doble hacia arriba']);
  this.executeCharTest('⇒', ['flecha doble']);
  this.executeCharTest('⇓', ['flecha doble hacia abajo']);
  this.executeCharTest('⇔', ['flecha doble izquierda-derecha']);
  this.executeCharTest('⇕', ['flecha doble vertical']);
  this.executeCharTest('⇖', ['flecha doble hacia noroeste']);
  this.executeCharTest('⇗', ['flecha doble hacia nordeste']);
  this.executeCharTest('⇘', ['flecha doble hacia sudeste']);
  this.executeCharTest('⇙', ['flecha doble hacia sudoeste']);
  this.executeCharTest('⇚', ['flecha triple izquierda']);
  this.executeCharTest('⇛', ['flecha triple']);
  this.executeCharTest('⇜', ['flecha ondulada izquierda']);
  this.executeCharTest('⇝', ['flecha ondulada']);
  this.executeCharTest('⇞', ['flecha hacia arriba con doble tachado']);
  this.executeCharTest('⇟', ['flecha hacia abajo con doble tachado']);
  this.executeCharTest('⇠', ['flecha de puntos hacia la izquierda']);
  this.executeCharTest('⇡', ['flecha de puntos hacia arriba']);
  this.executeCharTest('⇢', ['flecha de puntos']);
  this.executeCharTest('⇣', ['flecha de puntos hacia abajo']);
  this.executeCharTest('⇤', ['flecha izquierda a barra']);
  this.executeCharTest('⇥', ['flecha derecha a barra']);
  this.executeCharTest('⇦', ['flecha vacía hacia la izquierda']);
  this.executeCharTest('⇧', ['flecha vacía hacia arriba']);
  this.executeCharTest('⇨', ['flecha vacía']);
  this.executeCharTest('⇩', ['flecha vacía hacia abajo']);
  this.executeCharTest('⇪', ['flecha vacía hacia arriba desde barra']);
  this.executeCharTest('⇫', ['flecha blanca hacia arriba en el pedestal']);
  this.executeCharTest('⇬', ['flecha blanca hacia arriba sobre pedestal con barra horizontal']);
  this.executeCharTest('⇭', ['flecha blanca hacia arriba sobre pedestal con barra vertical']);
  this.executeCharTest('⇮', ['flecha doble hacia arriba blanca']);
  this.executeCharTest('⇯', ['flecha doble hacia arriba blanca en pedestal']);
  this.executeCharTest('⇰', ['flecha blanca hacia la derecha de la pared']);
  this.executeCharTest('⇱', ['flecha del noroeste a la esquina']);
  this.executeCharTest('⇲', ['flecha del sudeste a la esquina']);
  this.executeCharTest('⇳', ['arriba abajo flecha blanca']);
  this.executeCharTest('⇴', ['flecha derecha con círculo pequeño']);
  this.executeCharTest('⇵', ['upwards arrow to the right of downwards arrow']);
  this.executeCharTest('⇶', ['tres flechas a la derecha']);
  this.executeCharTest('⇷', ['flecha hacia la izquierda con trazo vertical']);
  this.executeCharTest('⇸', ['flecha hacia la derecha con trazo vertical']);
  this.executeCharTest('⇹', ['flecha izquierda derecha con trazo vertical']);
  this.executeCharTest('⇺', ['flecha hacia la izquierda con doble trazo vertical']);
  this.executeCharTest('⇻', ['flecha hacia la derecha con doble trazo vertical']);
  this.executeCharTest('⇼', ['flecha izquierda derecha con doble trazo vertical']);
  this.executeCharTest('⇽', ['flecha izquierda con punta vacía']);
  this.executeCharTest('⇾', ['flecha izquierda con punta vacía']);
  this.executeCharTest('⇿', ['flecha izquierda derecha con punta vacía']);
  this.executeCharTest('⌁', ['flecha electrica']);
  this.executeCharTest('⌃', ['flecha arriba']);
  this.executeCharTest('⌄', ['flecha hacia abajo']);
  this.executeCharTest('⌤', ['flecha arriba entre dos barras horizontales']);
  this.executeCharTest('⎋', ['círculo roto con la flecha del noroeste']);
  this.executeCharTest('➔', ['flecha hacia la derecha con cabeza ancha']);
  this.executeCharTest('➘', ['flecha Sureste pesada']);
  this.executeCharTest('➙', ['flecha hacia la derecha pesada']);
  this.executeCharTest('➚', ['flecha pesada del noreste']);
  this.executeCharTest('➛', ['punto de dibujo Flecha hacia la derecha']);
  this.executeCharTest('➜', ['flecha hacia la derecha con punta redonda redonda']);
  this.executeCharTest('➝', ['flecha hacia la derecha con forma de triángulo']);
  this.executeCharTest('➞', ['flecha hacia la derecha con forma de triángulo pesado']);
  this.executeCharTest('➟', ['triángulo punteado hacia la flecha hacia la derecha']);
  this.executeCharTest('➠', ['flecha hacia la derecha con forma de triángulo de trazo pesado']);
  this.executeCharTest('➡', ['flecha hacia la derecha negra']);
  this.executeCharTest('➢', ['punta de flecha tridimensional hacia la derecha hacia arriba']);
  this.executeCharTest('➣', ['punta de flecha hacia la derecha con iluminación inferior en tres dimensiones']);
  this.executeCharTest('➤', ['punta de flecha negra hacia la derecha']);
  this.executeCharTest('➥', ['pesado negro curvado hacia abajo y hacia la derecha flecha']);
  this.executeCharTest('➦', ['pesado negro curvado hacia arriba y hacia la derecha flecha']);
  this.executeCharTest('➧', ['squat Black Arrow hacia la derecha']);
  this.executeCharTest('➨', ['flecha hacia la derecha de color negro cóncava puntiaguda pesada']);
  this.executeCharTest('➩', ['sombra derecha flecha blanca hacia la derecha']);
  this.executeCharTest('➪', ['sombra hacia la izquierda blanca a la izquierda']);
  this.executeCharTest('➫', ['back-Tilted Shadowed White Right Arrow']);
  this.executeCharTest('➬', ['flecha hacia la derecha blanca sombreada inclinada hacia delante']);
  this.executeCharTest('➭', ['flecha hacia la derecha pesada inferior, sombreada a la derecha, blanca']);
  this.executeCharTest('➮', ['flecha hacia la derecha blanca superior derecha sombreada pesada']);
  this.executeCharTest('➯', ['con muesca, flecha derecha hacia abajo, a la derecha, hacia la derecha']);
  this.executeCharTest('➱', ['con muescas, flecha derecha hacia arriba, a la derecha, hacia la derecha']);
  this.executeCharTest('➲', ['círculo pesado blanco flecha hacia la derecha']);
  this.executeCharTest('➳', ['flecha hacia la derecha con plumas blancas']);
  this.executeCharTest('➴', ['flecha suroriental de plumas negras']);
  this.executeCharTest('➵', ['flecha hacia la derecha con plumas negras']);
  this.executeCharTest('➶', ['flecha del noreste con plumas negras']);
  this.executeCharTest('➷', ['flecha suroriental con plumas negras pesadas']);
  this.executeCharTest('➸', ['flecha derecha pesada con plumas negras']);
  this.executeCharTest('➹', ['flecha del noreste con plumas negras pesadas']);
  this.executeCharTest('➺', ['lágrima-flecha de flecha hacia la derecha']);
  this.executeCharTest('➻', ['flecha hacia la derecha con forma de lágrima pesada']);
  this.executeCharTest('➼', ['flecha hacia la derecha de cola de cuña']);
  this.executeCharTest('➽', ['flecha hacia la derecha de cola de cuña pesada']);
  this.executeCharTest('➾', ['open-Outlined Outward Arrow']);
  this.executeCharTest('⟰', ['flecha cuádruple hacia arriba']);
  this.executeCharTest('⟱', ['flecha cuádruple hacia abajo']);
  this.executeCharTest('⟲', ['flecha hacia la izquierda desde círculo']);
  this.executeCharTest('⟳', ['flecha hacia la derecha desde círculo']);
  this.executeCharTest('⟴', ['flecha con más en círculo']);
  this.executeCharTest('⟵', ['flecha larga hacia la izquierda']);
  this.executeCharTest('⟶', ['flecha larga']);
  this.executeCharTest('⟷', ['flecha larga hacia izquierda y derecha']);
  this.executeCharTest('⟸', ['doble flecha larga hacia la izquierda']);
  this.executeCharTest('⟹', ['doble flecha larga']);
  this.executeCharTest('⟺', ['doble flecha larga hacia izquierda y derecha']);
  this.executeCharTest('⟻', ['flecha larga hacia la izquierda, desde barra']);
  this.executeCharTest('⟼', ['flecha larga desde barra']);
  this.executeCharTest('⟽', ['doble flecha larga hacia la izquierda desde barra']);
  this.executeCharTest('⟾', ['doble flecha larga desde barra']);
  this.executeCharTest('⟿', ['flecha larga en zigzag']);
  this.executeCharTest('⤀', ['flecha de dos cabezas hacia la derecha con trazo vertical']);
  this.executeCharTest('⤁', ['flecha de dos cabezas hacia la derecha con doble movimiento vertical']);
  this.executeCharTest('⤂', ['doble flecha hacia la izquierda con trazo vertical']);
  this.executeCharTest('⤃', ['doble flecha hacia la derecha con trazo vertical']);
  this.executeCharTest('⤄', ['izquierda Derecha Doble Flecha con Trazo Vertical']);
  this.executeCharTest('⤅', ['rightwards two headed arrow from bar']);
  this.executeCharTest('⤆', ['doble flecha hacia la izquierda de la barra']);
  this.executeCharTest('⤇', ['flecha doble hacia la derecha de la barra']);
  this.executeCharTest('⤈', ['flecha hacia abajo con trazo horizontal']);
  this.executeCharTest('⤉', ['flecha hacia arriba con trazo horizontal']);
  this.executeCharTest('⤊', ['flecha triple hacia arriba']);
  this.executeCharTest('⤋', ['triple flecha hacia abajo']);
  this.executeCharTest('⤌', ['leftwards double dash arrow']);
  this.executeCharTest('⤍', ['rightwards double dash arrow']);
  this.executeCharTest('⤎', ['leftwards triple dash arrow']);
  this.executeCharTest('⤏', ['rightwards triple dash arrow']);
  this.executeCharTest('⤐', ['rightwards two headed triple dash arrow']);
  this.executeCharTest('⤑', ['rightwards arrow with dotted stem']);
  this.executeCharTest('⤒', ['upwards arrow to bar']);
  this.executeCharTest('⤓', ['downwards arrow to bar']);
  this.executeCharTest('⤔', ['flecha hacia la derecha con cola con trazo vertical']);
  this.executeCharTest('⤕', ['flecha hacia la derecha con la cola con doble trazo vertical']);
  this.executeCharTest('⤖', ['rightwards two headed arrow with tail']);
  this.executeCharTest('⤗', ['flecha de dos cabezas hacia la derecha con cola con trazo vertical']);
  this.executeCharTest('⤘', ['flecha de dos cabezas hacia la derecha con cola con doble movimiento vertical']);
  this.executeCharTest('⤙', ['cola de flecha hacia la izquierda']);
  this.executeCharTest('⤚', ['flecha hacia la derecha']);
  this.executeCharTest('⤛', ['cola de doble flecha hacia la izquierda']);
  this.executeCharTest('⤜', ['cola de doble flecha hacia la derecha']);
  this.executeCharTest('⤝', ['flecha hacia diamante relleno a la izquierda']);
  this.executeCharTest('⤞', ['flecha hacia diamante a la derecha']);
  this.executeCharTest('⤟', ['flecha desde barra hacia diamante a la izquierda']);
  this.executeCharTest('⤠', ['flecha desde barra hacia diamante a la derecha']);
  this.executeCharTest('⤡', ['flechas del noroeste y sureste']);
  this.executeCharTest('⤢', ['flecha noreste y sudoeste']);
  this.executeCharTest('⤣', ['flecha a noroeste con garfio']);
  this.executeCharTest('⤤', ['flecha a nordeste con garfio']);
  this.executeCharTest('⤥', ['flecha a sureste con garfio']);
  this.executeCharTest('⤦', ['flecha a suroeste con garfio']);
  this.executeCharTest('⤧', ['flechas a noroeste y nordeste']);
  this.executeCharTest('⤨', ['flechas a nordeste y sudeste']);
  this.executeCharTest('⤩', ['flechas a suddeste y sudoeste']);
  this.executeCharTest('⤪', ['flechas a sudoeste y noroeste']);
  this.executeCharTest('⤭', ['flecha Sureste Cruzando Flecha Noreste']);
  this.executeCharTest('⤮', ['north East Arrow Crossing South East Arrow']);
  this.executeCharTest('⤯', ['caída en diagonal que cruza la flecha noreste']);
  this.executeCharTest('⤰', ['creciente Cruce de la Cruz del Sureste de la Flecha']);
  this.executeCharTest('⤱', ['north East Arrow Crossing North West Arrow']);
  this.executeCharTest('⤲', ['north West Arrow Crossing North East Arrow']);
  this.executeCharTest('⤳', ['flecha ondulada']);
  this.executeCharTest('⤴', ['flecha que apunta hacia la derecha y luego curva hacia arriba']);
  this.executeCharTest('⤵', ['flecha hacia la derecha que gira hacia abajo']);
  this.executeCharTest('⤶', ['flecha hacia abajo que gira hacia la izquierda']);
  this.executeCharTest('⤷', ['flecha hacia abajo que gira hacia la derecha']);
  this.executeCharTest('⤸', ['flecha semicircular a la derecha en sentido horario']);
  this.executeCharTest('⤹', ['flecha semicircular a la izquierda en sentido antihorario']);
  this.executeCharTest('⤺', ['arco superior flecha hacia la izquierda']);
  this.executeCharTest('⤻', ['arco inferior flecha hacia la izquierda']);
  this.executeCharTest('⤼', ['giro negativo']);
  this.executeCharTest('⤽', ['giro positivo']);
  this.executeCharTest('⤾', ['flecha hacia la derecha semicircular inferior derecha']);
  this.executeCharTest('⤿', ['flecha inferior izquierda semicircular en sentido antihorario']);
  this.executeCharTest('⥀', ['círculo cerrado en sentido contrario a las agujas del reloj']);
  this.executeCharTest('⥁', ['círculo cerrado en el sentido de las agujas del reloj']);
  this.executeCharTest('⥂', ['flecha hacia la derecha sobre la flecha corta hacia la izquierda']);
  this.executeCharTest('⥃', ['flecha hacia la izquierda sobre la flecha corta hacia la derecha']);
  this.executeCharTest('⥄', ['flecha corta hacia la derecha arriba flecha hacia la izquierda']);
  this.executeCharTest('⥅', ['flecha con más suscrito']);
  this.executeCharTest('⥆', ['flecha hacia la izquierda con más abajo']);
  this.executeCharTest('⥇', ['flecha hacia la derecha a través de X']);
  this.executeCharTest('⥈', ['flecha hacia la izquierda a través de círculo']);
  this.executeCharTest('⥉', ['dos cabezas de flecha hacia arriba desde círculo']);
  this.executeCharTest('⥰', ['round implies']);
  this.executeCharTest('⥱', ['flecha con igual']);
  this.executeCharTest('⥲', ['flecha con tilde']);
  this.executeCharTest('⥳', ['tilde con flecha hacia la izquierda']);
  this.executeCharTest('⥴', ['tilde con flecha']);
  this.executeCharTest('⥵', ['flecha con casi igual a']);
  this.executeCharTest('⥶', ['flecha hacia la izquierda con menor que']);
  this.executeCharTest('⥷', ['flecha hacia la izquierda a través de menos de']);
  this.executeCharTest('⥸', ['flecha con mayor que']);
  this.executeCharTest('⥹', ['flecha hacia la izquierda con incluido']);
  this.executeCharTest('⥺', ['flecha hacia la izquierda a través del subconjunto']);
  this.executeCharTest('⥻', ['flecha hacia la izquierda con contiene']);
  this.executeCharTest('⦳', ['conjunto vacío con flecha']);
  this.executeCharTest('⦴', ['conjunto vacío con flecha inversa']);
  this.executeCharTest('⦽', ['flecha arriba a través del círculo']);
  this.executeCharTest('⧪', ['diamante negro con flecha hacia abajo']);
  this.executeCharTest('⧬', ['círculo blanco con flecha hacia abajo']);
  this.executeCharTest('⧭', ['círculo negro con flecha hacia abajo']);
  this.executeCharTest('⨗', ['integral con flecha hacia la izquierda con garfio']);
  this.executeCharTest('⬀', ['flecha blanca del noreste']);
  this.executeCharTest('⬁', ['flecha blanca del noroeste']);
  this.executeCharTest('⬂', ['flecha blanca del sureste']);
  this.executeCharTest('⬃', ['sudoeste flecha blanca']);
  this.executeCharTest('⬄', ['izquierda derecha flecha blanca']);
  this.executeCharTest('⬅', ['flecha negra hacia la izquierda']);
  this.executeCharTest('⬆', ['flecha negra hacia arriba']);
  this.executeCharTest('⬇', ['flecha negra hacia abajo']);
  this.executeCharTest('⬈', ['flecha negra del noreste']);
  this.executeCharTest('⬉', ['flecha negra del noroeste']);
  this.executeCharTest('⬊', ['flecha negra sur este']);
  this.executeCharTest('⬋', ['sudoeste flecha negra']);
  this.executeCharTest('⬌', ['izquierda derecha flecha negra']);
  this.executeCharTest('⬍', ['arriba abajo flecha negra']);
  this.executeCharTest('⬎', ['flecha hacia la derecha con la punta hacia abajo']);
  this.executeCharTest('⬏', ['flecha hacia la derecha con la punta hacia arriba']);
  this.executeCharTest('⬐', ['flecha hacia la izquierda con la punta hacia abajo']);
  this.executeCharTest('⬑', ['flecha hacia la izquierda con la punta hacia arriba']);
  this.executeCharTest('⬰', ['flecha izquierda con círculo pequeño']);
  this.executeCharTest('⬱', ['tres flechas a la izquierda']);
  this.executeCharTest('⬲', ['flecha izquierda con un círculo más']);
  this.executeCharTest('⬳', ['flecha de flecha larga hacia la izquierda']);
  this.executeCharTest('⬴', ['flecha de dos cabezas hacia la izquierda con trazo vertical']);
  this.executeCharTest('⬵', ['flecha de dos cabezas hacia la izquierda con doble movimiento vertical']);
  this.executeCharTest('⬶', ['flecha de dos cabezas hacia la izquierda de la barra']);
  this.executeCharTest('⬷', ['flecha triple de dos cabezas hacia la izquierda']);
  this.executeCharTest('⬸', ['flecha hacia la izquierda con tallo punteado']);
  this.executeCharTest('⬹', ['flecha hacia la izquierda con cola con trazo vertical']);
  this.executeCharTest('⬺', ['flecha hacia la izquierda con cola con doble trazo vertical']);
  this.executeCharTest('⬻', ['flecha de dos cabezas hacia la izquierda con cola']);
  this.executeCharTest('⬼', ['flecha de dos cabezas hacia la izquierda con cola con trazo vertical']);
  this.executeCharTest('⬽', ['flecha de dos cabezas hacia la izquierda con cola con doble movimiento vertical']);
  this.executeCharTest('⬾', ['flecha hacia la izquierda a través de X']);
  this.executeCharTest('⬿', ['ola flecha apuntando directamente a la izquierda']);
  this.executeCharTest('⭀', ['signo de igual flecha arriba a la izquierda']);
  this.executeCharTest('⭁', ['operador de tilde inverso sobre la flecha hacia la izquierda']);
  this.executeCharTest('⭂', ['flecha hacia la izquierda sobre el reverso casi igual a']);
  this.executeCharTest('⭃', ['flecha hacia la derecha a través de mayor-que']);
  this.executeCharTest('⭄', ['flecha hacia la derecha a través de Superset']);
  this.executeCharTest('⭅', ['flecha cuádruple hacia la izquierda']);
  this.executeCharTest('⭆', ['flecha cuádruple hacia la derecha']);
  this.executeCharTest('⭇', ['operador de tilde inverso sobre la flecha hacia la derecha']);
  this.executeCharTest('⭈', ['flecha hacia la derecha sobre el reverso casi igual a']);
  this.executeCharTest('⭉', ['operador de tilde sobre la flecha hacia la izquierda']);
  this.executeCharTest('⭊', ['flecha hacia la izquierda por encima de casi igual a']);
  this.executeCharTest('⭋', ['flecha hacia la izquierda sobre el operador de tilde inverso']);
  this.executeCharTest('⭌', ['flecha hacia la derecha sobre el operador de tilde inverso']);
  this.executeCharTest('￩', ['flecha hacia la izquierda de medio ancho']);
  this.executeCharTest('￪', ['flecha ascendente de medio ancho']);
  this.executeCharTest('￫', ['flecha de medio ancho hacia la derecha']);
  this.executeCharTest('￬', ['flecha hacia abajo de medio ancho']);
  this.executeCharTest('ℓ', ['script l']);
  this.executeCharTest('℘', ['p de weierstrass']);
  this.executeCharTest('ℼ', ['negrita de pizarra pi']);
  this.executeCharTest('ℽ', ['negrita de pizarra gamma']);
  this.executeCharTest('ℾ', ['negrita de pizarra mayúscula Gamma']);
  this.executeCharTest('ℿ', ['negrita de pizarra mayúscula Pi']);
  this.executeCharTest('⅀', ['negrita de pizarra suma de n-ary']);
  this.executeCharTest('ⅅ', ['mayúscula D']);
  this.executeCharTest('ⅆ', ['d']);
  this.executeCharTest('ⅇ', ['e']);
  this.executeCharTest('ⅈ', ['i']);
  this.executeCharTest('ⅉ', ['negrita de pizarra cursiva j']);
  this.executeCharTest('𝚤', ['cursiva sin punto i']);
  this.executeCharTest('𝚥', ['cursiva sin punto j']);
  this.executeCharTest('(', ['paréntesis izquierdo']);
  this.executeCharTest(')', ['paréntesis derecho']);
  this.executeCharTest('[', ['corchete izquierdo']);
  this.executeCharTest(']', ['corchete derecho']);
  this.executeCharTest('{', ['llave izquierda']);
  this.executeCharTest('}', ['llaves derecha']);
  this.executeCharTest('⁅', ['soporte cuadrado izquierdo con pluma']);
  this.executeCharTest('⁆', ['soporte cuadrado derecho con pluma']);
  this.executeCharTest('⌈', ['esquina superior izquierda']);
  this.executeCharTest('⌉', ['esquina superior derecha']);
  this.executeCharTest('⌊', ['esquina inferior izquierda']);
  this.executeCharTest('⌋', ['esquina inferior derecha']);
  this.executeCharTest('⌌', ['corte inferior derecho']);
  this.executeCharTest('⌍', ['corte inferior izquierdo']);
  this.executeCharTest('⌎', ['corte superior derecho ']);
  this.executeCharTest('⌏', ['corte superior izquierdo']);
  this.executeCharTest('⌜', ['ángulo superior izquierdo']);
  this.executeCharTest('⌝', ['ángulo superior derecho']);
  this.executeCharTest('⌞', ['ángulo inferior izquierdo']);
  this.executeCharTest('⌟', ['ángulo inferior derecho']);
  this.executeCharTest('⌠', ['mitad superior de integral']);
  this.executeCharTest('⌡', ['mitad inferior de integral']);
  this.executeCharTest('〈', ['paréntesis angular izquierdo']);
  this.executeCharTest('〉', ['paréntesis angular derecho']);
  this.executeCharTest('⎛', ['paréntesis izquierdo gancho superior']);
  this.executeCharTest('⎜', ['extensión del paréntesis izquierdo']);
  this.executeCharTest('⎝', ['paréntesis inferior gancho inferior']);
  this.executeCharTest('⎞', ['paréntesis derecho gancho superior']);
  this.executeCharTest('⎟', ['extensión del paréntesis derecho']);
  this.executeCharTest('⎠', ['paréntesis inferior gancho inferior']);
  this.executeCharTest('⎡', ['esquina cuadrada izquierda esquina superior']);
  this.executeCharTest('⎢', ['extensión del soporte cuadrado izquierdo']);
  this.executeCharTest('⎣', ['esquina cuadrada izquierda esquina inferior']);
  this.executeCharTest('⎤', ['esquina cuadrada derecha esquina superior']);
  this.executeCharTest('⎥', ['extensión de soporte cuadrado derecho']);
  this.executeCharTest('⎦', ['esquina cuadrada derecha esquina inferior']);
  this.executeCharTest('⎧', ['gancho superior rizado izquierdo']);
  this.executeCharTest('⎨', ['pedazo medio rizado izquierdo']);
  this.executeCharTest('⎩', ['soporte izquierdo rizado gancho inferior']);
  this.executeCharTest('⎪', ['extensión de soporte rizado']);
  this.executeCharTest('⎫', ['gancho superior rizado derecho']);
  this.executeCharTest('⎬', ['pedazo medio de soporte rizado derecho']);
  this.executeCharTest('⎭', ['abrazadera inferior derecha rizado']);
  this.executeCharTest('⎮', ['extensión integral']);
  this.executeCharTest('⎯', ['extensión de línea horizontal']);
  this.executeCharTest('⎰', ['izquierda arriba o derecho debajo sección llave']);
  this.executeCharTest('⎱', ['derecha arriba o izquierdo debajo sección llave']);
  this.executeCharTest('⎲', ['suma superior']);
  this.executeCharTest('⎳', ['parte inferior de la suma']);
  this.executeCharTest('⎴', ['corchete superior']);
  this.executeCharTest('⎵', ['corchete inferior']);
  this.executeCharTest('⎶', ['soporte cuadrado inferior sobre soporte cuadrado superior']);
  this.executeCharTest('⎷', ['parte inferior del símbolo radical']);
  this.executeCharTest('⎸', ['línea de caja vertical izquierda']);
  this.executeCharTest('⎹', ['línea de caja vertical derecha']);
  this.executeCharTest('⏜', ['paréntesis superior']);
  this.executeCharTest('⏝', ['paréntesis inferior']);
  this.executeCharTest('⏞', ['corchete rizado superior']);
  this.executeCharTest('⏟', ['corchete rizado inferior']);
  this.executeCharTest('⏠', ['corchete superior en tortuga']);
  this.executeCharTest('⏡', ['corchete inferior en tortuga']);
  this.executeCharTest('❨', ['ornamento de paréntesis izquierdo medio']);
  this.executeCharTest('❩', ['adorno de paréntesis medio derecho']);
  this.executeCharTest('❪', ['adorno paréntesis izquierdo aplanado medio']);
  this.executeCharTest('❫', ['adorno paréntesis derecho medio aplanado']);
  this.executeCharTest('❬', ['adorno de soporte de ángulo medio apuntando hacia la izquierda']);
  this.executeCharTest('❭', ['adorno de soporte de ángulo medio apuntando hacia la derecha']);
  this.executeCharTest('❮', ['ornamento de comillas en el ángulo que apunta hacia la izquierda']);
  this.executeCharTest('❯', ['ornamento de comillas en ángulo recto que apunta hacia la derecha']);
  this.executeCharTest('❰', ['ornamento pesado del soporte del ángulo que señala a la izquierda']);
  this.executeCharTest('❱', ['ornamento pesado del soporte del ángulo que señala hacia la derecha']);
  this.executeCharTest('❲', ['ornamento de soporte de concha de tortuga izquierda ligera']);
  this.executeCharTest('❳', ['ornamento de corchete derecho tortuga derecha']);
  this.executeCharTest('❴', ['ornamento de soporte rizado izquierdo medio']);
  this.executeCharTest('❵', ['ornamento de soporte rizado derecho medio']);
  this.executeCharTest('⟅', ['símbolo delimitador izquierdo de bolsa de s-formó']);
  this.executeCharTest('⟆', ['símbolo delimitador derecho de bolsa de s-formó']);
  this.executeCharTest('⟦', ['corchete vacío izquierdo']);
  this.executeCharTest('⟧', ['corchete vacío derecho']);
  this.executeCharTest('⟨', ['corchete agudo izquierdo']);
  this.executeCharTest('⟩', ['corchete agudo derecho']);
  this.executeCharTest('⟪', ['doble corchete agudo izquierdo']);
  this.executeCharTest('⟫', ['doble corchete agudo derecho']);
  this.executeCharTest('⟬', ['corchete de tortuga vacío izquierdo']);
  this.executeCharTest('⟭', ['corchete de tortuga vacío derecho ']);
  this.executeCharTest('⟮', ['paréntesis plano izquierdo']);
  this.executeCharTest('⟯', ['paréntesis plano derecho']);
  this.executeCharTest('⦃', ['soporte rizado blanco izquierdo']);
  this.executeCharTest('⦄', ['derecha rizado blanco soporte']);
  this.executeCharTest('⦅', ['left white paren']);
  this.executeCharTest('⦆', ['right white paren']);
  this.executeCharTest('⦇', ['notación Z izquierda soporte de imagen']);
  this.executeCharTest('⦈', ['corchete de imagen derecha de notación Z']);
  this.executeCharTest('⦉', ['z notation left binding bracket']);
  this.executeCharTest('⦊', ['z notation right binding bracket']);
  this.executeCharTest('⦋', ['left bracket with underbar']);
  this.executeCharTest('⦌', ['right bracket with underbar']);
  this.executeCharTest('⦍', ['left bracket with tick in top corner']);
  this.executeCharTest('⦎', ['right bracket with tick in bottom corner']);
  this.executeCharTest('⦏', ['left bracket with tick in bottom corner']);
  this.executeCharTest('⦐', ['right bracket with tick in top corner']);
  this.executeCharTest('⦑', ['left angle bracket with dot']);
  this.executeCharTest('⦒', ['right angle bracket with dot']);
  this.executeCharTest('⦓', ['left arc less than bracket']);
  this.executeCharTest('⦔', ['right arc greater than bracket']);
  this.executeCharTest('⦕', ['double left arc greater than bracket']);
  this.executeCharTest('⦖', ['double right arc less than bracket']);
  this.executeCharTest('⦗', ['soporte de concha de tortuga negra izquierda']);
  this.executeCharTest('⦘', ['abrazadera de concha de tortuga negra derecha']);
  this.executeCharTest('⧘', ['valla izquierda ondulada']);
  this.executeCharTest('⧙', ['valla derecha ondulada']);
  this.executeCharTest('⧚', ['left double wiggly fence']);
  this.executeCharTest('⧛', ['right double wiggly fence']);
  this.executeCharTest('⧼', ['abrazadera de ángulo curvo a la izquierda']);
  this.executeCharTest('⧽', ['abrazadera de ángulo curvo orientada hacia la derecha']);
  this.executeCharTest('⸢', ['soporte superior izquierdo superior']);
  this.executeCharTest('⸣', ['medio soporte superior derecho']);
  this.executeCharTest('⸤', ['abrazadera inferior izquierda']);
  this.executeCharTest('⸥', ['medio soporte inferior derecho']);
  this.executeCharTest('⸦', ['soporte U lateral izquierdo']);
  this.executeCharTest('⸧', ['lado derecho U soporte']);
  this.executeCharTest('⸨', ['doble paréntesis izquierdo']);
  this.executeCharTest('⸩', ['paréntesis doble derecho']);
  this.executeCharTest('〈', ['soporte de ángulo izquierdo']);
  this.executeCharTest('〉', ['soporte de ángulo recto']);
  this.executeCharTest('《', ['paréntesis angular doble']);
  this.executeCharTest('》', ['paréntesis angular doble derecho']);
  this.executeCharTest('「', ['soporte de la esquina izquierda']);
  this.executeCharTest('」', ['soporte de esquina derecha']);
  this.executeCharTest('『', ['soporte de esquina blanco izquierdo']);
  this.executeCharTest('』', ['soporte de esquina blanco derecho']);
  this.executeCharTest('【', ['soporte Lenticular Izquierdo Negro']);
  this.executeCharTest('】', ['soporte Lenticular Negro Derecho']);
  this.executeCharTest('〔', ['left tortoise shell bracket']);
  this.executeCharTest('〕', ['right tortoise shell bracket']);
  this.executeCharTest('〖', ['soporte lenticular blanco izquierdo']);
  this.executeCharTest('〗', ['soporte lenticular blanco derecho']);
  this.executeCharTest('〘', ['soporte de caparazón de tortuga blanca izquierda']);
  this.executeCharTest('〙', ['soporte de concha de tortuga blanca derecha']);
  this.executeCharTest('〚', ['corchete vacío']);
  this.executeCharTest('〛', ['corchete vacío derecho']);
  this.executeCharTest('〝', ['comilla doble invertida']);
  this.executeCharTest('〞', ['segunda']);
  this.executeCharTest('〟', ['comillas bajas dobles']);
  this.executeCharTest('﴾', ['paréntesis izquierdo adornado']);
  this.executeCharTest('﴿', ['paréntesis derecho adornado']);
  this.executeCharTest('︗', ['formulario de presentación para soporte lenticular blanco izquierdo vertical']);
  this.executeCharTest('︘', ['formulario de presentación para soporte lenticular blanco vertical derecho']);
  this.executeCharTest('︵', ['paréntesis superior']);
  this.executeCharTest('︶', ['paréntesis inferior']);
  this.executeCharTest('︷', ['llave superior']);
  this.executeCharTest('︸', ['llave inferior']);
  this.executeCharTest('︹', ['formulario de presentación para el soporte vertical de concha de tortuga izquierda']);
  this.executeCharTest('︺', ['formulario de presentación para el soporte vertical de concha de tortuga derecha']);
  this.executeCharTest('︻', ['formulario de presentación para el soporte lenticular negro izquierdo vertical']);
  this.executeCharTest('︼', ['formulario de presentación para el soporte lenticular negro derecho vertical']);
  this.executeCharTest('︽', ['formulario de presentación para soporte vertical doble ángulo izquierdo']);
  this.executeCharTest('︾', ['formulario de presentación para el soporte de ángulo recto doble vertical']);
  this.executeCharTest('︿', ['paréntesis angular superior']);
  this.executeCharTest('﹀', ['paréntesis angular inferior']);
  this.executeCharTest('﹁', ['formulario de presentación para soporte de esquina vertical izquierda']);
  this.executeCharTest('﹂', ['formulario de presentación para soporte de esquina vertical derecha']);
  this.executeCharTest('﹃', ['formulario de presentación para soporte de esquina blanco vertical izquierdo']);
  this.executeCharTest('﹄', ['formulario de presentación para soporte de esquina vertical derecha blanca']);
  this.executeCharTest('﹇', ['formulario de presentación para soporte cuadrado vertical izquierdo']);
  this.executeCharTest('﹈', ['formulario de presentación para soporte cuadrado vertical derecho']);
  this.executeCharTest('﹙', ['pequeño paréntesis izquierdo']);
  this.executeCharTest('﹚', ['paréntesis derecho pequeño']);
  this.executeCharTest('﹛', ['corchete Rizado Izquierdo Pequeño']);
  this.executeCharTest('﹜', ['corchete derecho rizado pequeño']);
  this.executeCharTest('﹝', ['soporte de concha pequeña tortuga izquierda']);
  this.executeCharTest('﹞', ['pequeño corchete derecho de concha de tortuga']);
  this.executeCharTest('（', ['paréntesis izquierdo de ancho completo']);
  this.executeCharTest('）', ['paréntesis derecho de ancho completo']);
  this.executeCharTest('［', ['soporte cuadrado izquierdo de ancho completo']);
  this.executeCharTest('］', ['soporte cuadrado derecho de ancho completo']);
  this.executeCharTest('｛', ['corchete rizado izquierdo de ancho completo']);
  this.executeCharTest('｝', ['corchete derecho de ancho completo']);
  this.executeCharTest('｟', ['paréntesis blanco izquierdo de ancho completo']);
  this.executeCharTest('｠', ['paréntesis blanco derecho de ancho completo']);
  this.executeCharTest('｢', ['corchete de esquina izquierda de medio ancho']);
  this.executeCharTest('｣', ['soporte de esquina derecha de medio ancho']);
  this.executeCharTest('─', ['delimitador horizontal']);
  this.executeCharTest('━', ['dibujos de cajas pesadas horizontales']);
  this.executeCharTest('│', ['delimitador vertical']);
  this.executeCharTest('┃', ['dibujos de cajas Pesado Vertical']);
  this.executeCharTest('┄', ['dibujos de cajas Light Triple Dash Horizontal']);
  this.executeCharTest('┅', ['dibujos de cajas Heavy Triple Dash Horizontal']);
  this.executeCharTest('┆', ['dibujos de cajas Light Triple Dash Vertical']);
  this.executeCharTest('┇', ['dibujos de cajas Heavy Triple Dash Vertical']);
  this.executeCharTest('┈', ['caja Dibujos Ligero Cuadruple Dash Horizontal']);
  this.executeCharTest('┉', ['dibujos de cajas Heavy Quadruple Dash Horizontal']);
  this.executeCharTest('┊', ['caja Dibujos Luz Cuadruple Tablero Vertical']);
  this.executeCharTest('┋', ['dibujos de cajas Heavy Quadruple Dash Vertical']);
  this.executeCharTest('┌', ['esquina inferior derecha']);
  this.executeCharTest('┍', ['dibujos de cajas Abajo Ligero y Derecho Pesado']);
  this.executeCharTest('┎', ['dibujos de cajas abajo pesados ​​y rectos ligeros']);
  this.executeCharTest('┏', ['dibujos de cajas pesados ​​abajo y derecha']);
  this.executeCharTest('┐', ['esquina inferior izquierda']);
  this.executeCharTest('┑', ['dibujos de cajas abajo ligeros y pesados ​​a la izquierda']);
  this.executeCharTest('┒', ['dibujos de cajas abajo pesados ​​y luz izquierda']);
  this.executeCharTest('┓', ['dibujos de cajas pesados ​​hacia abajo y hacia la izquierda']);
  this.executeCharTest('└', ['esquina superior derecha']);
  this.executeCharTest('┕', ['dibujos de cajas hasta ligero y derecho pesado']);
  this.executeCharTest('┖', ['dibujos de cajas hasta Pesadas y Ligeras']);
  this.executeCharTest('┗', ['dibujos de cajas pesados ​​y derechos']);
  this.executeCharTest('┘', ['esquina superior izquierda']);
  this.executeCharTest('┙', ['dibujos de cajas hasta livianos y pesados ​​a la izquierda']);
  this.executeCharTest('┚', ['dibujos de cajas hasta pesado y luz izquierda']);
  this.executeCharTest('┛', ['dibujos de cajas pesados ​​hacia arriba y hacia la izquierda']);
  this.executeCharTest('├', ['delimitador izquierdo y separador horizontal']);
  this.executeCharTest('┝', ['cuadros de caja Vertical ligero y derecho pesado']);
  this.executeCharTest('┞', ['dibujos de cajas hasta pesados ​​y rectos hacia abajo']);
  this.executeCharTest('┟', ['dibujos de cajas abajo pesados ​​y rectos arriba ligeros']);
  this.executeCharTest('┠', ['dibujos de cajas verticales pesadas y rectas ligeras']);
  this.executeCharTest('┡', ['dibujos de cajas abajo ligeros y rectos arriba pesados']);
  this.executeCharTest('┢', ['dibujos de cajas para arriba livianos y rectos para abajo pesados']);
  this.executeCharTest('┣', ['dibujos de cajas pesadas verticales y derechas']);
  this.executeCharTest('┤', ['delimitador derecho y separador horizontal']);
  this.executeCharTest('┥', ['cuadros de caja Vertical ligero y izquierdo pesado']);
  this.executeCharTest('┦', ['dibujos de cajas para arriba Pesado y Izquierda Abajo Luz']);
  this.executeCharTest('┧', ['dibujos de cajas abajo pesados ​​y luz izquierda arriba']);
  this.executeCharTest('┨', ['dibujos de cajas verticales pesadas y luz izquierda']);
  this.executeCharTest('┩', ['dibujos de cajas abajo ligeros e izquierdos arriba pesados']);
  this.executeCharTest('┪', ['dibujos de cajas para arriba Ligero y Izquierda Abajo Pesado']);
  this.executeCharTest('┫', ['dibujos de cajas pesadas verticales e izquierdas']);
  this.executeCharTest('┬', ['delimitador superior y separador vertical']);
  this.executeCharTest('┭', ['dibujos de cajas izquierda pesados ​​y derecha abajo luz']);
  this.executeCharTest('┮', ['dibujos de cajas, derecha, pesada y izquierda abajo, luz']);
  this.executeCharTest('┯', ['dibujos de cajas abajo ligeros y horizontales pesados']);
  this.executeCharTest('┰', ['dibujos de cajas de luz pesada y horizontal']);
  this.executeCharTest('┱', ['dibujos de la caja de luz derecha y izquierda abajo pesado']);
  this.executeCharTest('┲', ['cuadros de caja izquierda ligera y derecha abajo pesada']);
  this.executeCharTest('┳', ['dibujos de cajas pesados ​​y horizontales']);
  this.executeCharTest('┴', ['delimitador inferior y separador vertical']);
  this.executeCharTest('┵', ['dibujos de cajas izquierda pesada y derecha arriba ligera']);
  this.executeCharTest('┶', ['dibujos de caja derecha pesada y luz izquierda arriba']);
  this.executeCharTest('┷', ['dibujos de cajas hasta ligero y horizontal pesado']);
  this.executeCharTest('┸', ['dibujos de cajas hasta luz pesada y horizontal']);
  this.executeCharTest('┹', ['dibujos de cajas a la derecha, livianos y a la izquierda, pesados']);
  this.executeCharTest('┺', ['dibujos de cajas Izquierda Ligera y Derecha Arriba Pesada']);
  this.executeCharTest('┻', ['dibujos de cajas pesados ​​y horizontales']);
  this.executeCharTest('┼', ['cruce de separadores sencillos']);
  this.executeCharTest('┽', ['dibujos de cajas Izquierda Pesada y Derecha Vertical Luz']);
  this.executeCharTest('┾', ['dibujos de caja derecha pesada y luz vertical izquierda']);
  this.executeCharTest('┿', ['dibujos de cajas Vertical Ligera y Horizontal Pesada']);
  this.executeCharTest('╀', ['dibujos de cajas para arriba pesados ​​y abajo luz horizontal']);
  this.executeCharTest('╁', ['dibujos de cajas hacia abajo pesados ​​y hacia arriba luz horizontal']);
  this.executeCharTest('╂', ['dibujos de cajas verticales pesadas y horizontales ligeras']);
  this.executeCharTest('╃', ['dibujos de cajas Izquierda Arriba Pesada y Derecha abajo Luz']);
  this.executeCharTest('╄', ['dibujos de caja derecha arriba pesada y izquierda abajo luz']);
  this.executeCharTest('╅', ['dibujos de cajas, izquierda abajo, pesada y derecha arriba, ligera']);
  this.executeCharTest('╆', ['dibujos de la caja derecha abajo pesada y izquierda arriba ligera']);
  this.executeCharTest('╇', ['dibujos de cajas abajo ligeros y ascendentes horizontales pesados']);
  this.executeCharTest('╈', ['dibujos de cajas para arriba Ligero y para abajo horizontal pesado']);
  this.executeCharTest('╉', ['dibujos de cajas a la derecha, ligeros y a la izquierda, verticales, pesados']);
  this.executeCharTest('╊', ['dibujos de cajas Izquierda Ligera y Derecha Vertical Pesada']);
  this.executeCharTest('╋', ['dibujos de cajas pesadas verticales y horizontales']);
  this.executeCharTest('╌', ['dibujos de cajas Light Double Dash Horizontal']);
  this.executeCharTest('╍', ['dibujos de cajas Heavy Double Dash Horizontal']);
  this.executeCharTest('╎', ['dibujos de cajas Light Double Dash Vertical']);
  this.executeCharTest('╏', ['dibujos de cajas Heavy Double Dash Vertical']);
  this.executeCharTest('═', ['delimitador horizontal doble']);
  this.executeCharTest('║', ['delimitador vertical doble']);
  this.executeCharTest('╒', ['esquina inferior derecha, vertical doble']);
  this.executeCharTest('╓', ['esquina inferior derecha, horizontal doble']);
  this.executeCharTest('╔', ['esquina inferior derecha doble']);
  this.executeCharTest('╕', ['esquina inferior izquierda, vertical doble']);
  this.executeCharTest('╖', ['esquina inferior izquierda, horizontal doble']);
  this.executeCharTest('╗', ['esquina inferior izquierda doble']);
  this.executeCharTest('╘', ['esquina superior derecha, vertical doble']);
  this.executeCharTest('╙', ['esquina superior derecha, horizontal doble']);
  this.executeCharTest('╚', ['esquina superior derecha doble']);
  this.executeCharTest('╛', ['esquina superior izquierda, vertical doble']);
  this.executeCharTest('╜', ['esquina superior izquierda, horizontal doble']);
  this.executeCharTest('╝', ['esquina superior izquierda doble']);
  this.executeCharTest('╞', ['delimitador izquierdo con separador doble']);
  this.executeCharTest('╟', ['delimitador izquierdo doble con separador horizontal']);
  this.executeCharTest('╠', ['delimitador izquierdo y separador horizontal dobles']);
  this.executeCharTest('╡', ['delimitador derecho con separador doble']);
  this.executeCharTest('╢', ['delimitador derecho doble con separador horizontal']);
  this.executeCharTest('╣', ['delimitador derecho y separador horizontal dobles']);
  this.executeCharTest('╤', ['delimitador superior doble con separador vertical']);
  this.executeCharTest('╥', ['delimitador superior con separador vertical doble']);
  this.executeCharTest('╦', ['delimitador superior y separador vertical dobles']);
  this.executeCharTest('╧', ['delimitador inferior doble con separador vertical']);
  this.executeCharTest('╨', ['delimitador inferior con separador vertical doble']);
  this.executeCharTest('╩', ['delimitador inferior y separador vertical dobles']);
  this.executeCharTest('╪', ['cruce de separadores, vertical sencillo y horizontal doble']);
  this.executeCharTest('╫', ['cruce de separadores, vertical doble y horizontal sencillo']);
  this.executeCharTest('╬', ['cruce de separadores dobles']);
  this.executeCharTest('╭', ['dibujos de cajas de luz arco abajo y derecha']);
  this.executeCharTest('╮', ['dibujos de cajas de luz arco hacia abajo y hacia la izquierda']);
  this.executeCharTest('╯', ['dibujos de cajas de luz arco arriba y a la izquierda']);
  this.executeCharTest('╰', ['caja de dibujos de luz arco arriba y derecha']);
  this.executeCharTest('╱', ['dibujos de cajas Luz Diagonal Superior derecha a inferior izquierda']);
  this.executeCharTest('╲', ['dibujos de cajas Luz Diagonal Superior izquierda a inferior derecha']);
  this.executeCharTest('╳', ['dibujos de cajas de luz diagonal cruz']);
  this.executeCharTest('╴', ['dibujos de cajas luz izquierda']);
  this.executeCharTest('╵', ['dibujos de cajas se iluminan']);
  this.executeCharTest('╶', ['dibujos de cajas a la derecha']);
  this.executeCharTest('╷', ['dibujos de cajas de luz hacia abajo']);
  this.executeCharTest('╸', ['dibujos de cajas pesados ​​a la izquierda']);
  this.executeCharTest('╹', ['dibujos de cajas pesados']);
  this.executeCharTest('╺', ['caja de dibujos pesado derecho']);
  this.executeCharTest('╻', ['dibujos de cajas pesados']);
  this.executeCharTest('╼', ['dibujos de cajas Ligero Izquierda y Pesada Derecha']);
  this.executeCharTest('╽', ['dibujos de cajas iluminados y pesados']);
  this.executeCharTest('╾', ['dibujos de cajas Pesado Izquierda y Luz Derecha']);
  this.executeCharTest('╿', ['dibujos de cajas pesados ​​y ligeros']);
  this.executeCharTest('▀', ['bloque mitad superior']);
  this.executeCharTest('▁', ['bajar un octavo bloque']);
  this.executeCharTest('▂', ['bloque de un cuarto inferior']);
  this.executeCharTest('▃', ['bloque de tres octavos más bajo']);
  this.executeCharTest('▄', ['bloque mitad inferior']);
  this.executeCharTest('▅', ['bloque inferior de cinco octavos']);
  this.executeCharTest('▆', ['bloque de tres cuartos más bajo']);
  this.executeCharTest('▇', ['lower Seven Eighths Block']);
  this.executeCharTest('█', ['bloque']);
  this.executeCharTest('▉', ['bloque de siete octavos a la izquierda']);
  this.executeCharTest('▊', ['bloque de tres cuartos a la izquierda']);
  this.executeCharTest('▋', ['bloque de cinco octavos a la izquierda']);
  this.executeCharTest('▌', ['media cuadra izquierda']);
  this.executeCharTest('▍', ['bloque de tres octavos a la izquierda']);
  this.executeCharTest('▎', ['bloque de un cuarto a la izquierda']);
  this.executeCharTest('▏', ['izquierda un octavo bloque']);
  this.executeCharTest('▐', ['media cuadra derecha']);
  this.executeCharTest('░', ['sombra ligera']);
  this.executeCharTest('▒', ['sombra media']);
  this.executeCharTest('▓', ['sombra intensa']);
  this.executeCharTest('▔', ['upper One Eighth Block']);
  this.executeCharTest('▕', ['a la derecha un octavo bloque']);
  this.executeCharTest('▖', ['cuadrante inferior izquierdo']);
  this.executeCharTest('▗', ['cuadrante inferior derecho']);
  this.executeCharTest('▘', ['cuadrante superior izquierdo']);
  this.executeCharTest('▙', ['cuadrante superior izquierdo e inferior izquierdo e inferior derecho']);
  this.executeCharTest('▚', ['cuadrante superior izquierdo e inferior derecho']);
  this.executeCharTest('▛', ['cuadrante superior izquierdo y superior derecho e inferior izquierdo']);
  this.executeCharTest('▜', ['cuadrante superior izquierdo y superior derecho e inferior derecho']);
  this.executeCharTest('▝', ['cuadrante superior derecho']);
  this.executeCharTest('▞', ['cuadrante superior derecho e inferior izquierdo']);
  this.executeCharTest('▟', ['cuadrante superior derecho e inferior izquierdo e inferior derecho']);
  this.executeCharTest('■', ['cuadrado relleno']);
  this.executeCharTest('□', ['cuadrado']);
  this.executeCharTest('▢', ['cuadrado blanco con esquinas redondeadas']);
  this.executeCharTest('▣', ['cuadrado blanco que contiene cuadrado pequeño negro']);
  this.executeCharTest('▤', ['cuadrado con relleno horizontal']);
  this.executeCharTest('▥', ['cuadrado con relleno vertical']);
  this.executeCharTest('▦', ['cuadrado con relleno de rayado ortogonal']);
  this.executeCharTest('▧', ['cuadrado con la esquina superior izquierda a la derecha inferior']);
  this.executeCharTest('▨', ['cuadrado con la parte superior derecha hacia abajo izquierda Relleno']);
  this.executeCharTest('▩', ['cuadrado con relleno de rayado diagonal']);
  this.executeCharTest('▪', ['cuadrado relleno']);
  this.executeCharTest('▫', ['cuadrado']);
  this.executeCharTest('▬', ['rectángulo negro']);
  this.executeCharTest('▭', ['rectángulo']);
  this.executeCharTest('▮', ['rectángulo relleno vertical']);
  this.executeCharTest('▯', ['rectángulo vertical']);
  this.executeCharTest('▰', ['paralelogramo negro']);
  this.executeCharTest('▱', ['paralelogramo']);
  this.executeCharTest('▲', ['triángulo relleno']);
  this.executeCharTest('△', ['triángulo']);
  this.executeCharTest('▴', ['triángulo relleno']);
  this.executeCharTest('▵', ['triángulo']);
  this.executeCharTest('▶', ['triángulo relleno señala derecha']);
  this.executeCharTest('▷', ['triángulo señala derecha']);
  this.executeCharTest('▸', ['triángulo relleno señala derecha']);
  this.executeCharTest('▹', ['triángulo señala derecha']);
  this.executeCharTest('►', ['indicador de apuntar hacia la derecha negro']);
  this.executeCharTest('▻', ['puntero de apuntar hacia la derecha blanco']);
  this.executeCharTest('▼', ['triángulo relleno señala abajo']);
  this.executeCharTest('▽', ['triángulo señala abajo']);
  this.executeCharTest('▾', ['triángulo relleno señala abajo']);
  this.executeCharTest('▿', ['triángulo señala abajo']);
  this.executeCharTest('◀', ['triángulo relleno señala izquierda']);
  this.executeCharTest('◁', ['triángulo señala izquierda']);
  this.executeCharTest('◂', ['triángulo relleno señala izquierda']);
  this.executeCharTest('◃', ['triángulo señala izquierda']);
  this.executeCharTest('◄', ['puntero relleno señala izquierda']);
  this.executeCharTest('◅', ['puntero señala izquierda']);
  this.executeCharTest('◆', ['diamante relleno']);
  this.executeCharTest('◇', ['diamante']);
  this.executeCharTest('◈', ['diamante vacío contiene diamante relleno']);
  this.executeCharTest('◉', ['ojo de pez']);
  this.executeCharTest('◊', ['rombo']);
  this.executeCharTest('○', ['círculo vacío']);
  this.executeCharTest('◌', ['círculo punteado']);
  this.executeCharTest('◍', ['círculo con relleno vertical']);
  this.executeCharTest('◎', ['blanco']);
  this.executeCharTest('●', ['círculo relleno']);
  this.executeCharTest('◐', ['círculo con mitad izquierda rellena']);
  this.executeCharTest('◑', ['círculo con mitad derecha rellena']);
  this.executeCharTest('◒', ['círculo con mitad inferior rellena']);
  this.executeCharTest('◓', ['círculo con mitad superior rellena']);
  this.executeCharTest('◔', ['círculo con cuadrante superior derecho relleno']);
  this.executeCharTest('◕', ['círculo con cuadrante superior izquierdo relleno']);
  this.executeCharTest('◖', ['semicírculo izquierdo relleno']);
  this.executeCharTest('◗', ['semicírculo derecho relleno']);
  this.executeCharTest('◘', ['bullet inversa']);
  this.executeCharTest('◙', ['círculo vacío inverso']);
  this.executeCharTest('◚', ['semicírculo superior vacío inverso']);
  this.executeCharTest('◛', ['semicírculo superior vacío inverso']);
  this.executeCharTest('◜', ['arco superior izquierda']);
  this.executeCharTest('◝', ['arco superior derecha']);
  this.executeCharTest('◞', ['arco inferior derecha']);
  this.executeCharTest('◟', ['arco inferior izquierda']);
  this.executeCharTest('◠', ['semicírculo superior']);
  this.executeCharTest('◡', ['semicírculo inferior']);
  this.executeCharTest('◢', ['triángulo inferior derecha relleno']);
  this.executeCharTest('◣', ['triángulo inferior izquierda relleno']);
  this.executeCharTest('◤', ['triángulo superior izquierda relleno']);
  this.executeCharTest('◥', ['triángulo superior derecha relleno']);
  this.executeCharTest('◦', ['composición']);
  this.executeCharTest('◧', ['cuadrado con mitad izquierda rellena']);
  this.executeCharTest('◨', ['cuadrado con mitad derecha rellena']);
  this.executeCharTest('◩', ['cuadrado con mitad superior izquierda rellena']);
  this.executeCharTest('◪', ['cuadrado con mitad inferior derecha rellena']);
  this.executeCharTest('◫', ['cuadrado con bisectriz']);
  this.executeCharTest('◬', ['triángulo vacío con punto']);
  this.executeCharTest('◭', ['triángulo apuntando arriba con mitad izquierda rellena']);
  this.executeCharTest('◮', ['triángulo apuntando arriba con mitad derecha rellena']);
  this.executeCharTest('◯', ['círculo grande']);
  this.executeCharTest('◰', ['cuadrado blanco con cuadrante superior izquierdo']);
  this.executeCharTest('◱', ['cuadrado blanco con cuadrante inferior izquierdo']);
  this.executeCharTest('◲', ['cuadrado blanco con cuadrante inferior derecho']);
  this.executeCharTest('◳', ['cuadrado blanco con cuadrante superior derecho']);
  this.executeCharTest('◴', ['círculo blanco con cuadrante superior izquierdo']);
  this.executeCharTest('◵', ['círculo blanco con cuadrante inferior izquierdo']);
  this.executeCharTest('◶', ['círculo blanco con cuadrante inferior derecho']);
  this.executeCharTest('◷', ['círculo blanco con cuadrante superior derecho']);
  this.executeCharTest('◸', ['triángulo superior izquierda']);
  this.executeCharTest('◹', ['triángulo superior derecha']);
  this.executeCharTest('◺', ['triángulo inferior izquierda']);
  this.executeCharTest('◻', ['cuadrado mediano vacío']);
  this.executeCharTest('◼', ['cuadrado mediano relleno']);
  this.executeCharTest('◽', ['cuadrado mediano vacío']);
  this.executeCharTest('◾', ['cuadrado mediano relleno']);
  this.executeCharTest('◿', ['triángulo inferior derecha']);
  this.executeCharTest('⬒', ['cuadrado con mitad superior negra']);
  this.executeCharTest('⬓', ['cuadrado con mitad inferior negra']);
  this.executeCharTest('⬔', ['cuadrado con mitad derecha superior diagonal negra']);
  this.executeCharTest('⬕', ['cuadrado con mitad diagonal izquierda inferior negra']);
  this.executeCharTest('⬖', ['diamante con Mitad Izquierda Negro']);
  this.executeCharTest('⬗', ['diamante con mitad derecha negra']);
  this.executeCharTest('⬘', ['diamante con mitad superior negra']);
  this.executeCharTest('⬙', ['diamante con mitad inferior negra']);
  this.executeCharTest('⬚', ['cuadrado punteado']);
  this.executeCharTest('⬛', ['cuadrado grande negro']);
  this.executeCharTest('⬜', ['gran Plaza Blanca']);
  this.executeCharTest('⬝', ['cuadrado muy pequeño negro']);
  this.executeCharTest('⬞', ['cuadrado muy pequeño blanco']);
  this.executeCharTest('⬟', ['pentágono negro']);
  this.executeCharTest('⬠', ['pentágono blanco']);
  this.executeCharTest('⬡', ['hexágono blanco']);
  this.executeCharTest('⬢', ['hexágono negro']);
  this.executeCharTest('⬣', ['hexagonal negro horizontal']);
  this.executeCharTest('⬤', ['circulo grande negro']);
  this.executeCharTest('⬥', ['diamante Mediano Negro']);
  this.executeCharTest('⬦', ['diamante blanco medio']);
  this.executeCharTest('⬧', ['lozenge Mediano Negro']);
  this.executeCharTest('⬨', ['pastilla blanca mediana']);
  this.executeCharTest('⬩', ['pequeño diamante negro']);
  this.executeCharTest('⬪', ['lozenge pequeño negro']);
  this.executeCharTest('⬫', ['lozenge pequeño blanco']);
  this.executeCharTest('⬬', ['elipse horizontal negro']);
  this.executeCharTest('⬭', ['elipse horizontal blanco']);
  this.executeCharTest('⬮', ['elipse Vertical Negro']);
  this.executeCharTest('⬯', ['elipse Vertical Blanco']);
  this.executeCharTest('⭐', ['estrella media vacía']);
  this.executeCharTest('⭑', ['estrella pequeña rellena']);
  this.executeCharTest('⭒', ['estrella pequeña vacía']);
  this.executeCharTest('⭓', ['pentágono negro que señala hacia la derecha']);
  this.executeCharTest('⭔', ['pentágono blanco que señala hacia la derecha']);
  this.executeCharTest('⭕', ['círculo grande pesado']);
  this.executeCharTest('⭖', ['óvalo pesado con interior oval']);
  this.executeCharTest('⭗', ['círculo pesado con círculo dentro']);
  this.executeCharTest('⭘', ['círculo pesado']);
  this.executeCharTest('⭙', ['saltire en círculo pesado']);
  this.executeCharTest('↼', ['flecha izquierda con arpón arriba']);
  this.executeCharTest('↽', ['flecha izquierda con arpón debajo']);
  this.executeCharTest('↾', ['flecha arriba con arpón derecho']);
  this.executeCharTest('↿', ['flecha arriba con arpón izquierdo']);
  this.executeCharTest('⇀', ['flecha derecha con arpón arriba']);
  this.executeCharTest('⇁', ['flecha derecha con arpón debajo']);
  this.executeCharTest('⇂', ['flecha abajo con arpón derecho']);
  this.executeCharTest('⇃', ['flecha abajo con arpón izquierdo']);
  this.executeCharTest('⇋', ['arpón izquierdo arriba de arpón derecho']);
  this.executeCharTest('⇌', ['arpón derecho arriba de arpón izquierdo']);
  this.executeCharTest('⥊', ['barra izquierda arriba barra derecha abajo arpón']);
  this.executeCharTest('⥋', ['barra izquierda abajo barra derecha arriba arpón']);
  this.executeCharTest('⥌', ['up barb right down barb left harpoon']);
  this.executeCharTest('⥍', ['arriba barb izquierda abajo barb derecha arpón']);
  this.executeCharTest('⥎', ['barra izquierda arriba barra derecha arriba arpón']);
  this.executeCharTest('⥏', ['arpón a la derecha hacia arriba y abajo']);
  this.executeCharTest('⥐', ['barra izquierda abajo barra derecha abajo arpón']);
  this.executeCharTest('⥑', ['arpón a la izquierda hacia arriba y abajo']);
  this.executeCharTest('⥒', ['arpón a la izquierda con púa hasta la barra']);
  this.executeCharTest('⥓', ['arpón a la derecha con púa hasta la barra']);
  this.executeCharTest('⥔', ['arpón ascendente con púa derecha a barra']);
  this.executeCharTest('⥕', ['arpón hacia abajo con púa derecha a barra']);
  this.executeCharTest('⥖', ['arpón a la izquierda con púas abajo a la barra']);
  this.executeCharTest('⥗', ['arpón a la derecha con púa abajo a la barra']);
  this.executeCharTest('⥘', ['arpón ascendente con púa izquierda a barra']);
  this.executeCharTest('⥙', ['arpón hacia abajo con la barra izquierda a la barra']);
  this.executeCharTest('⥚', ['arpón a la izquierda con púa arriba de la barra']);
  this.executeCharTest('⥛', ['arpón a la derecha con púa arriba del bar']);
  this.executeCharTest('⥜', ['arpón ascendente con púa derecha de barra']);
  this.executeCharTest('⥝', ['arpón hacia abajo con púa derecha de barra']);
  this.executeCharTest('⥞', ['arpón a la izquierda con púa abajo de barra']);
  this.executeCharTest('⥟', ['arpón a la derecha con púa abajo de barra']);
  this.executeCharTest('⥠', ['arpón ascendente con púa izquierda de barra']);
  this.executeCharTest('⥡', ['arpón hacia abajo con barra izquierda de barra']);
  this.executeCharTest('⥢', ['arpón a la izquierda con púas arriba arriba arpón a la izquierda con púas abajo']);
  this.executeCharTest('⥣', ['arpón ascendente con púa izquierda al lado arpón ascendente con púa derecha']);
  this.executeCharTest('⥤', ['arpón a la derecha con púas arriba arriba arpón a la derecha con púas abajo']);
  this.executeCharTest('⥥', ['arpón hacia abajo con lengüeta a la izquierda al lado arpón hacia abajo con lengüeta a la derecha']);
  this.executeCharTest('⥦', ['arpón a la izquierda con púa arriba arriba arpón a la derecha con púa arriba']);
  this.executeCharTest('⥧', ['arpón a la izquierda con púa abajo arriba arpón a la derecha con púa abajo']);
  this.executeCharTest('⥨', ['arpón a la derecha con púas arriba arriba arpón a la izquierda con púas arriba']);
  this.executeCharTest('⥩', ['arpón a la derecha con púa abajo arriba arpón a la izquierda con púa abajo']);
  this.executeCharTest('⥪', ['barra con arpón hacia la izquierda']);
  this.executeCharTest('⥫', ['arpón hacia la izquierda con barra']);
  this.executeCharTest('⥬', ['barra con arpón hacia la derecha']);
  this.executeCharTest('⥭', ['arpón hacia la derecha con barra']);
  this.executeCharTest('⥮', ['arpón ascendente con púa izquierda al lado arpón hacia abajo con púa derecha']);
  this.executeCharTest('⥯', ['arpón hacia abajo con lengüeta a la izquierda al lado arpón hacia arriba con pica a la derecha']);
  this.executeCharTest('⥼', ['cola de pescado izquierda']);
  this.executeCharTest('⥽', ['cola de pescado derecha']);
  this.executeCharTest('⥾', ['barra con doble gancho']);
  this.executeCharTest('⥿', ['cola de pez abajo']);
  this.executeCharTest('ℏ', ['h barra']);
  this.executeCharTest('℔', ['L B símbolo de barra']);
  this.executeCharTest('№', ['signo de número']);
  this.executeCharTest('℗', ['derechos de autor de sonido']);
  this.executeCharTest('℞', ['receta']);
  this.executeCharTest('℟', ['respuesta']);
  this.executeCharTest('℠', ['marca de servicio']);
  this.executeCharTest('℡', ['señal de telefono']);
  this.executeCharTest('™', ['registrado']);
  this.executeCharTest('℣', ['versículo']);
  this.executeCharTest('℥', ['onza']);
  this.executeCharTest('Ω', ['ohmio']);
  this.executeCharTest('℧', ['ohmio invertido']);
  this.executeCharTest('K', ['grados kelvin']);
  this.executeCharTest('Å', ['angstrom']);
  this.executeCharTest('℮', ['Símbolo estimado']);
  this.executeCharTest('Ⅎ', ['mayúscula F invertida']);
  this.executeCharTest('ℹ', ['fuente de información']);
  this.executeCharTest('℺', ['capital rotado Q']);
  this.executeCharTest('℻', ['signo de fax']);
  this.executeCharTest('⅁', ['convertido sans serif mayúscula G']);
  this.executeCharTest('⅂', ['convertido sans serif mayúscula L']);
  this.executeCharTest('⅃', ['invertido sans serif mayúscula L']);
  this.executeCharTest('⅄', ['convertido en sans serif mayúscula Y']);
  this.executeCharTest('!', ['factorial']);
  this.executeCharTest('\"', ['comillas']);
  this.executeCharTest('#', ['almuhadilla']);
  this.executeCharTest('$', ['dólar']);
  this.executeCharTest('%', ['porciento']);
  this.executeCharTest('&', ['ampersand']);
  this.executeCharTest("'", ['prima']);
  this.executeCharTest('*', ['por']);
  this.executeCharTest('+', ['más']);
  this.executeCharTest(',', ['coma']);
  this.executeCharTest('-', ['menos']);
  this.executeCharTest('.', ['punto']);
  this.executeCharTest('/', ['barra oblicua']);
  this.executeCharTest(':', ['dos puntos']);
  this.executeCharTest(';', ['punto y coma']);
  this.executeCharTest('<', ['menor que']);
  this.executeCharTest('=', ['igual']);
  this.executeCharTest('>', ['mayor que']);
  this.executeCharTest('?', ['interrogación derecho']);
  this.executeCharTest('@', ['arroba']);
  this.executeCharTest('\\', ['barra inversa']);
  this.executeCharTest('^', ['circunflejo']);
  this.executeCharTest('_', ['subrayado']);
  this.executeCharTest('`', ['acento grave']);
  this.executeCharTest('|', ['barra vertical']);
  this.executeCharTest('~', ['tilde']);
  this.executeCharTest('¡', ['admiración izquierdo']);
  this.executeCharTest('¢', ['centavo']);
  this.executeCharTest('£', ['libra esterlina']);
  this.executeCharTest('¤', ['moneda']);
  this.executeCharTest('¥', ['yen']);
  this.executeCharTest('¦', ['barra vertical partida']);
  this.executeCharTest('§', ['sección']);
  this.executeCharTest('¨', ['diéresis']);
  this.executeCharTest('©', ['copyright']);
  this.executeCharTest('ª', ['ordinal femenino']);
  this.executeCharTest('«', ['comillas angulares izquierda']);
  this.executeCharTest('¬', ['negación']);
  this.executeCharTest('®', ['registrado']);
  this.executeCharTest('¯', ['barra']);
  this.executeCharTest('°', ['grado']);
  this.executeCharTest('±', ['más menos']);
  this.executeCharTest('´', ['acento agudo']);
  this.executeCharTest('µ', ['micro']);
  this.executeCharTest('¶', ['párrafo']);
  this.executeCharTest('·', ['punto medio']);
  this.executeCharTest('¸', ['cedilla']);
  this.executeCharTest('º', ['ordinal masculino']);
  this.executeCharTest('»', ['comillas angulares derecha']);
  this.executeCharTest('¿', ['interrogación izquierdo']);
  this.executeCharTest('×', ['por']);
  this.executeCharTest('÷', ['dividido']);
  this.executeCharTest('˘', ['breve']);
  this.executeCharTest('˙', ['punto en superescrito']);
  this.executeCharTest('˚', ['anillo en superescrito']);
  this.executeCharTest('˛', ['ogonek']);
  this.executeCharTest('˜', ['tilde']);
  this.executeCharTest('˝', ['doble acento agudo']);
  this.executeCharTest('‐', ['menos']);
  this.executeCharTest('‑', ['guión no rompible']);
  this.executeCharTest('‒', ['figura Dash']);
  this.executeCharTest('–', ['en raya']);
  this.executeCharTest('—', ['em raya']);
  this.executeCharTest('―', ['barra horizontal']);
  this.executeCharTest('‖', ['doble barra vertical']);
  this.executeCharTest('‗', ['línea baja doble']);
  this.executeCharTest('‘', ['comilla izquierda']);
  this.executeCharTest('’', ['comilla derecha']);
  this.executeCharTest('‚', ['comilla bajo 9']);
  this.executeCharTest('‛', ['marca de comillas simple con inversión alta-9']);
  this.executeCharTest('“', ['doble comilla']);
  this.executeCharTest('”', ['doble comilla derecha']);
  this.executeCharTest('„', ['doble comilla bajo 9']);
  this.executeCharTest('‟', ['doble alto-invertido-9 comillas']);
  this.executeCharTest('†', ['daga']);
  this.executeCharTest('‡', ['doble daga']);
  this.executeCharTest('•', ['bala']);
  this.executeCharTest('‣', ['bala triangular']);
  this.executeCharTest('․', ['líder de un punto']);
  this.executeCharTest('‥', ['dos puntos líder']);
  this.executeCharTest('…', ['puntos suspensivos']);
  this.executeCharTest('‧', ['punto de separación']);
  this.executeCharTest('‰', ['tanto por millar']);
  this.executeCharTest('‱', ['tanto por diez mil']);
  this.executeCharTest('′', ['prima']);
  this.executeCharTest('″', ['segunda']);
  this.executeCharTest('‴', ['tercera']);
  this.executeCharTest('‵', ['acento grave']);
  this.executeCharTest('‶', ['doble acento grave']);
  this.executeCharTest('‷', ['prime Prime invertido']);
  this.executeCharTest('‸', ['signo de intercalación']);
  this.executeCharTest('‹', ['comillas izquierda']);
  this.executeCharTest('›', ['comillas derecha']);
  this.executeCharTest('※', ['marca de referencia']);
  this.executeCharTest('‼', ['doble signo de exclamación']);
  this.executeCharTest('‽', ['interrobang']);
  this.executeCharTest('‾', ['barra superior']);
  this.executeCharTest('‿', ['undertie']);
  this.executeCharTest('⁀', ['ligadura']);
  this.executeCharTest('⁁', ['punto de inserción']);
  this.executeCharTest('⁂', ['asterismo']);
  this.executeCharTest('⁃', ['guión bala']);
  this.executeCharTest('⁄', ['barra de fracción']);
  this.executeCharTest('⁇', ['doble signo de interrogación']);
  this.executeCharTest('⁈', ['pregunta Signo de exclamación']);
  this.executeCharTest('⁉', ['signo de interrogación de exclamación']);
  this.executeCharTest('⁋', ['signo de Pilcrow invertido']);
  this.executeCharTest('⁌', ['bala negra hacia la izquierda']);
  this.executeCharTest('⁍', ['bala negra hacia la derecha']);
  this.executeCharTest('⁎', ['bajo asterisco']);
  this.executeCharTest('⁏', ['punto y coma invertido']);
  this.executeCharTest('⁐', ['cierre superior']);
  this.executeCharTest('⁑', ['dos asteriscos alineados verticalmente']);
  this.executeCharTest('⁒', ['signo de menos comercial']);
  this.executeCharTest('⁓', ['swung Dash']);
  this.executeCharTest('⁔', ['ropa interior invertida']);
  this.executeCharTest('⁕', ['signo de puntuación de la flor']);
  this.executeCharTest('⁖', ['puntuación de tres puntos']);
  this.executeCharTest('⁗', ['cuarta']);
  this.executeCharTest('⁘', ['puntuación de cuatro puntos']);
  this.executeCharTest('⁙', ['puntuación de cinco puntos']);
  this.executeCharTest('⁚', ['puntuación de dos puntos']);
  this.executeCharTest('⁛', ['marca de cuatro puntos']);
  this.executeCharTest('⁜', ['cruz punteada']);
  this.executeCharTest('⁝', ['tricolon']);
  this.executeCharTest('⁞', ['cuatro puntos verticales']);
  this.executeCharTest('⁺', ['superscript Plus Sign']);
  this.executeCharTest('⁻', ['superíndice menos']);
  this.executeCharTest('⁼', ['superscript Equals Sign']);
  this.executeCharTest('⁽', ['paréntesis izquierdo superíndice']);
  this.executeCharTest('⁾', ['paréntesis derecho superíndice']);
  this.executeCharTest('₊', ['signo de subíndice más']);
  this.executeCharTest('₋', ['subíndice menos']);
  this.executeCharTest('₌', ['signo de subíndice es igual']);
  this.executeCharTest('₍', ['subíndice paréntesis izquierdo']);
  this.executeCharTest('₎', ['subíndice de paréntesis derecho']);
  this.executeCharTest('⅊', ['línea de propiedad']);
  this.executeCharTest('⅋', ['ampersand convertido']);
  this.executeCharTest('⅌', ['por signo']);
  this.executeCharTest('⅍', ['aktieselskab']);
  this.executeCharTest('ⅎ', ['torneado pequeño f']);
  this.executeCharTest('∀', ['para todo']);
  this.executeCharTest('∁', ['complementario']);
  this.executeCharTest('∃', ['existe']);
  this.executeCharTest('∄', ['no existe']);
  this.executeCharTest('∅', ['conjunto vacío']);
  this.executeCharTest('∆', ['incremento']);
  this.executeCharTest('∈', ['perteneciente a']);
  this.executeCharTest('∉', ['no perteneciente a']);
  this.executeCharTest('∊', ['perteneciente a']);
  this.executeCharTest('∋', ['comprende a']);
  this.executeCharTest('∌', ['no comprende a']);
  this.executeCharTest('∍', ['comprende a']);
  this.executeCharTest('∎', ['fin de demostración']);
  this.executeCharTest('∏', ['producto']);
  this.executeCharTest('∐', ['coproducto']);
  this.executeCharTest('∑', ['sumatorio']);
  this.executeCharTest('−', ['menos']);
  this.executeCharTest('∓', ['menos más']);
  this.executeCharTest('∔', ['punto más']);
  this.executeCharTest('∕', ['barra de división']);
  this.executeCharTest('∖', ['menos']);
  this.executeCharTest('∗', ['asterisco']);
  this.executeCharTest('∘', ['composición']);
  this.executeCharTest('∙', ['bala']);
  this.executeCharTest('√', ['raíz']);
  this.executeCharTest('∛', ['raíz cúbica']);
  this.executeCharTest('∜', ['raíz cuarta']);
  this.executeCharTest('∝', ['proporcional a']);
  this.executeCharTest('∞', ['infinito']);
  this.executeCharTest('∟', ['ángulo recto']);
  this.executeCharTest('∠', ['ángulo']);
  this.executeCharTest('∡', ['ángulo medido']);
  this.executeCharTest('∢', ['ángulo esférico']);
  this.executeCharTest('∣', ['divide a']);
  this.executeCharTest('∤', ['no divide a']);
  this.executeCharTest('∥', ['paralela a']);
  this.executeCharTest('∦', ['no paralela a']);
  this.executeCharTest('∧', ['y']);
  this.executeCharTest('∨', ['o']);
  this.executeCharTest('∩', ['intersección']);
  this.executeCharTest('∪', ['unión']);
  this.executeCharTest('∫', ['integral']);
  this.executeCharTest('∬', ['integral doble']);
  this.executeCharTest('∭', ['integral triple']);
  this.executeCharTest('∮', ['integral de contorno']);
  this.executeCharTest('∯', ['integral de superficie']);
  this.executeCharTest('∰', ['integral de volumen']);
  this.executeCharTest('∱', ['integral de contorno en sentido horario']);
  this.executeCharTest('∲', ['integral de contorno en sentido horario']);
  this.executeCharTest('∳', ['integral de contorno en sentido antihorario']);
  this.executeCharTest('∴', ['por lo tanto']);
  this.executeCharTest('∵', ['porque']);
  this.executeCharTest('∶', ['razón']);
  this.executeCharTest('∷', ['proporción']);
  this.executeCharTest('∸', ['punto menos']);
  this.executeCharTest('∹', ['exceso']);
  this.executeCharTest('∺', ['proporción geométrica']);
  this.executeCharTest('∻', ['homotecia']);
  this.executeCharTest('∼', ['tilde']);
  this.executeCharTest('∽', ['tilde invertido']);
  this.executeCharTest('∾', ['s horizontal invertida']);
  this.executeCharTest('∿', ['sinusoide']);
  this.executeCharTest('≀', ['producto de guirnalda']);
  this.executeCharTest('≁', ['no tilde']);
  this.executeCharTest('≂', ['menos tilde']);
  this.executeCharTest('≃', ['asintóticamente igual a']);
  this.executeCharTest('≄', ['no asintóticamente igual a']);
  this.executeCharTest('≅', ['aproximadamente igual a']);
  this.executeCharTest('≆', ['aproximado pero no igual a']);
  this.executeCharTest('≇', ['no aproximado a']);
  this.executeCharTest('≈', ['aproximado']);
  this.executeCharTest('≉', ['no es casi igual a']);
  this.executeCharTest('≊', ['igual o casi igual a']);
  this.executeCharTest('≋', ['triple tilde']);
  this.executeCharTest('≌', ['todo igual a']);
  this.executeCharTest('≍', ['equivalente a']);
  this.executeCharTest('≎', ['geométricamente equivalente a']);
  this.executeCharTest('≏', ['diferencia entre']);
  this.executeCharTest('≐', ['se acerca al límite']);
  this.executeCharTest('≑', ['geométricamente igual a']);
  this.executeCharTest('≒', ['aproximadamente igual a o imagen de']);
  this.executeCharTest('≓', ['imagen de o aproximadamente igual a']);
  this.executeCharTest('≔', ['dos puntos igual']);
  this.executeCharTest('≕', ['igual dos puntos']);
  this.executeCharTest('≖', ['igual incluyendo anillo']);
  this.executeCharTest('≗', ['igual anillo a']);
  this.executeCharTest('≘', ['corresponde a']);
  this.executeCharTest('≙', ['estima a']);
  this.executeCharTest('≚', ['equiangular con']);
  this.executeCharTest('≛', ['igual con estrella']);
  this.executeCharTest('≜', ['igual con delta']);
  this.executeCharTest('≝', ['igual por definición a']);
  this.executeCharTest('≞', ['medido por']);
  this.executeCharTest('≟', ['igual con interrogante']);
  this.executeCharTest('≠', ['no es igual a']);
  this.executeCharTest('≡', ['idéntico a']);
  this.executeCharTest('≢', ['no es idéntico a']);
  this.executeCharTest('≣', ['estrictamente equivalente a']);
  this.executeCharTest('≤', ['menor o igual que']);
  this.executeCharTest('≥', ['mayor o igual que']);
  this.executeCharTest('≦', ['menor o igual que']);
  this.executeCharTest('≧', ['mayor o igual que']);
  this.executeCharTest('≨', ['estrictamente menor que']);
  this.executeCharTest('≩', ['estrictamente mayor que']);
  this.executeCharTest('≪', ['mucho menor que']);
  this.executeCharTest('≫', ['mucho mayor que']);
  this.executeCharTest('≬', ['entre']);
  this.executeCharTest('≭', ['no equivalente a']);
  this.executeCharTest('≮', ['no menor que']);
  this.executeCharTest('≯', ['no mayor que']);
  this.executeCharTest('≰', ['no menor ni igual a']);
  this.executeCharTest('≱', ['no mayor ni igual a']);
  this.executeCharTest('≲', ['menor o equivalente a']);
  this.executeCharTest('≳', ['mayor o equivalente a']);
  this.executeCharTest('≴', ['no menor ni equivalente a']);
  this.executeCharTest('≵', ['no mayor ni equivalente a']);
  this.executeCharTest('≶', ['menor o mayor que']);
  this.executeCharTest('≷', ['mayor o menor que']);
  this.executeCharTest('≸', ['no menor ni mayor que']);
  this.executeCharTest('≹', ['no mayor ni menor que']);
  this.executeCharTest('≺', ['precede a']);
  this.executeCharTest('≻', ['sigue a']);
  this.executeCharTest('≼', ['precede o es igual a']);
  this.executeCharTest('≽', ['sigue o es igual a']);
  this.executeCharTest('≾', ['precede o es equivalente a']);
  this.executeCharTest('≿', ['sigue o es equivalente a']);
  this.executeCharTest('⊀', ['no precede a']);
  this.executeCharTest('⊁', ['no sigue a']);
  this.executeCharTest('⊂', ['incluido en']);
  this.executeCharTest('⊃', ['contiene a']);
  this.executeCharTest('⊄', ['no incluido en']);
  this.executeCharTest('⊅', ['no contiene a']);
  this.executeCharTest('⊆', ['incluido o igual a']);
  this.executeCharTest('⊇', ['contiene o es igual a']);
  this.executeCharTest('⊈', ['no incluido ni igual a']);
  this.executeCharTest('⊉', ['no contiene ni es igual a']);
  this.executeCharTest('⊊', ['incluido estrictamente en']);
  this.executeCharTest('⊋', ['contiene estrictamente a']);
  this.executeCharTest('⊌', ['familia de conjuntos']);
  this.executeCharTest('⊍', ['producto de familia de conjuntos']);
  this.executeCharTest('⊎', ['unión de familia de conjuntos']);
  this.executeCharTest('⊏', ['imagen cuadrada de']);
  this.executeCharTest('⊐', ['original cuadrado de']);
  this.executeCharTest('⊑', ['imagen cuadrada de o igual a']);
  this.executeCharTest('⊒', ['original cuadrado de o igual a']);
  this.executeCharTest('⊓', ['intersección cuadrada']);
  this.executeCharTest('⊔', ['unión cuadrada']);
  this.executeCharTest('⊕', ['más en círculo']);
  this.executeCharTest('⊖', ['menos en círculo']);
  this.executeCharTest('⊗', ['por en círculo']);
  this.executeCharTest('⊘', ['barra en círculo']);
  this.executeCharTest('⊙', ['punto en círculo']);
  this.executeCharTest('⊚', ['anillo en círculo']);
  this.executeCharTest('⊛', ['asterisco en círculo']);
  this.executeCharTest('⊜', ['igual en círculo']);
  this.executeCharTest('⊝', ['menos en círculo']);
  this.executeCharTest('⊞', ['más en cuadrado']);
  this.executeCharTest('⊟', ['menos en cuadrado']);
  this.executeCharTest('⊠', ['veces en cuadrado']);
  this.executeCharTest('⊡', ['punto en cuadrado']);
  this.executeCharTest('⊢', ['t horizontal hacia la izquierda']);
  this.executeCharTest('⊣', ['t horizontal hacia la derecha']);
  this.executeCharTest('⊤', ['perpendicular']);
  this.executeCharTest('⊥', ['perpendicular invertida']);
  this.executeCharTest('⊦', ['afirmación']);
  this.executeCharTest('⊧', ['modela']);
  this.executeCharTest('⊨', ['verdadero']);
  this.executeCharTest('⊩', ['obliga']);
  this.executeCharTest('⊪', ['triple barra vertical torniquete derecho']);
  this.executeCharTest('⊫', ['doble barra vertical doble torniquete derecho']);
  this.executeCharTest('⊬', ['no prueba']);
  this.executeCharTest('⊭', ['falso']);
  this.executeCharTest('⊮', ['no obliga']);
  this.executeCharTest('⊯', ['doble barra vertical doble torniquete derecho negada']);
  this.executeCharTest('⊰', ['precede respecto de']);
  this.executeCharTest('⊱', ['sigue respecto de']);
  this.executeCharTest('⊲', ['subgrupo normal de']);
  this.executeCharTest('⊳', ['contiene como subgrupo normal a']);
  this.executeCharTest('⊴', ['subgrupo normal o es igual a']);
  this.executeCharTest('⊵', ['contiene como subgrupo normal o es igual a']);
  this.executeCharTest('⊶', ['original de']);
  this.executeCharTest('⊷', ['imagen de']);
  this.executeCharTest('⊸', ['multifunción']);
  this.executeCharTest('⊹', ['matriz hermitiana conjugada']);
  this.executeCharTest('⊺', ['interpola']);
  this.executeCharTest('⊻', ['o excluyente']);
  this.executeCharTest('⊼', ['no y']);
  this.executeCharTest('⊽', ['no o']);
  this.executeCharTest('⊿', ['triángulo rectángulo']);
  this.executeCharTest('⋀', ['y']);
  this.executeCharTest('⋁', ['o']);
  this.executeCharTest('⋂', ['intersección']);
  this.executeCharTest('⋃', ['unión']);
  this.executeCharTest('⋄', ['operador diamante']);
  this.executeCharTest('⋅', ['punto']);
  this.executeCharTest('⋆', ['estrella']);
  this.executeCharTest('⋇', ['dividido por']);
  this.executeCharTest('⋈', ['moño']);
  this.executeCharTest('⋉', ['factor normal izquierdo producto semidirecto']);
  this.executeCharTest('⋊', ['factor normal derecho producto semidirecto']);
  this.executeCharTest('⋋', ['producto semidirecto izquierdo']);
  this.executeCharTest('⋌', ['producto semidirecto derecho']);
  this.executeCharTest('⋍', ['tilde invertida igual a']);
  this.executeCharTest('⋎', ['o rizada']);
  this.executeCharTest('⋏', ['y rizada']);
  this.executeCharTest('⋐', ['doble incluido']);
  this.executeCharTest('⋑', ['doble contiene']);
  this.executeCharTest('⋒', ['doble intersección']);
  this.executeCharTest('⋓', ['doble unión']);
  this.executeCharTest('⋔', ['bieldo']);
  this.executeCharTest('⋕', ['paralela o igual a']);
  this.executeCharTest('⋖', ['menor que con punto']);
  this.executeCharTest('⋗', ['mayor que con punto']);
  this.executeCharTest('⋘', ['mucho menor que']);
  this.executeCharTest('⋙', ['mucho mayor que']);
  this.executeCharTest('⋚', ['menor igual o mayor que']);
  this.executeCharTest('⋛', ['mayor igual o menor que']);
  this.executeCharTest('⋜', ['menor o igual que']);
  this.executeCharTest('⋝', ['mayor o igual que']);
  this.executeCharTest('⋞', ['precede o es igual a']);
  this.executeCharTest('⋟', ['sigue o es igual a']);
  this.executeCharTest('⋠', ['no precede ni es igual a']);
  this.executeCharTest('⋡', ['no sigue ni es igual a']);
  this.executeCharTest('⋢', ['no es imagen cuadrada ni igual a']);
  this.executeCharTest('⋣', ['no es original cuadrada ni igual a']);
  this.executeCharTest('⋤', ['imagen cuadrada estricta']);
  this.executeCharTest('⋥', ['original cuadrada estricta']);
  this.executeCharTest('⋦', ['menor que no equivalente a']);
  this.executeCharTest('⋧', ['mayor que no equivalente a']);
  this.executeCharTest('⋨', ['precede no equivalente a']);
  this.executeCharTest('⋩', ['sigue no equivalente a']);
  this.executeCharTest('⋪', ['no subgrupo normal de']);
  this.executeCharTest('⋫', ['no contiene como subgrupo normal a']);
  this.executeCharTest('⋬', ['no es subgrupo normal ni igual a']);
  this.executeCharTest('⋭', ['no contiene como subgrupo normal ni es igual a']);
  this.executeCharTest('⋮', ['puntos suspensivos verticales']);
  this.executeCharTest('⋯', ['puntos suspensivos altos']);
  this.executeCharTest('⋰', ['puntos suspensivos diagonales subiendo']);
  this.executeCharTest('⋱', ['puntos suspensivos diagonales bajando']);
  this.executeCharTest('⋲', ['pertenece con trazo horizontal']);
  this.executeCharTest('⋳', ['pertenece con barra vertical al fin de raya horizontal']);
  this.executeCharTest('⋴', ['pertenece en pequeño con trazo vertical']);
  this.executeCharTest('⋵', ['pertenece con punto arriba']);
  this.executeCharTest('⋶', ['pertenece con barra arriba']);
  this.executeCharTest('⋷', ['perteneciente subrayado']);
  this.executeCharTest('⋸', ['perteneciente subrayado']);
  this.executeCharTest('⋹', ['pertenece con dos trazos horizontales']);
  this.executeCharTest('⋺', ['contiene o es igual a']);
  this.executeCharTest('⋻', ['contiene con marca']);
  this.executeCharTest('⋼', ['contiene con marca']);
  this.executeCharTest('⋽', ['contiene con barra']);
  this.executeCharTest('⋾', ['perteneciente con barra']);
  this.executeCharTest('⋿', ['z anotación asociación de bolsa']);
  this.executeCharTest('⌀', ['diámetro']);
  this.executeCharTest('⌂', ['casa']);
  this.executeCharTest('⌅', ['en proyectividad con']);
  this.executeCharTest('⌆', ['en perspectividad con']);
  this.executeCharTest('⌇', ['línea ondulada']);
  this.executeCharTest('⌐', ['no invertido']);
  this.executeCharTest('⌑', ['pastillas cuadradas']);
  this.executeCharTest('⌒', ['arco']);
  this.executeCharTest('⌓', ['segmento']);
  this.executeCharTest('⌔', ['sector']);
  this.executeCharTest('➕', ['signo más pesado']);
  this.executeCharTest('➖', ['signo menos pesado']);
  this.executeCharTest('➗', ['signo de la división pesada']);
  this.executeCharTest('➰', ['bucle rizado']);
  this.executeCharTest('➿', ['doble bucle rizado']);
  this.executeCharTest('⟁', ['triángulo encerrando triángulo']);
  this.executeCharTest('⟂', ['perpendicular']);
  this.executeCharTest('⟃', ['incluido en']);
  this.executeCharTest('⟄', ['contiene a']);
  this.executeCharTest('⟇', ['punto en círculo']);
  this.executeCharTest('⟈', ['atrás tajo antes de subconjunto']);
  this.executeCharTest('⟉', ['sobreconjunto antes de tajo']);
  this.executeCharTest('⟊', ['barra vertical con golpe horizontal']);
  this.executeCharTest('⟋', ['diagonal matemático de levantamiento']);
  this.executeCharTest('⟌', ['división larga']);
  this.executeCharTest('⟍', ['diagonal descendente matemática']);
  this.executeCharTest('⟎', ['cuadrado Lógico Y']);
  this.executeCharTest('⟏', ['cuadrado Lógico O']);
  this.executeCharTest('⟐', ['diamante blanco con punto centrado']);
  this.executeCharTest('⟑', ['y con punto interior']);
  this.executeCharTest('⟒', ['elemento de apertura hacia arriba']);
  this.executeCharTest('⟓', ['ángulo inferior derecho con punto']);
  this.executeCharTest('⟔', ['ángulo inferior izquierdo con punto']);
  this.executeCharTest('⟕', ['izquierdo exterior une']);
  this.executeCharTest('⟖', ['derecho exterior une']);
  this.executeCharTest('⟗', ['lleno exterior une']);
  this.executeCharTest('⟘', ['perpendicular inversa']);
  this.executeCharTest('⟙', ['perpendicular']);
  this.executeCharTest('⟚', ['izquierdo y derecho doble torniquete']);
  this.executeCharTest('⟛', ['doble T horizontal']);
  this.executeCharTest('⟜', ['multifunción por la izquierda']);
  this.executeCharTest('⟝', ['t horizontal derecha larga']);
  this.executeCharTest('⟞', ['t horizontal izquierda larga']);
  this.executeCharTest('⟟', ['perpendicular inversa con círculo arriba']);
  this.executeCharTest('⟠', ['pastilla dividida por regla horizontal']);
  this.executeCharTest('⟡', ['diamante cóncavo vacío']);
  this.executeCharTest('⟢', ['diamante cóncavo con tictac hacia izquierda']);
  this.executeCharTest('⟣', ['diamante cóncavo con tictac hacia derecha']);
  this.executeCharTest('⟤', ['cuadrado con tictac hacia izquierda']);
  this.executeCharTest('⟥', ['cuadrado con tictac hacia derecha']);
  this.executeCharTest('⤫', ['cruce en diagonal Cruce en diagonal Caída en diagonal']);
  this.executeCharTest('⤬', ['diagonal descendente Cruce diagonal ascendente']);
  this.executeCharTest('⦀', ['delimitador de barra vertical triple']);
  this.executeCharTest('⦁', ['punto de notación Z']);
  this.executeCharTest('⦂', ['tipo de notación Z Colon']);
  this.executeCharTest('⦙', ['valla punteada']);
  this.executeCharTest('⦚', ['zigzag en vertical']);
  this.executeCharTest('⦰', ['conjunto vacío invertido']);
  this.executeCharTest('⦱', ['conjunto vacío con barra']);
  this.executeCharTest('⦲', ['conjunto vacío con círculo']);
  this.executeCharTest('⦵', ['círculo con barra']);
  this.executeCharTest('⦶', ['barra en círculo']);
  this.executeCharTest('⦷', ['paralelas en círculo']);
  this.executeCharTest('⦸', ['círculo inverso solidus']);
  this.executeCharTest('⦹', ['perpendicular en círculo']);
  this.executeCharTest('⦺', ['círculo dividido por barra horizontal y mitad superior dividido por barra vertical']);
  this.executeCharTest('⦻', ['x superimpresa en círculo']);
  this.executeCharTest('⦼', ['circled anticlockwise rotated division']);
  this.executeCharTest('⦾', ['bullet vacía en círculo']);
  this.executeCharTest('⦿', ['bullet en círculo']);
  this.executeCharTest('⧀', ['menor que en círculo']);
  this.executeCharTest('⧁', ['mayor que en círculo']);
  this.executeCharTest('⧂', ['círculo con círculo a la derecha']);
  this.executeCharTest('⧃', ['circle with two horizontal strokes to the right']);
  this.executeCharTest('⧄', ['cuadrado con diagonal ascendente']);
  this.executeCharTest('⧅', ['cuadrado con diagonal descendente']);
  this.executeCharTest('⧆', ['asterisco cuadrado']);
  this.executeCharTest('⧇', ['pequeño círculo cuadrado']);
  this.executeCharTest('⧈', ['cuadrado cuadrado']);
  this.executeCharTest('⧉', ['dos cuadrados unidos']);
  this.executeCharTest('⧊', ['triángulo con punto arriba']);
  this.executeCharTest('⧋', ['triángulo con barra inferior']);
  this.executeCharTest('⧌', ['s en triangulo']);
  this.executeCharTest('⧍', ['triangle with serifs at bottom']);
  this.executeCharTest('⧎', ['triángulo hacia la derecha sobre triángulo hacia la izquierda']);
  this.executeCharTest('⧏', ['subgrupo normal o igual a']);
  this.executeCharTest('⧐', ['contiene como subgrupo normal o es igual a']);
  this.executeCharTest('⧑', ['pajarita Con Mitad Izquierda Negra']);
  this.executeCharTest('⧒', ['pajarita Con Mitad Derecha Negra']);
  this.executeCharTest('⧓', ['pajarita Negra']);
  this.executeCharTest('⧔', ['tiempos con Mitad Izquierda Negra']);
  this.executeCharTest('⧕', ['tiempos con la mitad derecha negra']);
  this.executeCharTest('⧖', ['reloj de arena blanco']);
  this.executeCharTest('⧗', ['reloj de arena negro']);
  this.executeCharTest('⧜', ['infinito incompleto']);
  this.executeCharTest('⧝', ['empate sobre el infinito']);
  this.executeCharTest('⧞', ['no infinito']);
  this.executeCharTest('⧟', ['multimapa de doble extremo']);
  this.executeCharTest('⧠', ['cuadrado con contorno contorneado']);
  this.executeCharTest('⧡', ['aumenta como']);
  this.executeCharTest('⧢', ['shuffle Product']);
  this.executeCharTest('⧣', ['igual tachado doble ']);
  this.executeCharTest('⧤', ['igual con tilde, con doble tachado']);
  this.executeCharTest('⧥', ['idéntico a con doble tachado']);
  this.executeCharTest('⧦', ['gleich Stark']);
  this.executeCharTest('⧧', ['termodinamica']);
  this.executeCharTest('⧨', ['triángulo que apunta hacia abajo con la mitad izquierda negra']);
  this.executeCharTest('⧩', ['triángulo que apunta hacia abajo con la mitad derecha negra']);
  this.executeCharTest('⧫', ['rombo relleno']);
  this.executeCharTest('⧮', ['plaza blanca con error']);
  this.executeCharTest('⧯', ['error en la Plaza Negra']);
  this.executeCharTest('⧰', ['error White Barred Diamond']);
  this.executeCharTest('⧱', ['error Black Barred Diamond']);
  this.executeCharTest('⧲', ['círculo blanco con error']);
  this.executeCharTest('⧳', ['círculo negro con barras de error']);
  this.executeCharTest('⧴', ['rule delayed']);
  this.executeCharTest('⧵', ['operador de Solidus Inverso']);
  this.executeCharTest('⧶', ['solidus with overbar']);
  this.executeCharTest('⧷', ['solidus inverso con trazo horizontal']);
  this.executeCharTest('⧸', ['sólido grande']);
  this.executeCharTest('⧹', ['sólido inverso grande']);
  this.executeCharTest('⧺', ['doble Plus']);
  this.executeCharTest('⧻', ['triple Plus']);
  this.executeCharTest('⧾', ['minúsculo']);
  this.executeCharTest('⧿', ['miny']);
  this.executeCharTest('⨀', ['operador de puntos circulares N-Ary']);
  this.executeCharTest('⨁', ['operador N-Ary Circled Plus']);
  this.executeCharTest('⨂', ['operador de los tiempos en círculo de N-Ary']);
  this.executeCharTest('⨃', ['operador de la unión N-Ary con punto']);
  this.executeCharTest('⨄', ['n-Ary Union Operator con Plus']);
  this.executeCharTest('⨅', ['operador de intersecciones cuadradas N-Ary']);
  this.executeCharTest('⨆', ['n-Ary Square Union Operator']);
  this.executeCharTest('⨇', ['dos lógico y operador']);
  this.executeCharTest('⨈', ['dos lógico u operador']);
  this.executeCharTest('⨉', ['operador de N-Ary Times']);
  this.executeCharTest('⨊', ['modulo dos sumas']);
  this.executeCharTest('⨋', ['suma con Integral']);
  this.executeCharTest('⨌', ['operador integral cuádruple']);
  this.executeCharTest('⨍', ['finite part integral']);
  this.executeCharTest('⨎', ['integral con Doble Trazo']);
  this.executeCharTest('⨏', ['promedio Integral con Slash']);
  this.executeCharTest('⨐', ['circulation function']);
  this.executeCharTest('⨑', ['integral en sentido antihorario']);
  this.executeCharTest('⨒', ['integral lineal para rectángulo en polo']);
  this.executeCharTest('⨓', ['integral lineal para semicírculo en polo']);
  this.executeCharTest('⨔', ['integral lineal excluyendo el polo']);
  this.executeCharTest('⨕', ['integral en torno de un punto operador']);
  this.executeCharTest('⨖', ['operador integral para cuaterniones']);
  this.executeCharTest('⨘', ['integral con Times Sign']);
  this.executeCharTest('⨙', ['integral con Intersección']);
  this.executeCharTest('⨚', ['integral con union']);
  this.executeCharTest('⨛', ['integral con Overbar']);
  this.executeCharTest('⨜', ['integral con barra inferior']);
  this.executeCharTest('⨝', ['unirse']);
  this.executeCharTest('⨞', ['operador de triángulo izquierdo grande']);
  this.executeCharTest('⨟', ['composición de esquemas de notación Z']);
  this.executeCharTest('⨠', ['esquema de notación Z']);
  this.executeCharTest('⨡', ['proyección del esquema de notación Z']);
  this.executeCharTest('⨢', ['más con círculo']);
  this.executeCharTest('⨣', ['más con ángulo']);
  this.executeCharTest('⨤', ['tilde con más suscrito']);
  this.executeCharTest('⨥', ['más con punto inferior']);
  this.executeCharTest('⨦', ['tilde con más']);
  this.executeCharTest('⨧', ['más con 2 suscrito']);
  this.executeCharTest('⨨', ['signo más con triángulo negro']);
  this.executeCharTest('⨩', ['menos con coma']);
  this.executeCharTest('⨪', ['menos con punto inferior']);
  this.executeCharTest('⨫', ['signo menos con puntos que caen']);
  this.executeCharTest('⨬', ['signo menos con puntos crecientes']);
  this.executeCharTest('⨭', ['más en semicírculo izquierdo']);
  this.executeCharTest('⨮', ['más en semicírculo derecho']);
  this.executeCharTest('⨯', ['producto vectorial']);
  this.executeCharTest('⨰', ['por con punto']);
  this.executeCharTest('⨱', ['por con subrayado']);
  this.executeCharTest('⨲', ['producto semidirecto con fondo cerrado']);
  this.executeCharTest('⨳', ['smash product']);
  this.executeCharTest('⨴', ['por en semicírculo izquierdo']);
  this.executeCharTest('⨵', ['por en semicírculo derecho']);
  this.executeCharTest('⨶', ['por en círculo con ángulo']);
  this.executeCharTest('⨷', ['por en anillo']);
  this.executeCharTest('⨸', ['división en círculo']);
  this.executeCharTest('⨹', ['más en triángulo']);
  this.executeCharTest('⨺', ['menos en triángulo']);
  this.executeCharTest('⨻', ['por en triángulo']);
  this.executeCharTest('⨼', ['producto interior']);
  this.executeCharTest('⨽', ['producto interior derecho']);
  this.executeCharTest('⨾', ['notación Z Composición Relacional']);
  this.executeCharTest('⨿', ['coproducto']);
  this.executeCharTest('⩀', ['intersección con punto']);
  this.executeCharTest('⩁', ['unión con signo de menos']);
  this.executeCharTest('⩂', ['unión con barra']);
  this.executeCharTest('⩃', ['intersección con barra']);
  this.executeCharTest('⩄', ['intersección con and']);
  this.executeCharTest('⩅', ['unión con or']);
  this.executeCharTest('⩆', ['unión sobre intersección']);
  this.executeCharTest('⩇', ['intersección sobre unión']);
  this.executeCharTest('⩈', ['unión sobre barra, sobre intersección']);
  this.executeCharTest('⩉', ['intersección sobre barra, sobre unión ']);
  this.executeCharTest('⩊', ['unión y unión']);
  this.executeCharTest('⩋', ['intersección e intersección']);
  this.executeCharTest('⩌', ['unión cerrada']);
  this.executeCharTest('⩍', ['intersección cerrada']);
  this.executeCharTest('⩎', ['intersección cuadrada doble']);
  this.executeCharTest('⩏', ['unión cuadrada doble']);
  this.executeCharTest('⩐', ['unión cerrada con por']);
  this.executeCharTest('⩑', ['lógico y con punto arriba.']);
  this.executeCharTest('⩒', ['lógico o con punto arriba']);
  this.executeCharTest('⩓', ['y']);
  this.executeCharTest('⩔', ['o']);
  this.executeCharTest('⩕', ['two intersecting logical and']);
  this.executeCharTest('⩖', ['two intersecting logical or']);
  this.executeCharTest('⩗', ['sloping large or']);
  this.executeCharTest('⩘', ['sloping large and']);
  this.executeCharTest('⩙', ['lógica o superpuesta, lógica y']);
  this.executeCharTest('⩚', ['logical and with middle stem']);
  this.executeCharTest('⩛', ['logical or with middle stem']);
  this.executeCharTest('⩜', ['logical and with horizontal dash']);
  this.executeCharTest('⩝', ['logical or with horizontal dash']);
  this.executeCharTest('⩞', ['lógica y con doble Overbar']);
  this.executeCharTest('⩟', ['logical and with underbar']);
  this.executeCharTest('⩠', ['lógica y con doble barra inferior.']);
  this.executeCharTest('⩡', ['pequeño Vee con Underbar']);
  this.executeCharTest('⩢', ['lógica o con doble barra.']);
  this.executeCharTest('⩣', ['lógica o con doble barra inferior']);
  this.executeCharTest('⩤', ['notación Z Dominio Antirestricción']);
  this.executeCharTest('⩥', ['rango de notación Z Antirestricción']);
  this.executeCharTest('⩦', ['igual con punto suscrito']);
  this.executeCharTest('⩧', ['idéntico con punto arriba']);
  this.executeCharTest('⩨', ['triple barra horizontal con doble movimiento vertical']);
  this.executeCharTest('⩩', ['triple barra horizontal con triple movimiento vertical']);
  this.executeCharTest('⩪', ['tilde con punto']);
  this.executeCharTest('⩫', ['operador de tilde con puntos crecientes']);
  this.executeCharTest('⩬', ['similares menos similares']);
  this.executeCharTest('⩭', ['congruente con punto']);
  this.executeCharTest('⩮', ['igual a Asterisco']);
  this.executeCharTest('⩯', ['casi igual con ángulo']);
  this.executeCharTest('⩰', ['aproximadamente igual o igual a']);
  this.executeCharTest('⩱', ['igual con más suscrito']);
  this.executeCharTest('⩲', ['igual con más']);
  this.executeCharTest('⩳', ['igual con operador tilde']);
  this.executeCharTest('⩴', ['igual con dos puntos']);
  this.executeCharTest('⩵', ['igual doble']);
  this.executeCharTest('⩶', ['tres signos de igualdad consecutivos']);
  this.executeCharTest('⩷', ['igual entre cuatro puntos']);
  this.executeCharTest('⩸', ['equivalente con cuatro puntos']);
  this.executeCharTest('⩹', ['menor que con círculo interior']);
  this.executeCharTest('⩺', ['mayor que con círculo interior']);
  this.executeCharTest('⩻', ['menor que con interrogante']);
  this.executeCharTest('⩼', ['mayor que con interrogante']);
  this.executeCharTest('⩽', ['estrictamente menor que']);
  this.executeCharTest('⩾', ['estrictamente mayor que']);
  this.executeCharTest('⩿', ['estrictamente menor que con punto interior']);
  this.executeCharTest('⪀', ['estrictamente mayor que con punto interior']);
  this.executeCharTest('⪁', ['estrictamente menor que con punto']);
  this.executeCharTest('⪂', ['estrictamente mayor que con punto']);
  this.executeCharTest('⪃', ['estrictamente menor que con punto']);
  this.executeCharTest('⪄', ['estrictamente mayor que con punto']);
  this.executeCharTest('⪅', ['menor que o aproximado']);
  this.executeCharTest('⪆', ['mayor que o aproximado']);
  this.executeCharTest('⪇', ['menor que una línea no es igual a']);
  this.executeCharTest('⪈', ['mayores y una sola línea no son iguales a']);
  this.executeCharTest('⪉', ['menor que, pero no aproximado a']);
  this.executeCharTest('⪊', ['mayor que, pero no aproximado a']);
  this.executeCharTest('⪋', ['menos que arriba de la doble línea igual por encima de mayor que']);
  this.executeCharTest('⪌', ['más que arriba de la línea doble igual sobre menos que']);
  this.executeCharTest('⪍', ['menor, similar o igual a']);
  this.executeCharTest('⪎', ['mayor, similar o igual a']);
  this.executeCharTest('⪏', ['menor, similar o mayor que']);
  this.executeCharTest('⪐', ['mayor, similar o menor que']);
  this.executeCharTest('⪑', ['menor, mayor o igual a']);
  this.executeCharTest('⪒', ['mayor, menor o igual a']);
  this.executeCharTest('⪓', ['estrictamente menor o mayor que']);
  this.executeCharTest('⪔', ['estrictamente mayor o menor que']);
  this.executeCharTest('⪕', ['inclinado igual o menor que']);
  this.executeCharTest('⪖', ['inclinado igual o mayor que']);
  this.executeCharTest('⪗', ['estrictamente menor que con punto interior']);
  this.executeCharTest('⪘', ['estrictamente mayor que con punto interior']);
  this.executeCharTest('⪙', ['menor o igual a']);
  this.executeCharTest('⪚', ['mayor o igual a']);
  this.executeCharTest('⪛', ['doble línea inclinada igual o menor que']);
  this.executeCharTest('⪜', ['doble línea inclinada igual o mayor que']);
  this.executeCharTest('⪝', ['equivalente o menor que']);
  this.executeCharTest('⪞', ['mayor o similar a']);
  this.executeCharTest('⪟', ['similar, menor o igual a']);
  this.executeCharTest('⪠', ['similar, mayor o igual a']);
  this.executeCharTest('⪡', ['mucho menor que']);
  this.executeCharTest('⪢', ['mucho mayor que']);
  this.executeCharTest('⪣', ['doble anidada menor que con barra inferior']);
  this.executeCharTest('⪤', ['menor que, mayor que']);
  this.executeCharTest('⪥', ['mayor o menor que']);
  this.executeCharTest('⪦', ['menor que cerrado con curva']);
  this.executeCharTest('⪧', ['mayor que cerrado con curva']);
  this.executeCharTest('⪨', ['estrictamente menor que cerrado con curva']);
  this.executeCharTest('⪩', ['estrictamente mayor que cerrado con curva']);
  this.executeCharTest('⪪', ['más reducido que']);
  this.executeCharTest('⪫', ['más amplio que']);
  this.executeCharTest('⪬', ['más reducido o igual a']);
  this.executeCharTest('⪭', ['más amplio o igual a']);
  this.executeCharTest('⪮', ['diferencia entre']);
  this.executeCharTest('⪯', ['precede o es igual a']);
  this.executeCharTest('⪰', ['sucede por encima de la línea de igual signo']);
  this.executeCharTest('⪱', ['precede por encima de una línea no es igual a']);
  this.executeCharTest('⪲', ['tiene éxito por encima de una línea no es igual a']);
  this.executeCharTest('⪳', ['precede arriba del signo igual']);
  this.executeCharTest('⪴', ['sucede por encima del signo igual']);
  this.executeCharTest('⪵', ['precede estrictamente a']);
  this.executeCharTest('⪶', ['sigue estrictamente a']);
  this.executeCharTest('⪷', ['precede por encima de casi igual a']);
  this.executeCharTest('⪸', ['tiene éxito por encima de casi igual a']);
  this.executeCharTest('⪹', ['precede arriba no es igual a']);
  this.executeCharTest('⪺', ['tiene éxito por encima de no casi igual a']);
  this.executeCharTest('⪻', ['precede mucho antes']);
  this.executeCharTest('⪼', ['sigue mucho después']);
  this.executeCharTest('⪽', ['subrelación de']);
  this.executeCharTest('⪾', ['contiene como subrelación a']);
  this.executeCharTest('⪿', ['incluido con más suscrito']);
  this.executeCharTest('⫀', ['contiene con más suscrito']);
  this.executeCharTest('⫁', ['incluido con por suscrito']);
  this.executeCharTest('⫂', ['contiene con por suscrito']);
  this.executeCharTest('⫃', ['incluido con punto o es igual a']);
  this.executeCharTest('⫄', ['contiene con punto o es igual a']);
  this.executeCharTest('⫅', ['subconjunto de signo igual arriba']);
  this.executeCharTest('⫆', ['superconjunto de signo igual arriba']);
  this.executeCharTest('⫇', ['incluido aproximadamente en']);
  this.executeCharTest('⫈', ['contiene aproximadamente a']);
  this.executeCharTest('⫉', ['subconjunto de Arriba Casi Igual a']);
  this.executeCharTest('⫊', ['superconjunto de arriba casi igual a']);
  this.executeCharTest('⫋', ['subconjunto de lo anterior no es igual a']);
  this.executeCharTest('⫌', ['superconjunto de arriba no es igual a']);
  this.executeCharTest('⫍', ['operador de caja abierta a la izquierda cuadrada']);
  this.executeCharTest('⫎', ['operador de caja abierta a la derecha cuadrada']);
  this.executeCharTest('⫏', ['incluido con cierre en']);
  this.executeCharTest('⫐', ['contiene al cierre del subconjunto']);
  this.executeCharTest('⫑', ['incluido el cierre o es igual a']);
  this.executeCharTest('⫒', ['contiene al cierre del subconjunto o es igual a']);
  this.executeCharTest('⫓', ['está incluido o contiene a']);
  this.executeCharTest('⫔', ['contiene o está incluido en']);
  this.executeCharTest('⫕', ['incluido doblemente en']);
  this.executeCharTest('⫖', ['contiene doblemente a']);
  this.executeCharTest('⫗', ['contiene o está incluido en']);
  this.executeCharTest('⫘', ['contiene o está incluido en']);
  this.executeCharTest('⫙', ['perteneciente dirigido hacia abajo']);
  this.executeCharTest('⫚', ['pitchfork with tee top']);
  this.executeCharTest('⫛', ['transversal intersection']);
  this.executeCharTest('⫝̸', ['bifurcación']);
  this.executeCharTest('⫝', ['nonforking']);
  this.executeCharTest('⫞', ['tachuela Izquierda Corta']);
  this.executeCharTest('⫟', ['tachuela corta hacia abajo']);
  this.executeCharTest('⫠', ['short Up Tack']);
  this.executeCharTest('⫡', ['perpendicular con s']);
  this.executeCharTest('⫢', ['barra vertical Torniquete a la derecha']);
  this.executeCharTest('⫣', ['barra vertical doble Torniquete izquierdo']);
  this.executeCharTest('⫤', ['double left turnstile vertical bar']);
  this.executeCharTest('⫥', ['doble barra vertical doble torniquete izquierdo']);
  this.executeCharTest('⫦', ['long dash from left member of double vertical']);
  this.executeCharTest('⫧', ['short down tack with overbar']);
  this.executeCharTest('⫨', ['barra con perpendicular']);
  this.executeCharTest('⫩', ['short up tack above short down tack']);
  this.executeCharTest('⫪', ['tachuela doble']);
  this.executeCharTest('⫫', ['double up tack']);
  this.executeCharTest('⫬', ['double stroke not sign']);
  this.executeCharTest('⫭', ['reversed double stroke not sign']);
  this.executeCharTest('⫮', ['does not divide with reversed negation slash']);
  this.executeCharTest('⫯', ['barra vertical con círculo']);
  this.executeCharTest('⫰', ['barra con círculo inferior']);
  this.executeCharTest('⫱', ['down tack with circle below']);
  this.executeCharTest('⫲', ['paralela con marca']);
  this.executeCharTest('⫳', ['paralela con tilde']);
  this.executeCharTest('⫴', ['relación binaria de barra vertical triple']);
  this.executeCharTest('⫵', ['barra vertical triple con trazo horizontal']);
  this.executeCharTest('⫶', ['operador Triple Colon']);
  this.executeCharTest('⫷', ['triple anidada menos que']);
  this.executeCharTest('⫸', ['triple anidado mayor que']);
  this.executeCharTest('⫹', ['doble línea inclinada menor o igual a']);
  this.executeCharTest('⫺', ['doble línea inclinada mayor o igual a']);
  this.executeCharTest('⫻', ['relación Binaria Triple Sólida']);
  this.executeCharTest('⫼', ['operador de barra vertical triple grande']);
  this.executeCharTest('⫽', ['operador Doble Sólido']);
  this.executeCharTest('⫾', ['barra vertical blanca']);
  this.executeCharTest('⫿', ['barra vertical blanca N-Ary']);
  this.executeCharTest('〜', ['wave Dash']);
  this.executeCharTest('︐', ['formulario de presentación para coma vertical']);
  this.executeCharTest('︓', ['formulario de presentación para colon vertical']);
  this.executeCharTest('︔', ['formulario de presentación para punto y coma vertical']);
  this.executeCharTest('︕', ['formulario de presentación para el signo de exclamación vertical']);
  this.executeCharTest('︖', ['formulario de presentación para el signo de interrogación vertical']);
  this.executeCharTest('︙', ['formulario de presentación para elipsis horizontal vertical']);
  this.executeCharTest('︰', ['formulario de presentación para líder vertical de dos puntos']);
  this.executeCharTest('︱', ['formulario de presentación para Vertical Em Dash']);
  this.executeCharTest('︲', ['formulario de presentación para Vertical En Dash']);
  this.executeCharTest('︳', ['formulario de presentación para línea vertical baja']);
  this.executeCharTest('︴', ['formulario de presentación para línea baja ondulada vertical']);
  this.executeCharTest('﹅', ['punto de sésamo']);
  this.executeCharTest('﹆', ['punto de sésamo blanco']);
  this.executeCharTest('﹉', ['línea discontinua']);
  this.executeCharTest('﹊', ['centinela Overline']);
  this.executeCharTest('﹋', ['ondulado Overline']);
  this.executeCharTest('﹌', ['doble Ondulado Ondulado']);
  this.executeCharTest('﹍', ['línea baja discontinua']);
  this.executeCharTest('﹎', ['línea baja de línea central']);
  this.executeCharTest('﹏', ['línea baja ondulada']);
  this.executeCharTest('﹐', ['comas pequeñas']);
  this.executeCharTest('﹒', ['parada completa pequeña']);
  this.executeCharTest('﹔', ['pequeño punto y coma']);
  this.executeCharTest('﹕', ['pequeño colon']);
  this.executeCharTest('﹖', ['pequeño signo de interrogación']);
  this.executeCharTest('﹗', ['pequeño signo de exclamación']);
  this.executeCharTest('﹘', ['pequeño Em Dash']);
  this.executeCharTest('﹟', ['signo de número pequeño']);
  this.executeCharTest('﹠', ['ampersand pequeño']);
  this.executeCharTest('﹡', ['pequeño asterisco']);
  this.executeCharTest('﹢', ['signo más pequeño']);
  this.executeCharTest('﹣', ['pequeño guión-menos']);
  this.executeCharTest('﹤', ['signo menor que pequeño']);
  this.executeCharTest('﹥', ['signo mayor que pequeño']);
  this.executeCharTest('﹦', ['signo pequeño igual']);
  this.executeCharTest('﹨', ['división entera']);
  this.executeCharTest('﹩', ['pequeño signo de dólar']);
  this.executeCharTest('﹪', ['signo de porcentaje pequeño']);
  this.executeCharTest('﹫', ['pequeño comercial en']);
  this.executeCharTest('！', ['signo de exclamación de ancho completo']);
  this.executeCharTest('＂', ['comillas de ancho completo']);
  this.executeCharTest('＃', ['número de signo de ancho completo']);
  this.executeCharTest('＄', ['signo de dólar de ancho completo']);
  this.executeCharTest('％', ['signo de porcentaje de ancho completo']);
  this.executeCharTest('＆', ['ampersand de ancho completo']);
  this.executeCharTest('＇', ['apóstrofe de ancho completo']);
  this.executeCharTest('＊', ['asterisco de ancho completo']);
  this.executeCharTest('＋', ['signo de ancho completo']);
  this.executeCharTest('，', ['coma de ancho completo']);
  this.executeCharTest('－', ['ancho de ancho completo']);
  this.executeCharTest('．', ['fullwidth Full Stop']);
  this.executeCharTest('／', ['sólido de ancho completo']);
  this.executeCharTest('：', ['ancho completo de colon']);
  this.executeCharTest('；', ['punto y coma de ancho completo']);
  this.executeCharTest('＜', ['ancho completo menos de la señal']);
  this.executeCharTest('＝', ['signo de igual ancho completo']);
  this.executeCharTest('＞', ['ancho completo mayor que el signo']);
  this.executeCharTest('？', ['signo de interrogación de ancho completo']);
  this.executeCharTest('＠', ['comercial de ancho completo en']);
  this.executeCharTest('＼', ['sólido inverso de ancho completo']);
  this.executeCharTest('＾', ['acento circunflejo de ancho completo']);
  this.executeCharTest('＿', ['línea baja de ancho completo']);
  this.executeCharTest('｀', ['acento grave de ancho completo']);
  this.executeCharTest('｜', ['barra vertical']);
  this.executeCharTest('～', ['tilde de ancho completo']);
  this.executeCharTest('￠', ['signo de centavo de ancho completo']);
  this.executeCharTest('￡', ['signo de libra de ancho completo']);
  this.executeCharTest('￢', ['fullwidth no firmar']);
  this.executeCharTest('￣', ['ancho completo macron']);
  this.executeCharTest('￤', ['barra rota de ancho completo']);
  this.executeCharTest('￥', ['signo de yen de ancho completo']);
  this.executeCharTest('￦', ['signo de ancho completo ganado']);
  this.executeCharTest('￨', ['formas de ancho medio luz vertical']);
  this.executeCharTest('￭', ['medio ancho cuadrado negro']);
  this.executeCharTest('￮', ['círculo blanco de medio ancho']);
  this.executeCharTest(' ', ['espacio']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('­', ['guión corto']);
  this.executeCharTest(' ', ['en quad']);
  this.executeCharTest(' ', ['em Quad']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', ['espacio Six-Per-Em']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('​', ['​']);
  this.executeCharTest('‌', ['ancho de cero no ensamblador']);
  this.executeCharTest('‍', ['ancho de cero ensamblador']);
  this.executeCharTest('‎', ['marca de izquierda a derecha']);
  this.executeCharTest('‏', ['marca de derecha a izquierda']);
  this.executeCharTest(' ', ['separador de linea']);
  this.executeCharTest(' ', ['separador de párrafo']);
  this.executeCharTest('‪', ['incrustación de izquierda a derecha']);
  this.executeCharTest('‫', ['incrustación de derecha a izquierda']);
  this.executeCharTest('‬', ['formato direccional pop']);
  this.executeCharTest('‭', ['anulación de izquierda a derecha']);
  this.executeCharTest('‮', ['anulación de derecha a izquierda']);
  this.executeCharTest(' ', ['espacio estrecho sin descanso']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('⁠', ['⁠']);
  this.executeCharTest('⁡', ['de']);
  this.executeCharTest('⁢', ['por']);
  this.executeCharTest('⁣', ['coma']);
  this.executeCharTest('⁤', ['más']);
  this.executeCharTest('⁪', ['inhibir el intercambio simétrico']);
  this.executeCharTest('⁫', ['activar el intercambio simétrico']);
  this.executeCharTest('⁮', ['formas de dígitos nacionales']);
  this.executeCharTest('⁯', ['formas de dígitos nominales']);
  this.executeCharTest('﻿', ['﻿']);
  this.executeCharTest('￹', ['ancla de anotación interlinear']);
  this.executeCharTest('￺', ['separador de anotación interlinear']);
  this.executeCharTest('￻', ['terminador de anotación interlinear']);
  this.executeCharTest('⏨', ['símbolo exponente decimal']);
  this.executeCharTest('★', ['estrella rellena']);
  this.executeCharTest('☆', ['estrella vacía']);
  this.executeCharTest('⚪', ['círculo blanco medio']);
  this.executeCharTest('⚫', ['círculo negro medio']);
  this.executeCharTest('✅', ['marca de verificación pesada blanca']);
  this.executeCharTest('✓', ['check mark']);
  this.executeCharTest('✔', ['marca de verificación pesada']);
  this.executeCharTest('✕', ['multiplicación x']);
  this.executeCharTest('✖', ['multiplicación pesada X']);
  this.executeCharTest('✗', ['ballot x']);
  this.executeCharTest('✘', ['boleta pesada X']);
  this.executeCharTest('✛', ['centro abierto de la cruz']);
  this.executeCharTest('✜', ['pesado centro abierto cruz']);
  this.executeCharTest('✠', ['cruz de Malta']);
  this.executeCharTest('✡', ['estrella de David']);
  this.executeCharTest('✢', ['cuatro asterisco de lágrima']);
  this.executeCharTest('✣', ['cuatro asterisco de globo']);
  this.executeCharTest('✤', ['pesado Cuatro asterisco impulsado por globo']);
  this.executeCharTest('✥', ['cuatro asterisco de club-spoked']);
  this.executeCharTest('✦', ['estrella de cuatro puntas negra']);
  this.executeCharTest('✧', ['estrella blanca de cuatro puntas']);
  this.executeCharTest('✨', ['destellos']);
  this.executeCharTest('✩', ['estrés subrayado estrella blanca']);
  this.executeCharTest('✪', ['estrella blanca circulada']);
  this.executeCharTest('✫', ['centro Abierto Estrella Negra']);
  this.executeCharTest('✬', ['centro negro estrella blanca']);
  this.executeCharTest('✭', ['contorneado negro estrella']);
  this.executeCharTest('✮', ['estrella negra contorneada pesada']);
  this.executeCharTest('✯', ['pinwheel Star']);
  this.executeCharTest('✰', ['estrella blanca sombreada']);
  this.executeCharTest('✱', ['asterisco pesado']);
  this.executeCharTest('✲', ['centro abierto de asterisco']);
  this.executeCharTest('✳', ['ocho asterisco hablado']);
  this.executeCharTest('✴', ['ocho estrellas negras puntiagudas']);
  this.executeCharTest('✵', ['ocho estrellas de molinete en punta']);
  this.executeCharTest('✶', ['estrella rellena de seis puntas']);
  this.executeCharTest('✹', ['doce estrellas negras puntiagudas']);
  this.executeCharTest('✺', ['dieciséis asteriscos en punta']);
  this.executeCharTest('✻', ['asterisco con efecto de lágrima']);
  this.executeCharTest('✼', ['centro abierto con asterisco con forma de lágrima']);
  this.executeCharTest('✽', ['heavy teardrop spoked asterisk']);
  this.executeCharTest('✾', ['seis pétalos de florette en blanco y negro']);
  this.executeCharTest('✿', ['florette negro']);
  this.executeCharTest('❀', ['florette blanco']);
  this.executeCharTest('❁', ['ocho Petalled Outlined Black Florette']);
  this.executeCharTest('❂', ['círculo abierto centro ocho estrellas señaladas']);
  this.executeCharTest('❃', ['asterisco pesado del molinillo de viento']);
  this.executeCharTest('❄', ['copo de nieve']);
  this.executeCharTest('❅', ['copo de nieve trifolio apretado']);
  this.executeCharTest('❆', ['copo de nieve pesado de Chevron']);
  this.executeCharTest('❇', ['brillar']);
  this.executeCharTest('❈', ['chispa pesada']);
  this.executeCharTest('❉', ['asterisco de globo']);
  this.executeCharTest('❊', ['ocho asterisco de hélice con efecto de lágrima']);
  this.executeCharTest('❋', ['heavy eight asterisk de hélice en forma de lágrima']);
  this.executeCharTest('❌', ['marca de la cruz']);
  this.executeCharTest('❍', ['círculo blanco sombreado']);
  this.executeCharTest('¼', ['un cuarto']);
  this.executeCharTest('½', ['un medio']);
  this.executeCharTest('¾', ['tres cuartos']);
  this.executeCharTest('⅐', ['Vulgar Fracción Un Séptimo']);
  this.executeCharTest('⅑', ['Vulgar Fracción Un Noveno']);
  this.executeCharTest('⅒', ['Vulgar Fracción Un Décimo']);
  this.executeCharTest('⅓', ['Vulgar Fracción Un Tercero']);
  this.executeCharTest('⅔', ['Fracción vulgar dos tercios']);
  this.executeCharTest('⅕', ['Vulgar Fraction One Fifth']);
  this.executeCharTest('⅖', ['Fracción vulgar dos quintos']);
  this.executeCharTest('⅗', ['Fracción vulgar tres quintos']);
  this.executeCharTest('⅘', ['Fracción vulgar cuatro quintos']);
  this.executeCharTest('⅙', ['Vulgar Fracción Un Sexto']);
  this.executeCharTest('⅚', ['Vulgar fracción cinco sextos']);
  this.executeCharTest('⅛', ['Vulgar Fracción Un Octavo']);
  this.executeCharTest('⅜', ['Fracción vulgar tres octavos']);
  this.executeCharTest('⅝', ['Fracción vulgar cinco octavos']);
  this.executeCharTest('⅞', ['Fracción vulgar siete octavos']);
  this.executeCharTest('⅟', ['Numerador de fracciones uno']);
  this.executeCharTest('↉', ['Vulgar Fraction Zero Thirds']);
  this.executeCharTest('㉈', ['Número diez en un círculo en la Plaza Negra']);
  this.executeCharTest('㉉', ['Número veinte en un círculo en la Plaza Negra']);
  this.executeCharTest('㉊', ['Número circundado treinta en cuadrado negro']);
  this.executeCharTest('㉋', ['Número circundado Cuarenta en cuadrado negro']);
  this.executeCharTest('㉌', ['Círculo número cincuenta en la plaza negra']);
  this.executeCharTest('㉍', ['Círculo número sesenta en la plaza negra']);
  this.executeCharTest('㉎', ['Número setenta en un círculo en la Plaza Negra']);
  this.executeCharTest('㉏', ['Círculo número ochenta en cuadrado negro']);
};


/**
 * Runs all function name translation tests for default domain.
 */
sre.DefaultCharSpanishTest.prototype.testDefaultFunctions = function() {
  this.executeCharTest('deg', ['grados']);
  this.executeCharTest('det', ['determinante']);
  this.executeCharTest('dim', ['dimensión']);
  this.executeCharTest('hom', ['homomorfismo']);
  this.executeCharTest('Hom', ['homomorfismo']);
  this.executeCharTest('ker', ['kernel']);
  this.executeCharTest('Tr', ['traza']);
  this.executeCharTest('tr', ['traza']);
  this.executeCharTest('log', ['logaritmo']);
  this.executeCharTest('ln', ['logaritmo neperiano']);
  this.executeCharTest('lg', ['logaritmo base 10']);
  this.executeCharTest('exp', ['exponente']);
  this.executeCharTest('expt', ['exponente']);
  this.executeCharTest('gcd', ['MCD']);
  this.executeCharTest('lcm', ['mcm']);
  this.executeCharTest('arg', ['argumento']);
  this.executeCharTest('im', ['parte imaginaria']);
  this.executeCharTest('re', ['residuo']);
  this.executeCharTest('inf', ['extremo inferior']);
  this.executeCharTest('lim', ['límite']);
  this.executeCharTest('lim inf', ['límite inferior']);
  this.executeCharTest('liminf', ['límite inferior']);
  this.executeCharTest('lim sup', ['límite superior']);
  this.executeCharTest('limsup', ['límite superior']);
  this.executeCharTest('max', ['máximo']);
  this.executeCharTest('min', ['mínimo']);
  this.executeCharTest('sup', ['superior']);
  this.executeCharTest('injlim', ['límite directo']);
  this.executeCharTest('inj lim', ['límite directo']);
  this.executeCharTest('projlim', ['límite inverso']);
  this.executeCharTest('proj lim', ['límite inverso']);
  this.executeCharTest('mod', ['módulo']);
  this.executeCharTest('Pr', ['probabilidad']);
  this.executeCharTest('cosh', ['coseno hiperbólico']);
  this.executeCharTest('coth', ['cotangente hiperbólica']);
  this.executeCharTest('csch', ['cosecante hiperbólica']);
  this.executeCharTest('sech', ['secante hiperbólica']);
  this.executeCharTest('sinh', ['seno hiperbólico']);
  this.executeCharTest('tanh', ['tangente hiperbólica']);
  this.executeCharTest('arcosh', ['area coseno hiperbólico']);
  this.executeCharTest('arccosh', ['area coseno hiperbólico']);
  this.executeCharTest('arcoth', ['area cotangente hiperbólica']);
  this.executeCharTest('arccoth', ['area cotangente hiperbólica']);
  this.executeCharTest('arcsch', ['area cosecante hiperbólica']);
  this.executeCharTest('arccsch', ['area cosecante hiperbólica']);
  this.executeCharTest('arsech', ['area secante hiperbólica']);
  this.executeCharTest('arcsech', ['area secante hiperbólica']);
  this.executeCharTest('arsinh', ['area seno hiperbólico']);
  this.executeCharTest('arcsinh', ['area seno hiperbólico']);
  this.executeCharTest('artanh', ['area tangente hiperbólica']);
  this.executeCharTest('arctanh', ['area tangente hiperbólica']);
  this.executeCharTest('cos', ['coseno']);
  this.executeCharTest('cosine', ['coseno']);
  this.executeCharTest('cot', ['cotangente']);
  this.executeCharTest('csc', ['cosecante']);
  this.executeCharTest('sec', ['secant']);
  this.executeCharTest('sin', ['seno']);
  this.executeCharTest('sine', ['seno']);
  this.executeCharTest('tan', ['tangente']);
  this.executeCharTest('arccos', ['arco coseno']);
  this.executeCharTest('arccot', ['arco cotangente']);
  this.executeCharTest('arccsc', ['arco cosecante']);
  this.executeCharTest('arcsec', ['arco secante']);
  this.executeCharTest('arcsin', ['arco seno']);
  this.executeCharTest('arctan', ['arco tangente']);
  this.executeCharTest('sen', ['seno']);
};


/**
 * Runs all unit expression translation tests for default domain.
 */
sre.DefaultCharSpanishTest.prototype.testDefaultUnits = function() {
  this.executeUnitTest('W', ['watt']);
  this.executeUnitTest('w', ['watt']);
  this.executeUnitTest('kw', ['kilowatt']);
  this.executeUnitTest('kW', ['kilowatt']);
  this.executeUnitTest('mw', ['miliwatt']);
  this.executeUnitTest('mW', ['miliwatt']);
  this.executeUnitTest('kwh', ['kilowatt hora']);
  this.executeUnitTest('kWh', ['kilowatt hora']);
  this.executeUnitTest('J', ['Joules']);
  this.executeUnitTest('N', ['Newton']);
  this.executeUnitTest('A', ['Ampere']);
  this.executeUnitTest('V', ['Voltio']);
  this.executeUnitTest('µΩ', ['microohmio']);
  this.executeUnitTest('mΩ', ['miliohmio']);
  this.executeUnitTest('Ω', ['ohmio']);
  this.executeUnitTest('Ohm', ['ohmio']);
  this.executeUnitTest('kΩ', ['kiloohmio']);
  this.executeUnitTest('KΩ', ['kiloohmio']);
  this.executeUnitTest('MΩ', ['megaohmio']);
  this.executeUnitTest('GΩ', ['gigaohmio']);
  this.executeUnitTest('mm', ['milímetro']);
  this.executeUnitTest('cm', ['centímetro']);
  this.executeUnitTest('m', ['metro']);
  this.executeUnitTest('km', ['kilómetro']);
  this.executeUnitTest('ft', ['pies']);
  this.executeUnitTest('ft.', ['pies']);
  this.executeUnitTest('in', ['pulgada']);
  this.executeUnitTest('in.', ['pulgada']);
  this.executeUnitTest('mi', ['milla']);
  this.executeUnitTest('mi.', ['milla']);
  this.executeUnitTest('yd', ['yarda']);
  this.executeUnitTest('yd.', ['yarda']);
  this.executeUnitTest('n.m.', ['millas náuticas']);
  this.executeUnitTest('b', ['bit']);
  this.executeUnitTest('B', ['byte']);
  this.executeUnitTest('KB', ['kilobyte']);
  this.executeUnitTest('MB', ['megabyte']);
  this.executeUnitTest('GB', ['gigabyte']);
  this.executeUnitTest('TB', ['terabyte']);
  this.executeUnitTest('doz', ['docena']);
  this.executeUnitTest('doz.', ['docena']);
  this.executeUnitTest('dz', ['docena']);
  this.executeUnitTest('dz.', ['docena']);
  this.executeUnitTest('sq', ['al cuadrado']);
  this.executeUnitTest('sq.', ['al cuadrado']);
  this.executeUnitTest('ha', ['hectarea']);
  this.executeUnitTest('kt', ['nudo']);
  this.executeUnitTest('kt.', ['nudo']);
  this.executeUnitTest('mph', ['millas por hora']);
  this.executeUnitTest('rpm', ['revoluciones por minuto']);
  this.executeUnitTest('kmh', ['kilómetros por hora']);
  this.executeUnitTest('F', ['Fahrenheit']);
  this.executeUnitTest('F.', ['Fahrenheit']);
  this.executeUnitTest('°F', ['Fahrenheit']);
  this.executeUnitTest('C', ['centígrados']);
  this.executeUnitTest('°C', ['centígrados']);
  this.executeUnitTest('K', ['Kelvin']);
  this.executeUnitTest('°K', ['Kelvin']);
  this.executeUnitTest('ns', ['nanosegundos']);
  this.executeUnitTest('µs', ['microsegundos']);
  this.executeUnitTest('ms', ['milisegundos']);
  this.executeUnitTest('s', ['segundos']);
  this.executeUnitTest('min', ['minutos']);
  this.executeUnitTest('h', ['hora']);
  this.executeUnitTest('hr', ['hora']);
  this.executeUnitTest('bbl.', ['barrile']);
  this.executeUnitTest('bbl', ['barrile']);
  this.executeUnitTest('cu', ['cúbico']);
  this.executeUnitTest('cu.', ['cúbico']);
  this.executeUnitTest('fl. oz.', ['onzas líquidas']);
  this.executeUnitTest('gal', ['galone']);
  this.executeUnitTest('gal.', ['galone']);
  this.executeUnitTest('pt', ['pinta']);
  this.executeUnitTest('pt.', ['pinta']);
  this.executeUnitTest('qt', ['quart']);
  this.executeUnitTest('qt.', ['quart']);
  this.executeUnitTest('tbsp', ['cuchara']);
  this.executeUnitTest('tbsp.', ['cuchara']);
  this.executeUnitTest('tsp', ['cucharilla']);
  this.executeUnitTest('tsp.', ['cucharilla']);
  this.executeUnitTest('cc', ['centímetros cúbicos']);
  this.executeUnitTest('kl', ['kilolitro']);
  this.executeUnitTest('l', ['litro']);
  this.executeUnitTest('ml', ['mililitro']);
  this.executeUnitTest('lb', ['libra']);
  this.executeUnitTest('lb.', ['libra']);
  this.executeUnitTest('LT', ['libras imperiales']);
  this.executeUnitTest('L.T.', ['libras imperiales']);
  this.executeUnitTest('oz', ['onza']);
  this.executeUnitTest('oz.', ['onza']);
  this.executeUnitTest('g', ['gramo']);
  this.executeUnitTest('gr', ['gramo']);
  this.executeUnitTest('kg', ['kilogramo']);
  this.executeUnitTest('mcg', ['microgramo']);
  this.executeUnitTest('µg', ['microgramo']);
  this.executeUnitTest('mg', ['miligramo']);
  this.executeUnitTest('t', ['tonelada']);
  this.executeUnitTest('T', ['tonelada']);
};
