// Copyright 2020 Volker Sorge
//
// Licensed under the Apache License, Version 2.0 (the 'License');
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// This work was sponsored by ETH Zurich
//

/**
 * @fileoverview Abstract class for test cases of single characters.
 * @author Volker.Sorge@gmail.com (Volker Sorge)
 */

goog.provide('sre.DefaultCharGermanTest');

goog.require('sre.AbstractCharacterTest');



/**
 * @constructor
 * @extends {sre.AbstractCharacterTest}
 */
sre.DefaultCharGermanTest = function() {
  sre.DefaultCharGermanTest.base(this, 'constructor');

  this.locale = 'de';
  this.domain = 'default';
  
  /**
   * @type {Array.<string>}
   */
  this.styles = ['default'];

  this.setActive('DefaultCharactersGerman');
};
goog.inherits(sre.DefaultCharGermanTest, sre.AbstractCharacterTest);


sre.DefaultCharGermanTest.prototype.testDefaultChars = function() {
  this.executeCharTest('0', ['null']);
  this.executeCharTest('1', ['eins']);
  this.executeCharTest('2', ['zwei']);
  this.executeCharTest('3', ['drei']);
  this.executeCharTest('4', ['vier']);
  this.executeCharTest('5', ['fünf']);
  this.executeCharTest('6', ['sechs']);
  this.executeCharTest('7', ['sieben']);
  this.executeCharTest('8', ['acht']);
  this.executeCharTest('9', ['neun']);
  this.executeCharTest('𝐀', ['fettes großes A']);
  this.executeCharTest('𝐁', ['fettes großes B']);
  this.executeCharTest('𝐂', ['fettes großes C']);
  this.executeCharTest('𝐃', ['fettes großes D']);
  this.executeCharTest('𝐄', ['fettes großes E']);
  this.executeCharTest('𝐅', ['fettes großes F']);
  this.executeCharTest('𝐆', ['fettes großes G']);
  this.executeCharTest('𝐇', ['fettes großes H']);
  this.executeCharTest('𝐈', ['fettes großes I']);
  this.executeCharTest('𝐉', ['fettes großes J']);
  this.executeCharTest('𝐊', ['fettes großes K']);
  this.executeCharTest('𝐋', ['fettes großes L']);
  this.executeCharTest('𝐌', ['fettes großes M']);
  this.executeCharTest('𝐍', ['fettes großes N']);
  this.executeCharTest('𝐎', ['fettes großes O']);
  this.executeCharTest('𝐏', ['fettes großes P']);
  this.executeCharTest('𝐐', ['fettes großes Q']);
  this.executeCharTest('𝐑', ['fettes großes R']);
  this.executeCharTest('𝐒', ['fettes großes S']);
  this.executeCharTest('𝐓', ['fettes großes T']);
  this.executeCharTest('𝐔', ['fettes großes U']);
  this.executeCharTest('𝐕', ['fettes großes V']);
  this.executeCharTest('𝐖', ['fettes großes W']);
  this.executeCharTest('𝐗', ['fettes großes X']);
  this.executeCharTest('𝐘', ['fettes großes Y']);
  this.executeCharTest('𝐙', ['fettes großes Z']);
  this.executeCharTest('𝐚', ['fettes a']);
  this.executeCharTest('𝐛', ['fettes b']);
  this.executeCharTest('𝐜', ['fettes c']);
  this.executeCharTest('𝐝', ['fettes d']);
  this.executeCharTest('𝐞', ['fettes e']);
  this.executeCharTest('𝐟', ['fettes f']);
  this.executeCharTest('𝐠', ['fettes g']);
  this.executeCharTest('𝐡', ['fettes h']);
  this.executeCharTest('𝐢', ['fettes i']);
  this.executeCharTest('𝐣', ['fettes j']);
  this.executeCharTest('𝐤', ['fettes k']);
  this.executeCharTest('𝐥', ['fettes l']);
  this.executeCharTest('𝐦', ['fettes m']);
  this.executeCharTest('𝐧', ['fettes n']);
  this.executeCharTest('𝐨', ['fettes o']);
  this.executeCharTest('𝐩', ['fettes p']);
  this.executeCharTest('𝐪', ['fettes q']);
  this.executeCharTest('𝐫', ['fettes r']);
  this.executeCharTest('𝐬', ['fettes s']);
  this.executeCharTest('𝐭', ['fettes t']);
  this.executeCharTest('𝐮', ['fettes u']);
  this.executeCharTest('𝐯', ['fettes v']);
  this.executeCharTest('𝐰', ['fettes w']);
  this.executeCharTest('𝐱', ['fettes x']);
  this.executeCharTest('𝐲', ['fettes y']);
  this.executeCharTest('𝐳', ['fettes z']);
  this.executeCharTest('𝕬', ['fettes Fraktur großes A']);
  this.executeCharTest('𝕭', ['fettes Fraktur großes B']);
  this.executeCharTest('𝕮', ['fettes Fraktur großes C']);
  this.executeCharTest('𝕯', ['fettes Fraktur großes D']);
  this.executeCharTest('𝕰', ['fettes Fraktur großes E']);
  this.executeCharTest('𝕱', ['fettes Fraktur großes F']);
  this.executeCharTest('𝕲', ['fettes Fraktur großes G']);
  this.executeCharTest('𝕳', ['fettes Fraktur großes H']);
  this.executeCharTest('𝕴', ['fettes Fraktur großes I']);
  this.executeCharTest('𝕵', ['fettes Fraktur großes J']);
  this.executeCharTest('𝕶', ['fettes Fraktur großes K']);
  this.executeCharTest('𝕷', ['fettes Fraktur großes L']);
  this.executeCharTest('𝕸', ['fettes Fraktur großes M']);
  this.executeCharTest('𝕹', ['fettes Fraktur großes N']);
  this.executeCharTest('𝕺', ['fettes Fraktur großes O']);
  this.executeCharTest('𝕻', ['fettes Fraktur großes P']);
  this.executeCharTest('𝕼', ['fettes Fraktur großes Q']);
  this.executeCharTest('𝕽', ['fettes Fraktur großes R']);
  this.executeCharTest('𝕾', ['fettes Fraktur großes S']);
  this.executeCharTest('𝕿', ['fettes Fraktur großes T']);
  this.executeCharTest('𝖀', ['fettes Fraktur großes U']);
  this.executeCharTest('𝖁', ['fettes Fraktur großes V']);
  this.executeCharTest('𝖂', ['fettes Fraktur großes W']);
  this.executeCharTest('𝖃', ['fettes Fraktur großes X']);
  this.executeCharTest('𝖄', ['fettes Fraktur großes Y']);
  this.executeCharTest('𝖅', ['fettes Fraktur großes Z']);
  this.executeCharTest('𝖆', ['fettes Fraktur a']);
  this.executeCharTest('𝖇', ['fettes Fraktur b']);
  this.executeCharTest('𝖈', ['fettes Fraktur c']);
  this.executeCharTest('𝖉', ['fettes Fraktur d']);
  this.executeCharTest('𝖊', ['fettes Fraktur e']);
  this.executeCharTest('𝖋', ['fettes Fraktur f']);
  this.executeCharTest('𝖌', ['fettes Fraktur g']);
  this.executeCharTest('𝖍', ['fettes Fraktur h']);
  this.executeCharTest('𝖎', ['fettes Fraktur i']);
  this.executeCharTest('𝖏', ['fettes Fraktur j']);
  this.executeCharTest('𝖐', ['fettes Fraktur k']);
  this.executeCharTest('𝖑', ['fettes Fraktur l']);
  this.executeCharTest('𝖒', ['fettes Fraktur m']);
  this.executeCharTest('𝖓', ['fettes Fraktur n']);
  this.executeCharTest('𝖔', ['fettes Fraktur o']);
  this.executeCharTest('𝖕', ['fettes Fraktur p']);
  this.executeCharTest('𝖖', ['fettes Fraktur q']);
  this.executeCharTest('𝖗', ['fettes Fraktur r']);
  this.executeCharTest('𝖘', ['fettes Fraktur s']);
  this.executeCharTest('𝖙', ['fettes Fraktur t']);
  this.executeCharTest('𝖚', ['fettes Fraktur u']);
  this.executeCharTest('𝖛', ['fettes Fraktur v']);
  this.executeCharTest('𝖜', ['fettes Fraktur w']);
  this.executeCharTest('𝖝', ['fettes Fraktur x']);
  this.executeCharTest('𝖞', ['fettes Fraktur y']);
  this.executeCharTest('𝖟', ['fettes Fraktur z']);
  this.executeCharTest('𝑨', ['fettkursives großes A']);
  this.executeCharTest('𝑩', ['fettkursives großes B']);
  this.executeCharTest('𝑪', ['fettkursives großes C']);
  this.executeCharTest('𝑫', ['fettkursives großes D']);
  this.executeCharTest('𝑬', ['fettkursives großes E']);
  this.executeCharTest('𝑭', ['fettkursives großes F']);
  this.executeCharTest('𝑮', ['fettkursives großes G']);
  this.executeCharTest('𝑯', ['fettkursives großes H']);
  this.executeCharTest('𝑰', ['fettkursives großes I']);
  this.executeCharTest('𝑱', ['fettkursives großes J']);
  this.executeCharTest('𝑲', ['fettkursives großes K']);
  this.executeCharTest('𝑳', ['fettkursives großes L']);
  this.executeCharTest('𝑴', ['fettkursives großes M']);
  this.executeCharTest('𝑵', ['fettkursives großes N']);
  this.executeCharTest('𝑶', ['fettkursives großes O']);
  this.executeCharTest('𝑷', ['fettkursives großes P']);
  this.executeCharTest('𝑸', ['fettkursives großes Q']);
  this.executeCharTest('𝑹', ['fettkursives großes R']);
  this.executeCharTest('𝑺', ['fettkursives großes S']);
  this.executeCharTest('𝑻', ['fettkursives großes T']);
  this.executeCharTest('𝑼', ['fettkursives großes U']);
  this.executeCharTest('𝑽', ['fettkursives großes V']);
  this.executeCharTest('𝑾', ['fettkursives großes W']);
  this.executeCharTest('𝑿', ['fettkursives großes X']);
  this.executeCharTest('𝒀', ['fettkursives großes Y']);
  this.executeCharTest('𝒁', ['fettkursives großes Z']);
  this.executeCharTest('𝒂', ['fettkursives a']);
  this.executeCharTest('𝒃', ['fettkursives b']);
  this.executeCharTest('𝒄', ['fettkursives c']);
  this.executeCharTest('𝒅', ['fettkursives d']);
  this.executeCharTest('𝒆', ['fettkursives e']);
  this.executeCharTest('𝒇', ['fettkursives f']);
  this.executeCharTest('𝒈', ['fettkursives g']);
  this.executeCharTest('𝒉', ['fettkursives h']);
  this.executeCharTest('𝒊', ['fettkursives i']);
  this.executeCharTest('𝒋', ['fettkursives j']);
  this.executeCharTest('𝒌', ['fettkursives k']);
  this.executeCharTest('𝒍', ['fettkursives l']);
  this.executeCharTest('𝒎', ['fettkursives m']);
  this.executeCharTest('𝒏', ['fettkursives n']);
  this.executeCharTest('𝒐', ['fettkursives o']);
  this.executeCharTest('𝒑', ['fettkursives p']);
  this.executeCharTest('𝒒', ['fettkursives q']);
  this.executeCharTest('𝒓', ['fettkursives r']);
  this.executeCharTest('𝒔', ['fettkursives s']);
  this.executeCharTest('𝒕', ['fettkursives t']);
  this.executeCharTest('𝒖', ['fettkursives u']);
  this.executeCharTest('𝒗', ['fettkursives v']);
  this.executeCharTest('𝒘', ['fettkursives w']);
  this.executeCharTest('𝒙', ['fettkursives x']);
  this.executeCharTest('𝒚', ['fettkursives y']);
  this.executeCharTest('𝒛', ['fettkursives z']);
  this.executeCharTest('𝓐', ['fettes Schreibschrift großes A']);
  this.executeCharTest('𝓑', ['fettes Schreibschrift großes B']);
  this.executeCharTest('𝓒', ['fettes Schreibschrift großes C']);
  this.executeCharTest('𝓓', ['fettes Schreibschrift großes D']);
  this.executeCharTest('𝓔', ['fettes Schreibschrift großes E']);
  this.executeCharTest('𝓕', ['fettes Schreibschrift großes F']);
  this.executeCharTest('𝓖', ['fettes Schreibschrift großes G']);
  this.executeCharTest('𝓗', ['fettes Schreibschrift großes H']);
  this.executeCharTest('𝓘', ['fettes Schreibschrift großes I']);
  this.executeCharTest('𝓙', ['fettes Schreibschrift großes J']);
  this.executeCharTest('𝓚', ['fettes Schreibschrift großes K']);
  this.executeCharTest('𝓛', ['fettes Schreibschrift großes L']);
  this.executeCharTest('𝓜', ['fettes Schreibschrift großes M']);
  this.executeCharTest('𝓝', ['fettes Schreibschrift großes N']);
  this.executeCharTest('𝓞', ['fettes Schreibschrift großes O']);
  this.executeCharTest('𝓟', ['fettes Schreibschrift großes P']);
  this.executeCharTest('𝓠', ['fettes Schreibschrift großes Q']);
  this.executeCharTest('𝓡', ['fettes Schreibschrift großes R']);
  this.executeCharTest('𝓢', ['fettes Schreibschrift großes S']);
  this.executeCharTest('𝓣', ['fettes Schreibschrift großes T']);
  this.executeCharTest('𝓤', ['fettes Schreibschrift großes U']);
  this.executeCharTest('𝓥', ['fettes Schreibschrift großes V']);
  this.executeCharTest('𝓦', ['fettes Schreibschrift großes W']);
  this.executeCharTest('𝓧', ['fettes Schreibschrift großes X']);
  this.executeCharTest('𝓨', ['fettes Schreibschrift großes Y']);
  this.executeCharTest('𝓩', ['fettes Schreibschrift großes Z']);
  this.executeCharTest('𝓪', ['fettes Schreibschrift a']);
  this.executeCharTest('𝓫', ['fettes Schreibschrift b']);
  this.executeCharTest('𝓬', ['fettes Schreibschrift c']);
  this.executeCharTest('𝓭', ['fettes Schreibschrift d']);
  this.executeCharTest('𝓮', ['fettes Schreibschrift e']);
  this.executeCharTest('𝓯', ['fettes Schreibschrift f']);
  this.executeCharTest('𝓰', ['fettes Schreibschrift g']);
  this.executeCharTest('𝓱', ['fettes Schreibschrift h']);
  this.executeCharTest('𝓲', ['fettes Schreibschrift i']);
  this.executeCharTest('𝓳', ['fettes Schreibschrift j']);
  this.executeCharTest('𝓴', ['fettes Schreibschrift k']);
  this.executeCharTest('𝓵', ['fettes Schreibschrift l']);
  this.executeCharTest('𝓶', ['fettes Schreibschrift m']);
  this.executeCharTest('𝓷', ['fettes Schreibschrift n']);
  this.executeCharTest('𝓸', ['fettes Schreibschrift o']);
  this.executeCharTest('𝓹', ['fettes Schreibschrift p']);
  this.executeCharTest('𝓺', ['fettes Schreibschrift q']);
  this.executeCharTest('𝓻', ['fettes Schreibschrift r']);
  this.executeCharTest('𝓼', ['fettes Schreibschrift s']);
  this.executeCharTest('𝓽', ['fettes Schreibschrift t']);
  this.executeCharTest('𝓾', ['fettes Schreibschrift u']);
  this.executeCharTest('𝓿', ['fettes Schreibschrift v']);
  this.executeCharTest('𝔀', ['fettes Schreibschrift w']);
  this.executeCharTest('𝔁', ['fettes Schreibschrift x']);
  this.executeCharTest('𝔂', ['fettes Schreibschrift y']);
  this.executeCharTest('𝔃', ['fettes Schreibschrift z']);
  this.executeCharTest('𝔸', ['großes A mit Doppelstrich']);
  this.executeCharTest('𝔹', ['großes B mit Doppelstrich']);
  this.executeCharTest('ℂ', ['großes C mit Doppelstrich']);
  this.executeCharTest('𝔻', ['großes D mit Doppelstrich']);
  this.executeCharTest('𝔼', ['großes E mit Doppelstrich']);
  this.executeCharTest('𝔽', ['großes F mit Doppelstrich']);
  this.executeCharTest('𝔾', ['großes G mit Doppelstrich']);
  this.executeCharTest('ℍ', ['großes H mit Doppelstrich']);
  this.executeCharTest('𝕀', ['großes I mit Doppelstrich']);
  this.executeCharTest('𝕁', ['großes J mit Doppelstrich']);
  this.executeCharTest('𝕂', ['großes K mit Doppelstrich']);
  this.executeCharTest('𝕃', ['großes L mit Doppelstrich']);
  this.executeCharTest('𝕄', ['großes M mit Doppelstrich']);
  this.executeCharTest('ℕ', ['großes N mit Doppelstrich']);
  this.executeCharTest('𝕆', ['großes O mit Doppelstrich']);
  this.executeCharTest('ℙ', ['großes P mit Doppelstrich']);
  this.executeCharTest('ℚ', ['großes Q mit Doppelstrich']);
  this.executeCharTest('ℝ', ['großes R mit Doppelstrich']);
  this.executeCharTest('𝕊', ['großes S mit Doppelstrich']);
  this.executeCharTest('𝕋', ['großes T mit Doppelstrich']);
  this.executeCharTest('𝕌', ['großes U mit Doppelstrich']);
  this.executeCharTest('𝕍', ['großes V mit Doppelstrich']);
  this.executeCharTest('𝕎', ['großes W mit Doppelstrich']);
  this.executeCharTest('𝕏', ['großes X mit Doppelstrich']);
  this.executeCharTest('𝕐', ['großes Y mit Doppelstrich']);
  this.executeCharTest('ℤ', ['großes Z mit Doppelstrich']);
  this.executeCharTest('𝕒', ['a mit Doppelstrich']);
  this.executeCharTest('𝕓', ['b mit Doppelstrich']);
  this.executeCharTest('𝕔', ['c mit Doppelstrich']);
  this.executeCharTest('𝕕', ['d mit Doppelstrich']);
  this.executeCharTest('𝕖', ['e mit Doppelstrich']);
  this.executeCharTest('𝕗', ['f mit Doppelstrich']);
  this.executeCharTest('𝕘', ['g mit Doppelstrich']);
  this.executeCharTest('𝕙', ['h mit Doppelstrich']);
  this.executeCharTest('𝕚', ['i mit Doppelstrich']);
  this.executeCharTest('𝕛', ['j mit Doppelstrich']);
  this.executeCharTest('𝕜', ['k mit Doppelstrich']);
  this.executeCharTest('𝕝', ['l mit Doppelstrich']);
  this.executeCharTest('𝕞', ['m mit Doppelstrich']);
  this.executeCharTest('𝕟', ['n mit Doppelstrich']);
  this.executeCharTest('𝕠', ['o mit Doppelstrich']);
  this.executeCharTest('𝕡', ['p mit Doppelstrich']);
  this.executeCharTest('𝕢', ['q mit Doppelstrich']);
  this.executeCharTest('𝕣', ['r mit Doppelstrich']);
  this.executeCharTest('𝕤', ['s mit Doppelstrich']);
  this.executeCharTest('𝕥', ['t mit Doppelstrich']);
  this.executeCharTest('𝕦', ['u mit Doppelstrich']);
  this.executeCharTest('𝕧', ['v mit Doppelstrich']);
  this.executeCharTest('𝕨', ['w mit Doppelstrich']);
  this.executeCharTest('𝕩', ['x mit Doppelstrich']);
  this.executeCharTest('𝕪', ['y mit Doppelstrich']);
  this.executeCharTest('𝕫', ['z mit Doppelstrich']);
  this.executeCharTest('𝔄', ['Fraktur großes A']);
  this.executeCharTest('𝔅', ['Fraktur großes B']);
  this.executeCharTest('ℭ', ['Fraktur großes C']);
  this.executeCharTest('𝔇', ['Fraktur großes D']);
  this.executeCharTest('𝔈', ['Fraktur großes E']);
  this.executeCharTest('𝔉', ['Fraktur großes F']);
  this.executeCharTest('𝔊', ['Fraktur großes G']);
  this.executeCharTest('ℌ', ['Fraktur großes H']);
  this.executeCharTest('ℑ', ['Fraktur großes I']);
  this.executeCharTest('𝔍', ['Fraktur großes J']);
  this.executeCharTest('𝔎', ['Fraktur großes K']);
  this.executeCharTest('𝔏', ['Fraktur großes L']);
  this.executeCharTest('𝔐', ['Fraktur großes M']);
  this.executeCharTest('𝔑', ['Fraktur großes N']);
  this.executeCharTest('𝔒', ['Fraktur großes O']);
  this.executeCharTest('𝔓', ['Fraktur großes P']);
  this.executeCharTest('𝔔', ['Fraktur großes Q']);
  this.executeCharTest('ℜ', ['Fraktur großes R']);
  this.executeCharTest('𝔖', ['Fraktur großes S']);
  this.executeCharTest('𝔗', ['Fraktur großes T']);
  this.executeCharTest('𝔘', ['Fraktur großes U']);
  this.executeCharTest('𝔙', ['Fraktur großes V']);
  this.executeCharTest('𝔚', ['Fraktur großes W']);
  this.executeCharTest('𝔛', ['Fraktur großes X']);
  this.executeCharTest('𝔜', ['Fraktur großes Y']);
  this.executeCharTest('ℨ', ['Fraktur großes Z']);
  this.executeCharTest('𝔞', ['Fraktur a']);
  this.executeCharTest('𝔟', ['Fraktur b']);
  this.executeCharTest('𝔠', ['Fraktur c']);
  this.executeCharTest('𝔡', ['Fraktur d']);
  this.executeCharTest('𝔢', ['Fraktur e']);
  this.executeCharTest('𝔣', ['Fraktur f']);
  this.executeCharTest('𝔤', ['Fraktur g']);
  this.executeCharTest('𝔥', ['Fraktur h']);
  this.executeCharTest('𝔦', ['Fraktur i']);
  this.executeCharTest('𝔧', ['Fraktur j']);
  this.executeCharTest('𝔨', ['Fraktur k']);
  this.executeCharTest('𝔩', ['Fraktur l']);
  this.executeCharTest('𝔪', ['Fraktur m']);
  this.executeCharTest('𝔫', ['Fraktur n']);
  this.executeCharTest('𝔬', ['Fraktur o']);
  this.executeCharTest('𝔭', ['Fraktur p']);
  this.executeCharTest('𝔮', ['Fraktur q']);
  this.executeCharTest('𝔯', ['Fraktur r']);
  this.executeCharTest('𝔰', ['Fraktur s']);
  this.executeCharTest('𝔱', ['Fraktur t']);
  this.executeCharTest('𝔲', ['Fraktur u']);
  this.executeCharTest('𝔳', ['Fraktur v']);
  this.executeCharTest('𝔴', ['Fraktur w']);
  this.executeCharTest('𝔵', ['Fraktur x']);
  this.executeCharTest('𝔶', ['Fraktur y']);
  this.executeCharTest('𝔷', ['Fraktur z']);
  this.executeCharTest('Ａ', ['großes A']);
  this.executeCharTest('Ｂ', ['großes B']);
  this.executeCharTest('Ｃ', ['großes C']);
  this.executeCharTest('Ｄ', ['großes D']);
  this.executeCharTest('Ｅ', ['großes E']);
  this.executeCharTest('Ｆ', ['großes F']);
  this.executeCharTest('Ｇ', ['großes G']);
  this.executeCharTest('Ｈ', ['großes H']);
  this.executeCharTest('Ｉ', ['großes I']);
  this.executeCharTest('Ｊ', ['großes J']);
  this.executeCharTest('Ｋ', ['großes K']);
  this.executeCharTest('Ｌ', ['großes L']);
  this.executeCharTest('Ｍ', ['großes M']);
  this.executeCharTest('Ｎ', ['großes N']);
  this.executeCharTest('Ｏ', ['großes O']);
  this.executeCharTest('Ｐ', ['großes P']);
  this.executeCharTest('Ｑ', ['großes Q']);
  this.executeCharTest('Ｒ', ['großes R']);
  this.executeCharTest('Ｓ', ['großes S']);
  this.executeCharTest('Ｔ', ['großes T']);
  this.executeCharTest('Ｕ', ['großes U']);
  this.executeCharTest('Ｖ', ['großes V']);
  this.executeCharTest('Ｗ', ['großes W']);
  this.executeCharTest('Ｘ', ['großes X']);
  this.executeCharTest('Ｙ', ['großes Y']);
  this.executeCharTest('Ｚ', ['großes Z']);
  this.executeCharTest('ａ', ['a']);
  this.executeCharTest('ｂ', ['b']);
  this.executeCharTest('ｃ', ['c']);
  this.executeCharTest('ｄ', ['d']);
  this.executeCharTest('ｅ', ['e']);
  this.executeCharTest('ｆ', ['f']);
  this.executeCharTest('ｇ', ['g']);
  this.executeCharTest('ｈ', ['h']);
  this.executeCharTest('ｉ', ['i']);
  this.executeCharTest('ｊ', ['j']);
  this.executeCharTest('ｋ', ['k']);
  this.executeCharTest('ｌ', ['l']);
  this.executeCharTest('ｍ', ['m']);
  this.executeCharTest('ｎ', ['n']);
  this.executeCharTest('ｏ', ['o']);
  this.executeCharTest('ｐ', ['p']);
  this.executeCharTest('ｑ', ['q']);
  this.executeCharTest('ｒ', ['r']);
  this.executeCharTest('ｓ', ['s']);
  this.executeCharTest('ｔ', ['t']);
  this.executeCharTest('ｕ', ['u']);
  this.executeCharTest('ｖ', ['v']);
  this.executeCharTest('ｗ', ['w']);
  this.executeCharTest('ｘ', ['x']);
  this.executeCharTest('ｙ', ['y']);
  this.executeCharTest('ｚ', ['z']);
  this.executeCharTest('𝐴', ['kursives großes A']);
  this.executeCharTest('𝐵', ['kursives großes B']);
  this.executeCharTest('𝐶', ['kursives großes C']);
  this.executeCharTest('𝐷', ['kursives großes D']);
  this.executeCharTest('𝐸', ['kursives großes E']);
  this.executeCharTest('𝐹', ['kursives großes F']);
  this.executeCharTest('𝐺', ['kursives großes G']);
  this.executeCharTest('𝐻', ['kursives großes H']);
  this.executeCharTest('𝐼', ['kursives großes I']);
  this.executeCharTest('𝐽', ['kursives großes J']);
  this.executeCharTest('𝐾', ['kursives großes K']);
  this.executeCharTest('𝐿', ['kursives großes L']);
  this.executeCharTest('𝑀', ['kursives großes M']);
  this.executeCharTest('𝑁', ['kursives großes N']);
  this.executeCharTest('𝑂', ['kursives großes O']);
  this.executeCharTest('𝑃', ['kursives großes P']);
  this.executeCharTest('𝑄', ['kursives großes Q']);
  this.executeCharTest('𝑅', ['kursives großes R']);
  this.executeCharTest('𝑆', ['kursives großes S']);
  this.executeCharTest('𝑇', ['kursives großes T']);
  this.executeCharTest('𝑈', ['kursives großes U']);
  this.executeCharTest('𝑉', ['kursives großes V']);
  this.executeCharTest('𝑊', ['kursives großes W']);
  this.executeCharTest('𝑋', ['kursives großes X']);
  this.executeCharTest('𝑌', ['kursives großes Y']);
  this.executeCharTest('𝑍', ['kursives großes Z']);
  this.executeCharTest('𝑎', ['kursives a']);
  this.executeCharTest('𝑏', ['kursives b']);
  this.executeCharTest('𝑐', ['kursives c']);
  this.executeCharTest('𝑑', ['kursives d']);
  this.executeCharTest('𝑒', ['kursives e']);
  this.executeCharTest('𝑓', ['kursives f']);
  this.executeCharTest('𝑔', ['kursives g']);
  this.executeCharTest('ℎ', ['Planck-Konstante']);
  this.executeCharTest('𝑖', ['kursives i']);
  this.executeCharTest('𝑗', ['kursives j']);
  this.executeCharTest('𝑘', ['kursives k']);
  this.executeCharTest('𝑙', ['kursives l']);
  this.executeCharTest('𝑚', ['kursives m']);
  this.executeCharTest('𝑛', ['kursives n']);
  this.executeCharTest('𝑜', ['kursives o']);
  this.executeCharTest('𝑝', ['kursives p']);
  this.executeCharTest('𝑞', ['kursives q']);
  this.executeCharTest('𝑟', ['kursives r']);
  this.executeCharTest('𝑠', ['kursives s']);
  this.executeCharTest('𝑡', ['kursives t']);
  this.executeCharTest('𝑢', ['kursives u']);
  this.executeCharTest('𝑣', ['kursives v']);
  this.executeCharTest('𝑤', ['kursives w']);
  this.executeCharTest('𝑥', ['kursives x']);
  this.executeCharTest('𝑦', ['kursives y']);
  this.executeCharTest('𝑧', ['kursives z']);
  this.executeCharTest('𝙰', ['nichtproportionales großes A']);
  this.executeCharTest('𝙱', ['nichtproportionales großes B']);
  this.executeCharTest('𝙲', ['nichtproportionales großes C']);
  this.executeCharTest('𝙳', ['nichtproportionales großes D']);
  this.executeCharTest('𝙴', ['nichtproportionales großes E']);
  this.executeCharTest('𝙵', ['nichtproportionales großes F']);
  this.executeCharTest('𝙶', ['nichtproportionales großes G']);
  this.executeCharTest('𝙷', ['nichtproportionales großes H']);
  this.executeCharTest('𝙸', ['nichtproportionales großes I']);
  this.executeCharTest('𝙹', ['nichtproportionales großes J']);
  this.executeCharTest('𝙺', ['nichtproportionales großes K']);
  this.executeCharTest('𝙻', ['nichtproportionales großes L']);
  this.executeCharTest('𝙼', ['nichtproportionales großes M']);
  this.executeCharTest('𝙽', ['nichtproportionales großes N']);
  this.executeCharTest('𝙾', ['nichtproportionales großes O']);
  this.executeCharTest('𝙿', ['nichtproportionales großes P']);
  this.executeCharTest('𝚀', ['nichtproportionales großes Q']);
  this.executeCharTest('𝚁', ['nichtproportionales großes R']);
  this.executeCharTest('𝚂', ['nichtproportionales großes S']);
  this.executeCharTest('𝚃', ['nichtproportionales großes T']);
  this.executeCharTest('𝚄', ['nichtproportionales großes U']);
  this.executeCharTest('𝚅', ['nichtproportionales großes V']);
  this.executeCharTest('𝚆', ['nichtproportionales großes W']);
  this.executeCharTest('𝚇', ['nichtproportionales großes X']);
  this.executeCharTest('𝚈', ['nichtproportionales großes Y']);
  this.executeCharTest('𝚉', ['nichtproportionales großes Z']);
  this.executeCharTest('𝚊', ['nichtproportionales a']);
  this.executeCharTest('𝚋', ['nichtproportionales b']);
  this.executeCharTest('𝚌', ['nichtproportionales c']);
  this.executeCharTest('𝚍', ['nichtproportionales d']);
  this.executeCharTest('𝚎', ['nichtproportionales e']);
  this.executeCharTest('𝚏', ['nichtproportionales f']);
  this.executeCharTest('𝚐', ['nichtproportionales g']);
  this.executeCharTest('𝚑', ['nichtproportionales h']);
  this.executeCharTest('𝚒', ['nichtproportionales i']);
  this.executeCharTest('𝚓', ['nichtproportionales j']);
  this.executeCharTest('𝚔', ['nichtproportionales k']);
  this.executeCharTest('𝚕', ['nichtproportionales l']);
  this.executeCharTest('𝚖', ['nichtproportionales m']);
  this.executeCharTest('𝚗', ['nichtproportionales n']);
  this.executeCharTest('𝚘', ['nichtproportionales o']);
  this.executeCharTest('𝚙', ['nichtproportionales p']);
  this.executeCharTest('𝚚', ['nichtproportionales q']);
  this.executeCharTest('𝚛', ['nichtproportionales r']);
  this.executeCharTest('𝚜', ['nichtproportionales s']);
  this.executeCharTest('𝚝', ['nichtproportionales t']);
  this.executeCharTest('𝚞', ['nichtproportionales u']);
  this.executeCharTest('𝚟', ['nichtproportionales v']);
  this.executeCharTest('𝚠', ['nichtproportionales w']);
  this.executeCharTest('𝚡', ['nichtproportionales x']);
  this.executeCharTest('𝚢', ['nichtproportionales y']);
  this.executeCharTest('𝚣', ['nichtproportionales z']);
  this.executeCharTest('A', ['großes A']);
  this.executeCharTest('B', ['großes B']);
  this.executeCharTest('C', ['großes C']);
  this.executeCharTest('D', ['großes D']);
  this.executeCharTest('E', ['großes E']);
  this.executeCharTest('F', ['großes F']);
  this.executeCharTest('G', ['großes G']);
  this.executeCharTest('H', ['großes H']);
  this.executeCharTest('I', ['großes I']);
  this.executeCharTest('J', ['großes J']);
  this.executeCharTest('K', ['großes K']);
  this.executeCharTest('L', ['großes L']);
  this.executeCharTest('M', ['großes M']);
  this.executeCharTest('N', ['großes N']);
  this.executeCharTest('O', ['großes O']);
  this.executeCharTest('P', ['großes P']);
  this.executeCharTest('Q', ['großes Q']);
  this.executeCharTest('R', ['großes R']);
  this.executeCharTest('S', ['großes S']);
  this.executeCharTest('T', ['großes T']);
  this.executeCharTest('U', ['großes U']);
  this.executeCharTest('V', ['großes V']);
  this.executeCharTest('W', ['großes W']);
  this.executeCharTest('X', ['großes X']);
  this.executeCharTest('Y', ['großes Y']);
  this.executeCharTest('Z', ['großes Z']);
  this.executeCharTest('a', ['a']);
  this.executeCharTest('b', ['b']);
  this.executeCharTest('c', ['c']);
  this.executeCharTest('d', ['d']);
  this.executeCharTest('e', ['e']);
  this.executeCharTest('f', ['f']);
  this.executeCharTest('g', ['g']);
  this.executeCharTest('h', ['h']);
  this.executeCharTest('i', ['i']);
  this.executeCharTest('j', ['j']);
  this.executeCharTest('k', ['k']);
  this.executeCharTest('l', ['l']);
  this.executeCharTest('m', ['m']);
  this.executeCharTest('n', ['n']);
  this.executeCharTest('o', ['o']);
  this.executeCharTest('p', ['p']);
  this.executeCharTest('q', ['q']);
  this.executeCharTest('r', ['r']);
  this.executeCharTest('s', ['s']);
  this.executeCharTest('t', ['t']);
  this.executeCharTest('u', ['u']);
  this.executeCharTest('v', ['v']);
  this.executeCharTest('w', ['w']);
  this.executeCharTest('x', ['x']);
  this.executeCharTest('y', ['y']);
  this.executeCharTest('z', ['z']);
  this.executeCharTest('𝒜', ['Schreibschrift großes A']);
  this.executeCharTest('ℬ', ['Schreibschrift großes B']);
  this.executeCharTest('𝒞', ['Schreibschrift großes C']);
  this.executeCharTest('𝒟', ['Schreibschrift großes D']);
  this.executeCharTest('ℰ', ['Schreibschrift großes E']);
  this.executeCharTest('ℱ', ['Schreibschrift großes F']);
  this.executeCharTest('𝒢', ['Schreibschrift großes G']);
  this.executeCharTest('ℋ', ['Schreibschrift großes H']);
  this.executeCharTest('ℐ', ['Schreibschrift großes I']);
  this.executeCharTest('𝒥', ['Schreibschrift großes J']);
  this.executeCharTest('𝒦', ['Schreibschrift großes K']);
  this.executeCharTest('ℒ', ['Schreibschrift großes L']);
  this.executeCharTest('ℳ', ['Schreibschrift großes M']);
  this.executeCharTest('𝒩', ['Schreibschrift großes N']);
  this.executeCharTest('𝒪', ['Schreibschrift großes O']);
  this.executeCharTest('𝒫', ['Schreibschrift großes P']);
  this.executeCharTest('𝒬', ['Schreibschrift großes Q']);
  this.executeCharTest('ℛ', ['Schreibschrift großes R']);
  this.executeCharTest('𝒮', ['Schreibschrift großes S']);
  this.executeCharTest('𝒯', ['Schreibschrift großes T']);
  this.executeCharTest('𝒰', ['Schreibschrift großes U']);
  this.executeCharTest('𝒱', ['Schreibschrift großes V']);
  this.executeCharTest('𝒲', ['Schreibschrift großes W']);
  this.executeCharTest('𝒳', ['Schreibschrift großes X']);
  this.executeCharTest('𝒴', ['Schreibschrift großes Y']);
  this.executeCharTest('𝒵', ['Schreibschrift großes Z']);
  this.executeCharTest('𝒶', ['Schreibschrift a']);
  this.executeCharTest('𝒷', ['Schreibschrift b']);
  this.executeCharTest('𝒸', ['Schreibschrift c']);
  this.executeCharTest('𝒹', ['Schreibschrift d']);
  this.executeCharTest('ℯ', ['Schreibschrift e']);
  this.executeCharTest('𝒻', ['Schreibschrift f']);
  this.executeCharTest('ℊ', ['Schreibschrift g']);
  this.executeCharTest('𝒽', ['Schreibschrift h']);
  this.executeCharTest('𝒾', ['Schreibschrift i']);
  this.executeCharTest('𝒿', ['Schreibschrift j']);
  this.executeCharTest('𝓀', ['Schreibschrift k']);
  this.executeCharTest('𝓁', ['Schreibschrift l']);
  this.executeCharTest('𝓂', ['Schreibschrift m']);
  this.executeCharTest('𝓃', ['Schreibschrift n']);
  this.executeCharTest('ℴ', ['Schreibschrift o']);
  this.executeCharTest('𝓅', ['Schreibschrift p']);
  this.executeCharTest('𝓆', ['Schreibschrift q']);
  this.executeCharTest('𝓇', ['Schreibschrift r']);
  this.executeCharTest('𝓈', ['Schreibschrift s']);
  this.executeCharTest('𝓉', ['Schreibschrift t']);
  this.executeCharTest('𝓊', ['Schreibschrift u']);
  this.executeCharTest('𝓋', ['Schreibschrift v']);
  this.executeCharTest('𝓌', ['Schreibschrift w']);
  this.executeCharTest('𝓍', ['Schreibschrift x']);
  this.executeCharTest('𝓎', ['Schreibschrift y']);
  this.executeCharTest('𝓏', ['Schreibschrift z']);
  this.executeCharTest('𝖠', ['serifenloses großes A']);
  this.executeCharTest('𝖡', ['serifenloses großes B']);
  this.executeCharTest('𝖢', ['serifenloses großes C']);
  this.executeCharTest('𝖣', ['serifenloses großes D']);
  this.executeCharTest('𝖤', ['serifenloses großes E']);
  this.executeCharTest('𝖥', ['serifenloses großes F']);
  this.executeCharTest('𝖦', ['serifenloses großes G']);
  this.executeCharTest('𝖧', ['serifenloses großes H']);
  this.executeCharTest('𝖨', ['serifenloses großes I']);
  this.executeCharTest('𝖩', ['serifenloses großes J']);
  this.executeCharTest('𝖪', ['serifenloses großes K']);
  this.executeCharTest('𝖫', ['serifenloses großes L']);
  this.executeCharTest('𝖬', ['serifenloses großes M']);
  this.executeCharTest('𝖭', ['serifenloses großes N']);
  this.executeCharTest('𝖮', ['serifenloses großes O']);
  this.executeCharTest('𝖯', ['serifenloses großes P']);
  this.executeCharTest('𝖰', ['serifenloses großes Q']);
  this.executeCharTest('𝖱', ['serifenloses großes R']);
  this.executeCharTest('𝖲', ['serifenloses großes S']);
  this.executeCharTest('𝖳', ['serifenloses großes T']);
  this.executeCharTest('𝖴', ['serifenloses großes U']);
  this.executeCharTest('𝖵', ['serifenloses großes V']);
  this.executeCharTest('𝖶', ['serifenloses großes W']);
  this.executeCharTest('𝖷', ['serifenloses großes X']);
  this.executeCharTest('𝖸', ['serifenloses großes Y']);
  this.executeCharTest('𝖹', ['serifenloses großes Z']);
  this.executeCharTest('𝖺', ['serifenloses a']);
  this.executeCharTest('𝖻', ['serifenloses b']);
  this.executeCharTest('𝖼', ['serifenloses c']);
  this.executeCharTest('𝖽', ['serifenloses d']);
  this.executeCharTest('𝖾', ['serifenloses e']);
  this.executeCharTest('𝖿', ['serifenloses f']);
  this.executeCharTest('𝗀', ['serifenloses g']);
  this.executeCharTest('𝗁', ['serifenloses h']);
  this.executeCharTest('𝗂', ['serifenloses i']);
  this.executeCharTest('𝗃', ['serifenloses j']);
  this.executeCharTest('𝗄', ['serifenloses k']);
  this.executeCharTest('𝗅', ['serifenloses l']);
  this.executeCharTest('𝗆', ['serifenloses m']);
  this.executeCharTest('𝗇', ['serifenloses n']);
  this.executeCharTest('𝗈', ['serifenloses o']);
  this.executeCharTest('𝗉', ['serifenloses p']);
  this.executeCharTest('𝗊', ['serifenloses q']);
  this.executeCharTest('𝗋', ['serifenloses r']);
  this.executeCharTest('𝗌', ['serifenloses s']);
  this.executeCharTest('𝗍', ['serifenloses t']);
  this.executeCharTest('𝗎', ['serifenloses u']);
  this.executeCharTest('𝗏', ['serifenloses v']);
  this.executeCharTest('𝗐', ['serifenloses w']);
  this.executeCharTest('𝗑', ['serifenloses x']);
  this.executeCharTest('𝗒', ['serifenloses y']);
  this.executeCharTest('𝗓', ['serifenloses z']);
  this.executeCharTest('𝘈', ['serifenloses kursives großes A']);
  this.executeCharTest('𝘉', ['serifenloses kursives großes B']);
  this.executeCharTest('𝘊', ['serifenloses kursives großes C']);
  this.executeCharTest('𝘋', ['serifenloses kursives großes D']);
  this.executeCharTest('𝘌', ['serifenloses kursives großes E']);
  this.executeCharTest('𝘍', ['serifenloses kursives großes F']);
  this.executeCharTest('𝘎', ['serifenloses kursives großes G']);
  this.executeCharTest('𝘏', ['serifenloses kursives großes H']);
  this.executeCharTest('𝘐', ['serifenloses kursives großes I']);
  this.executeCharTest('𝘑', ['serifenloses kursives großes J']);
  this.executeCharTest('𝘒', ['serifenloses kursives großes K']);
  this.executeCharTest('𝘓', ['serifenloses kursives großes L']);
  this.executeCharTest('𝘔', ['serifenloses kursives großes M']);
  this.executeCharTest('𝘕', ['serifenloses kursives großes N']);
  this.executeCharTest('𝘖', ['serifenloses kursives großes O']);
  this.executeCharTest('𝘗', ['serifenloses kursives großes P']);
  this.executeCharTest('𝘘', ['serifenloses kursives großes Q']);
  this.executeCharTest('𝘙', ['serifenloses kursives großes R']);
  this.executeCharTest('𝘚', ['serifenloses kursives großes S']);
  this.executeCharTest('𝘛', ['serifenloses kursives großes T']);
  this.executeCharTest('𝘜', ['serifenloses kursives großes U']);
  this.executeCharTest('𝘝', ['serifenloses kursives großes V']);
  this.executeCharTest('𝘞', ['serifenloses kursives großes W']);
  this.executeCharTest('𝘟', ['serifenloses kursives großes X']);
  this.executeCharTest('𝘠', ['serifenloses kursives großes Y']);
  this.executeCharTest('𝘡', ['serifenloses kursives großes Z']);
  this.executeCharTest('𝘢', ['serifenloses kursives a']);
  this.executeCharTest('𝘣', ['serifenloses kursives b']);
  this.executeCharTest('𝘤', ['serifenloses kursives c']);
  this.executeCharTest('𝘥', ['serifenloses kursives d']);
  this.executeCharTest('𝘦', ['serifenloses kursives e']);
  this.executeCharTest('𝘧', ['serifenloses kursives f']);
  this.executeCharTest('𝘨', ['serifenloses kursives g']);
  this.executeCharTest('𝘩', ['serifenloses kursives h']);
  this.executeCharTest('𝘪', ['serifenloses kursives i']);
  this.executeCharTest('𝘫', ['serifenloses kursives j']);
  this.executeCharTest('𝘬', ['serifenloses kursives k']);
  this.executeCharTest('𝘭', ['serifenloses kursives l']);
  this.executeCharTest('𝘮', ['serifenloses kursives m']);
  this.executeCharTest('𝘯', ['serifenloses kursives n']);
  this.executeCharTest('𝘰', ['serifenloses kursives o']);
  this.executeCharTest('𝘱', ['serifenloses kursives p']);
  this.executeCharTest('𝘲', ['serifenloses kursives q']);
  this.executeCharTest('𝘳', ['serifenloses kursives r']);
  this.executeCharTest('𝘴', ['serifenloses kursives s']);
  this.executeCharTest('𝘵', ['serifenloses kursives t']);
  this.executeCharTest('𝘶', ['serifenloses kursives u']);
  this.executeCharTest('𝘷', ['serifenloses kursives v']);
  this.executeCharTest('𝘸', ['serifenloses kursives w']);
  this.executeCharTest('𝘹', ['serifenloses kursives x']);
  this.executeCharTest('𝘺', ['serifenloses kursives y']);
  this.executeCharTest('𝘻', ['serifenloses kursives z']);
  this.executeCharTest('𝗔', ['serifenloses fettes großes A']);
  this.executeCharTest('𝗕', ['serifenloses fettes großes B']);
  this.executeCharTest('𝗖', ['serifenloses fettes großes C']);
  this.executeCharTest('𝗗', ['serifenloses fettes großes D']);
  this.executeCharTest('𝗘', ['serifenloses fettes großes E']);
  this.executeCharTest('𝗙', ['serifenloses fettes großes F']);
  this.executeCharTest('𝗚', ['serifenloses fettes großes G']);
  this.executeCharTest('𝗛', ['serifenloses fettes großes H']);
  this.executeCharTest('𝗜', ['serifenloses fettes großes I']);
  this.executeCharTest('𝗝', ['serifenloses fettes großes J']);
  this.executeCharTest('𝗞', ['serifenloses fettes großes K']);
  this.executeCharTest('𝗟', ['serifenloses fettes großes L']);
  this.executeCharTest('𝗠', ['serifenloses fettes großes M']);
  this.executeCharTest('𝗡', ['serifenloses fettes großes N']);
  this.executeCharTest('𝗢', ['serifenloses fettes großes O']);
  this.executeCharTest('𝗣', ['serifenloses fettes großes P']);
  this.executeCharTest('𝗤', ['serifenloses fettes großes Q']);
  this.executeCharTest('𝗥', ['serifenloses fettes großes R']);
  this.executeCharTest('𝗦', ['serifenloses fettes großes S']);
  this.executeCharTest('𝗧', ['serifenloses fettes großes T']);
  this.executeCharTest('𝗨', ['serifenloses fettes großes U']);
  this.executeCharTest('𝗩', ['serifenloses fettes großes V']);
  this.executeCharTest('𝗪', ['serifenloses fettes großes W']);
  this.executeCharTest('𝗫', ['serifenloses fettes großes X']);
  this.executeCharTest('𝗬', ['serifenloses fettes großes Y']);
  this.executeCharTest('𝗭', ['serifenloses fettes großes Z']);
  this.executeCharTest('𝗮', ['serifenloses fettes a']);
  this.executeCharTest('𝗯', ['serifenloses fettes b']);
  this.executeCharTest('𝗰', ['serifenloses fettes c']);
  this.executeCharTest('𝗱', ['serifenloses fettes d']);
  this.executeCharTest('𝗲', ['serifenloses fettes e']);
  this.executeCharTest('𝗳', ['serifenloses fettes f']);
  this.executeCharTest('𝗴', ['serifenloses fettes g']);
  this.executeCharTest('𝗵', ['serifenloses fettes h']);
  this.executeCharTest('𝗶', ['serifenloses fettes i']);
  this.executeCharTest('𝗷', ['serifenloses fettes j']);
  this.executeCharTest('𝗸', ['serifenloses fettes k']);
  this.executeCharTest('𝗹', ['serifenloses fettes l']);
  this.executeCharTest('𝗺', ['serifenloses fettes m']);
  this.executeCharTest('𝗻', ['serifenloses fettes n']);
  this.executeCharTest('𝗼', ['serifenloses fettes o']);
  this.executeCharTest('𝗽', ['serifenloses fettes p']);
  this.executeCharTest('𝗾', ['serifenloses fettes q']);
  this.executeCharTest('𝗿', ['serifenloses fettes r']);
  this.executeCharTest('𝘀', ['serifenloses fettes s']);
  this.executeCharTest('𝘁', ['serifenloses fettes t']);
  this.executeCharTest('𝘂', ['serifenloses fettes u']);
  this.executeCharTest('𝘃', ['serifenloses fettes v']);
  this.executeCharTest('𝘄', ['serifenloses fettes w']);
  this.executeCharTest('𝘅', ['serifenloses fettes x']);
  this.executeCharTest('𝘆', ['serifenloses fettes y']);
  this.executeCharTest('𝘇', ['serifenloses fettes z']);
  this.executeCharTest('𝘼', ['serifenloses fettkursives großes A']);
  this.executeCharTest('𝘽', ['serifenloses fettkursives großes B']);
  this.executeCharTest('𝘾', ['serifenloses fettkursives großes C']);
  this.executeCharTest('𝘿', ['serifenloses fettkursives großes D']);
  this.executeCharTest('𝙀', ['serifenloses fettkursives großes E']);
  this.executeCharTest('𝙁', ['serifenloses fettkursives großes F']);
  this.executeCharTest('𝙂', ['serifenloses fettkursives großes G']);
  this.executeCharTest('𝙃', ['serifenloses fettkursives großes H']);
  this.executeCharTest('𝙄', ['serifenloses fettkursives großes I']);
  this.executeCharTest('𝙅', ['serifenloses fettkursives großes J']);
  this.executeCharTest('𝙆', ['serifenloses fettkursives großes K']);
  this.executeCharTest('𝙇', ['serifenloses fettkursives großes L']);
  this.executeCharTest('𝙈', ['serifenloses fettkursives großes M']);
  this.executeCharTest('𝙉', ['serifenloses fettkursives großes N']);
  this.executeCharTest('𝙊', ['serifenloses fettkursives großes O']);
  this.executeCharTest('𝙋', ['serifenloses fettkursives großes P']);
  this.executeCharTest('𝙌', ['serifenloses fettkursives großes Q']);
  this.executeCharTest('𝙍', ['serifenloses fettkursives großes R']);
  this.executeCharTest('𝙎', ['serifenloses fettkursives großes S']);
  this.executeCharTest('𝙏', ['serifenloses fettkursives großes T']);
  this.executeCharTest('𝙐', ['serifenloses fettkursives großes U']);
  this.executeCharTest('𝙑', ['serifenloses fettkursives großes V']);
  this.executeCharTest('𝙒', ['serifenloses fettkursives großes W']);
  this.executeCharTest('𝙓', ['serifenloses fettkursives großes X']);
  this.executeCharTest('𝙔', ['serifenloses fettkursives großes Y']);
  this.executeCharTest('𝙕', ['serifenloses fettkursives großes Z']);
  this.executeCharTest('𝙖', ['serifenloses fettkursives a']);
  this.executeCharTest('𝙗', ['serifenloses fettkursives b']);
  this.executeCharTest('𝙘', ['serifenloses fettkursives c']);
  this.executeCharTest('𝙙', ['serifenloses fettkursives d']);
  this.executeCharTest('𝙚', ['serifenloses fettkursives e']);
  this.executeCharTest('𝙛', ['serifenloses fettkursives f']);
  this.executeCharTest('𝙜', ['serifenloses fettkursives g']);
  this.executeCharTest('𝙝', ['serifenloses fettkursives h']);
  this.executeCharTest('𝙞', ['serifenloses fettkursives i']);
  this.executeCharTest('𝙟', ['serifenloses fettkursives j']);
  this.executeCharTest('𝙠', ['serifenloses fettkursives k']);
  this.executeCharTest('𝙡', ['serifenloses fettkursives l']);
  this.executeCharTest('𝙢', ['serifenloses fettkursives m']);
  this.executeCharTest('𝙣', ['serifenloses fettkursives n']);
  this.executeCharTest('𝙤', ['serifenloses fettkursives o']);
  this.executeCharTest('𝙥', ['serifenloses fettkursives p']);
  this.executeCharTest('𝙦', ['serifenloses fettkursives q']);
  this.executeCharTest('𝙧', ['serifenloses fettkursives r']);
  this.executeCharTest('𝙨', ['serifenloses fettkursives s']);
  this.executeCharTest('𝙩', ['serifenloses fettkursives t']);
  this.executeCharTest('𝙪', ['serifenloses fettkursives u']);
  this.executeCharTest('𝙫', ['serifenloses fettkursives v']);
  this.executeCharTest('𝙬', ['serifenloses fettkursives w']);
  this.executeCharTest('𝙭', ['serifenloses fettkursives x']);
  this.executeCharTest('𝙮', ['serifenloses fettkursives y']);
  this.executeCharTest('𝙯', ['serifenloses fettkursives z']);
  this.executeCharTest('Α', ['großes Alpha']);
  this.executeCharTest('Β', ['großes Beta']);
  this.executeCharTest('Γ', ['großes Gamma']);
  this.executeCharTest('Δ', ['großes Delta']);
  this.executeCharTest('Ε', ['großes Epsilon']);
  this.executeCharTest('Ζ', ['großes Zeta']);
  this.executeCharTest('Η', ['großes Eta']);
  this.executeCharTest('Θ', ['großes Theta']);
  this.executeCharTest('Ι', ['großes Iota']);
  this.executeCharTest('Κ', ['großes Kappa']);
  this.executeCharTest('Λ', ['großes Lambda']);
  this.executeCharTest('Μ', ['großes My']);
  this.executeCharTest('Ν', ['großes Ny']);
  this.executeCharTest('Ξ', ['großes Xi']);
  this.executeCharTest('Ο', ['großes Omikron']);
  this.executeCharTest('Π', ['großes Pi']);
  this.executeCharTest('Ρ', ['großes Rho']);
  this.executeCharTest('ϴ', ['großes Theta']);
  this.executeCharTest('Σ', ['großes Sigma']);
  this.executeCharTest('Τ', ['großes Tau']);
  this.executeCharTest('Υ', ['großes Ypsilon']);
  this.executeCharTest('Φ', ['großes Phi']);
  this.executeCharTest('Χ', ['großes Chi']);
  this.executeCharTest('Ψ', ['großes Psi']);
  this.executeCharTest('Ω', ['großes Omega']);
  this.executeCharTest('∇', ['nabla']);
  this.executeCharTest('α', ['alpha']);
  this.executeCharTest('β', ['beta']);
  this.executeCharTest('γ', ['gamma']);
  this.executeCharTest('δ', ['delta']);
  this.executeCharTest('ε', ['epsilon']);
  this.executeCharTest('ζ', ['zeta']);
  this.executeCharTest('η', ['eta']);
  this.executeCharTest('θ', ['theta']);
  this.executeCharTest('ι', ['iota']);
  this.executeCharTest('κ', ['kappa']);
  this.executeCharTest('λ', ['lambda']);
  this.executeCharTest('μ', ['my']);
  this.executeCharTest('ν', ['ny']);
  this.executeCharTest('ξ', ['xi']);
  this.executeCharTest('ο', ['omikron']);
  this.executeCharTest('π', ['pi']);
  this.executeCharTest('ρ', ['rho']);
  this.executeCharTest('ς', ['abschließendes sigma']);
  this.executeCharTest('σ', ['sigma']);
  this.executeCharTest('τ', ['tau']);
  this.executeCharTest('υ', ['ypsilon']);
  this.executeCharTest('φ', ['phi']);
  this.executeCharTest('χ', ['chi']);
  this.executeCharTest('ψ', ['psi']);
  this.executeCharTest('ω', ['omega']);
  this.executeCharTest('∂', ['partielle Ableitung']);
  this.executeCharTest('ϵ', ['epsilon']);
  this.executeCharTest('ϑ', ['theta']);
  this.executeCharTest('ϰ', ['kappa']);
  this.executeCharTest('ϕ', ['phi']);
  this.executeCharTest('ϱ', ['rho']);
  this.executeCharTest('ϖ', ['pi']);
  this.executeCharTest('𝚨', ['fettes großes Alpha']);
  this.executeCharTest('𝚩', ['fettes großes Beta']);
  this.executeCharTest('𝚪', ['fettes großes Gamma']);
  this.executeCharTest('𝚫', ['fettes großes Delta']);
  this.executeCharTest('𝚬', ['fettes großes Epsilon']);
  this.executeCharTest('𝚭', ['fettes großes Zeta']);
  this.executeCharTest('𝚮', ['fettes großes Eta']);
  this.executeCharTest('𝚯', ['fettes großes Theta']);
  this.executeCharTest('𝚰', ['fettes großes Iota']);
  this.executeCharTest('𝚱', ['fettes großes Kappa']);
  this.executeCharTest('𝚲', ['fettes großes Lambda']);
  this.executeCharTest('𝚳', ['fettes großes My']);
  this.executeCharTest('𝚴', ['fettes großes Ny']);
  this.executeCharTest('𝚵', ['fettes großes Xi']);
  this.executeCharTest('𝚶', ['fettes großes Omikron']);
  this.executeCharTest('𝚷', ['fettes großes Pi']);
  this.executeCharTest('𝚸', ['fettes großes Rho']);
  this.executeCharTest('𝚹', ['fettes großes Theta']);
  this.executeCharTest('𝚺', ['fettes großes Sigma']);
  this.executeCharTest('𝚻', ['fettes großes Tau']);
  this.executeCharTest('𝚼', ['fettes großes Ypsilon']);
  this.executeCharTest('𝚽', ['fettes großes Phi']);
  this.executeCharTest('𝚾', ['fettes großes Chi']);
  this.executeCharTest('𝚿', ['fettes großes Psi']);
  this.executeCharTest('𝛀', ['fettes großes Omega']);
  this.executeCharTest('𝛁', ['fettes nabla']);
  this.executeCharTest('𝛂', ['fettes alpha']);
  this.executeCharTest('𝛃', ['fettes beta']);
  this.executeCharTest('𝛄', ['fettes gamma']);
  this.executeCharTest('𝛅', ['fettes delta']);
  this.executeCharTest('𝛆', ['fettes epsilon']);
  this.executeCharTest('𝛇', ['fettes zeta']);
  this.executeCharTest('𝛈', ['fettes eta']);
  this.executeCharTest('𝛉', ['fettes theta']);
  this.executeCharTest('𝛊', ['fettes iota']);
  this.executeCharTest('𝛋', ['fettes kappa']);
  this.executeCharTest('𝛌', ['fettes lambda']);
  this.executeCharTest('𝛍', ['fettes my']);
  this.executeCharTest('𝛎', ['fettes ny']);
  this.executeCharTest('𝛏', ['fettes xi']);
  this.executeCharTest('𝛐', ['fettes omikron']);
  this.executeCharTest('𝛑', ['fettes pi']);
  this.executeCharTest('𝛒', ['fettes rho']);
  this.executeCharTest('𝛓', ['fettes abschließendes sigma']);
  this.executeCharTest('𝛔', ['fettes sigma']);
  this.executeCharTest('𝛕', ['fettes tau']);
  this.executeCharTest('𝛖', ['fettes ypsilon']);
  this.executeCharTest('𝛗', ['fettes phi']);
  this.executeCharTest('𝛘', ['fettes chi']);
  this.executeCharTest('𝛙', ['fettes psi']);
  this.executeCharTest('𝛚', ['fettes omega']);
  this.executeCharTest('𝛛', ['fettes partielle Ableitung']);
  this.executeCharTest('𝛜', ['fettes epsilon']);
  this.executeCharTest('𝛝', ['fettes theta']);
  this.executeCharTest('𝛞', ['fettes kappa']);
  this.executeCharTest('𝛟', ['fettes phi']);
  this.executeCharTest('𝛠', ['fettes rho']);
  this.executeCharTest('𝛡', ['fettes pi']);
  this.executeCharTest('𝛢', ['kursives großes Alpha']);
  this.executeCharTest('𝛣', ['kursives großes Beta']);
  this.executeCharTest('𝛤', ['kursives großes Gamma']);
  this.executeCharTest('𝛥', ['kursives großes Delta']);
  this.executeCharTest('𝛦', ['kursives großes Epsilon']);
  this.executeCharTest('𝛧', ['kursives großes Zeta']);
  this.executeCharTest('𝛨', ['kursives großes Eta']);
  this.executeCharTest('𝛩', ['kursives großes Theta']);
  this.executeCharTest('𝛪', ['kursives großes Iota']);
  this.executeCharTest('𝛫', ['kursives großes Kappa']);
  this.executeCharTest('𝛬', ['kursives großes Lambda']);
  this.executeCharTest('𝛭', ['kursives großes My']);
  this.executeCharTest('𝛮', ['kursives großes Ny']);
  this.executeCharTest('𝛯', ['kursives großes Xi']);
  this.executeCharTest('𝛰', ['kursives großes Omikron']);
  this.executeCharTest('𝛱', ['kursives großes Pi']);
  this.executeCharTest('𝛲', ['kursives großes Rho']);
  this.executeCharTest('𝛳', ['kursives großes Theta']);
  this.executeCharTest('𝛴', ['kursives großes Sigma']);
  this.executeCharTest('𝛵', ['kursives großes Tau']);
  this.executeCharTest('𝛶', ['kursives großes Ypsilon']);
  this.executeCharTest('𝛷', ['kursives großes Phi']);
  this.executeCharTest('𝛸', ['kursives großes Chi']);
  this.executeCharTest('𝛹', ['kursives großes Psi']);
  this.executeCharTest('𝛺', ['kursives großes Omega']);
  this.executeCharTest('𝛻', ['kursives nabla']);
  this.executeCharTest('𝛼', ['kursives alpha']);
  this.executeCharTest('𝛽', ['kursives beta']);
  this.executeCharTest('𝛾', ['kursives gamma']);
  this.executeCharTest('𝛿', ['kursives delta']);
  this.executeCharTest('𝜀', ['kursives epsilon']);
  this.executeCharTest('𝜁', ['kursives zeta']);
  this.executeCharTest('𝜂', ['kursives eta']);
  this.executeCharTest('𝜃', ['kursives theta']);
  this.executeCharTest('𝜄', ['kursives iota']);
  this.executeCharTest('𝜅', ['kursives kappa']);
  this.executeCharTest('𝜆', ['kursives lambda']);
  this.executeCharTest('𝜇', ['kursives my']);
  this.executeCharTest('𝜈', ['kursives ny']);
  this.executeCharTest('𝜉', ['kursives xi']);
  this.executeCharTest('𝜊', ['kursives omikron']);
  this.executeCharTest('𝜋', ['kursives pi']);
  this.executeCharTest('𝜌', ['kursives rho']);
  this.executeCharTest('𝜍', ['kursives abschließendes sigma']);
  this.executeCharTest('𝜎', ['kursives sigma']);
  this.executeCharTest('𝜏', ['kursives tau']);
  this.executeCharTest('𝜐', ['kursives ypsilon']);
  this.executeCharTest('𝜑', ['kursives phi']);
  this.executeCharTest('𝜒', ['kursives chi']);
  this.executeCharTest('𝜓', ['kursives psi']);
  this.executeCharTest('𝜔', ['kursives omega']);
  this.executeCharTest('𝜕', ['kursives partielle Ableitung']);
  this.executeCharTest('𝜖', ['kursives epsilon']);
  this.executeCharTest('𝜗', ['kursives theta']);
  this.executeCharTest('𝜘', ['kursives kappa']);
  this.executeCharTest('𝜙', ['kursives phi']);
  this.executeCharTest('𝜚', ['kursives rho']);
  this.executeCharTest('𝜛', ['kursives pi']);
  this.executeCharTest('𝜜', ['fettkursives großes Alpha']);
  this.executeCharTest('𝜝', ['fettkursives großes Beta']);
  this.executeCharTest('𝜞', ['fettkursives großes Gamma']);
  this.executeCharTest('𝜟', ['fettkursives großes Delta']);
  this.executeCharTest('𝜠', ['fettkursives großes Epsilon']);
  this.executeCharTest('𝜡', ['fettkursives großes Zeta']);
  this.executeCharTest('𝜢', ['fettkursives großes Eta']);
  this.executeCharTest('𝜣', ['fettkursives großes Theta']);
  this.executeCharTest('𝜤', ['fettkursives großes Iota']);
  this.executeCharTest('𝜥', ['fettkursives großes Kappa']);
  this.executeCharTest('𝜦', ['fettkursives großes Lambda']);
  this.executeCharTest('𝜧', ['fettkursives großes My']);
  this.executeCharTest('𝜨', ['fettkursives großes Ny']);
  this.executeCharTest('𝜩', ['fettkursives großes Xi']);
  this.executeCharTest('𝜪', ['fettkursives großes Omikron']);
  this.executeCharTest('𝜫', ['fettkursives großes Pi']);
  this.executeCharTest('𝜬', ['fettkursives großes Rho']);
  this.executeCharTest('𝜭', ['fettkursives großes Theta']);
  this.executeCharTest('𝜮', ['fettkursives großes Sigma']);
  this.executeCharTest('𝜯', ['fettkursives großes Tau']);
  this.executeCharTest('𝜰', ['fettkursives großes Ypsilon']);
  this.executeCharTest('𝜱', ['fettkursives großes Phi']);
  this.executeCharTest('𝜲', ['fettkursives großes Chi']);
  this.executeCharTest('𝜳', ['fettkursives großes Psi']);
  this.executeCharTest('𝜴', ['fettkursives großes Omega']);
  this.executeCharTest('𝜵', ['fettkursives nabla']);
  this.executeCharTest('𝜶', ['fettkursives alpha']);
  this.executeCharTest('𝜷', ['fettkursives beta']);
  this.executeCharTest('𝜸', ['fettkursives gamma']);
  this.executeCharTest('𝜹', ['fettkursives delta']);
  this.executeCharTest('𝜺', ['fettkursives epsilon']);
  this.executeCharTest('𝜻', ['fettkursives zeta']);
  this.executeCharTest('𝜼', ['fettkursives eta']);
  this.executeCharTest('𝜽', ['fettkursives theta']);
  this.executeCharTest('𝜾', ['fettkursives iota']);
  this.executeCharTest('𝜿', ['fettkursives kappa']);
  this.executeCharTest('𝝀', ['fettkursives lambda']);
  this.executeCharTest('𝝁', ['fettkursives my']);
  this.executeCharTest('𝝂', ['fettkursives ny']);
  this.executeCharTest('𝝃', ['fettkursives xi']);
  this.executeCharTest('𝝄', ['fettkursives omikron']);
  this.executeCharTest('𝝅', ['fettkursives pi']);
  this.executeCharTest('𝝆', ['fettkursives rho']);
  this.executeCharTest('𝝇', ['fettkursives abschließendes sigma']);
  this.executeCharTest('𝝈', ['fettkursives sigma']);
  this.executeCharTest('𝝉', ['fettkursives tau']);
  this.executeCharTest('𝝊', ['fettkursives ypsilon']);
  this.executeCharTest('𝝋', ['fettkursives phi']);
  this.executeCharTest('𝝌', ['fettkursives chi']);
  this.executeCharTest('𝝍', ['fettkursives psi']);
  this.executeCharTest('𝝎', ['fettkursives omega']);
  this.executeCharTest('𝝏', ['fettkursives partielle Ableitung']);
  this.executeCharTest('𝝐', ['fettkursives epsilon']);
  this.executeCharTest('𝝑', ['fettkursives theta']);
  this.executeCharTest('𝝒', ['fettkursives kappa']);
  this.executeCharTest('𝝓', ['fettkursives phi']);
  this.executeCharTest('𝝔', ['fettkursives rho']);
  this.executeCharTest('𝝕', ['fettkursives pi']);
  this.executeCharTest('𝝖', ['serifenloses fettes großes Alpha']);
  this.executeCharTest('𝝗', ['serifenloses fettes großes Beta']);
  this.executeCharTest('𝝘', ['serifenloses fettes großes Gamma']);
  this.executeCharTest('𝝙', ['serifenloses fettes großes Delta']);
  this.executeCharTest('𝝚', ['serifenloses fettes großes Epsilon']);
  this.executeCharTest('𝝛', ['serifenloses fettes großes Zeta']);
  this.executeCharTest('𝝜', ['serifenloses fettes großes Eta']);
  this.executeCharTest('𝝝', ['serifenloses fettes großes Theta']);
  this.executeCharTest('𝝞', ['serifenloses fettes großes Iota']);
  this.executeCharTest('𝝟', ['serifenloses fettes großes Kappa']);
  this.executeCharTest('𝝠', ['serifenloses fettes großes Lambda']);
  this.executeCharTest('𝝡', ['serifenloses fettes großes My']);
  this.executeCharTest('𝝢', ['serifenloses fettes großes Ny']);
  this.executeCharTest('𝝣', ['serifenloses fettes großes Xi']);
  this.executeCharTest('𝝤', ['serifenloses fettes großes Omikron']);
  this.executeCharTest('𝝥', ['serifenloses fettes großes Pi']);
  this.executeCharTest('𝝦', ['serifenloses fettes großes Rho']);
  this.executeCharTest('𝝧', ['serifenloses fettes großes Theta']);
  this.executeCharTest('𝝨', ['serifenloses fettes großes Sigma']);
  this.executeCharTest('𝝩', ['serifenloses fettes großes Tau']);
  this.executeCharTest('𝝪', ['serifenloses fettes großes Ypsilon']);
  this.executeCharTest('𝝫', ['serifenloses fettes großes Phi']);
  this.executeCharTest('𝝬', ['serifenloses fettes großes Chi']);
  this.executeCharTest('𝝭', ['serifenloses fettes großes Psi']);
  this.executeCharTest('𝝮', ['serifenloses fettes großes Omega']);
  this.executeCharTest('𝝯', ['serifenloses fettes nabla']);
  this.executeCharTest('𝝰', ['serifenloses fettes alpha']);
  this.executeCharTest('𝝱', ['serifenloses fettes beta']);
  this.executeCharTest('𝝲', ['serifenloses fettes gamma']);
  this.executeCharTest('𝝳', ['serifenloses fettes delta']);
  this.executeCharTest('𝝴', ['serifenloses fettes epsilon']);
  this.executeCharTest('𝝵', ['serifenloses fettes zeta']);
  this.executeCharTest('𝝶', ['serifenloses fettes eta']);
  this.executeCharTest('𝝷', ['serifenloses fettes theta']);
  this.executeCharTest('𝝸', ['serifenloses fettes iota']);
  this.executeCharTest('𝝹', ['serifenloses fettes kappa']);
  this.executeCharTest('𝝺', ['serifenloses fettes lambda']);
  this.executeCharTest('𝝻', ['serifenloses fettes my']);
  this.executeCharTest('𝝼', ['serifenloses fettes ny']);
  this.executeCharTest('𝝽', ['serifenloses fettes xi']);
  this.executeCharTest('𝝾', ['serifenloses fettes omikron']);
  this.executeCharTest('𝝿', ['serifenloses fettes pi']);
  this.executeCharTest('𝞀', ['serifenloses fettes rho']);
  this.executeCharTest('𝞁', ['serifenloses fettes abschließendes sigma']);
  this.executeCharTest('𝞂', ['serifenloses fettes sigma']);
  this.executeCharTest('𝞃', ['serifenloses fettes tau']);
  this.executeCharTest('𝞄', ['serifenloses fettes ypsilon']);
  this.executeCharTest('𝞅', ['serifenloses fettes phi']);
  this.executeCharTest('𝞆', ['serifenloses fettes chi']);
  this.executeCharTest('𝞇', ['serifenloses fettes psi']);
  this.executeCharTest('𝞈', ['serifenloses fettes omega']);
  this.executeCharTest('𝞉', ['serifenloses fettes partielle Ableitung']);
  this.executeCharTest('𝞊', ['serifenloses fettes epsilon']);
  this.executeCharTest('𝞋', ['serifenloses fettes theta']);
  this.executeCharTest('𝞌', ['serifenloses fettes kappa']);
  this.executeCharTest('𝞍', ['serifenloses fettes phi']);
  this.executeCharTest('𝞎', ['serifenloses fettes rho']);
  this.executeCharTest('𝞏', ['serifenloses fettes pi']);
  this.executeCharTest('𝞐', ['serifenloses fettkursives großes Alpha']);
  this.executeCharTest('𝞑', ['serifenloses fettkursives großes Beta']);
  this.executeCharTest('𝞒', ['serifenloses fettkursives großes Gamma']);
  this.executeCharTest('𝞓', ['serifenloses fettkursives großes Delta']);
  this.executeCharTest('𝞔', ['serifenloses fettkursives großes Epsilon']);
  this.executeCharTest('𝞕', ['serifenloses fettkursives großes Zeta']);
  this.executeCharTest('𝞖', ['serifenloses fettkursives großes Eta']);
  this.executeCharTest('𝞗', ['serifenloses fettkursives großes Theta']);
  this.executeCharTest('𝞘', ['serifenloses fettkursives großes Iota']);
  this.executeCharTest('𝞙', ['serifenloses fettkursives großes Kappa']);
  this.executeCharTest('𝞚', ['serifenloses fettkursives großes Lambda']);
  this.executeCharTest('𝞛', ['serifenloses fettkursives großes My']);
  this.executeCharTest('𝞜', ['serifenloses fettkursives großes Ny']);
  this.executeCharTest('𝞝', ['serifenloses fettkursives großes Xi']);
  this.executeCharTest('𝞞', ['serifenloses fettkursives großes Omikron']);
  this.executeCharTest('𝞟', ['serifenloses fettkursives großes Pi']);
  this.executeCharTest('𝞠', ['serifenloses fettkursives großes Rho']);
  this.executeCharTest('𝞡', ['serifenloses fettkursives großes Theta']);
  this.executeCharTest('𝞢', ['serifenloses fettkursives großes Sigma']);
  this.executeCharTest('𝞣', ['serifenloses fettkursives großes Tau']);
  this.executeCharTest('𝞤', ['serifenloses fettkursives großes Ypsilon']);
  this.executeCharTest('𝞥', ['serifenloses fettkursives großes Phi']);
  this.executeCharTest('𝞦', ['serifenloses fettkursives großes Chi']);
  this.executeCharTest('𝞧', ['serifenloses fettkursives großes Psi']);
  this.executeCharTest('𝞨', ['serifenloses fettkursives großes Omega']);
  this.executeCharTest('𝞩', ['serifenloses fettkursives nabla']);
  this.executeCharTest('𝞪', ['serifenloses fettkursives alpha']);
  this.executeCharTest('𝞫', ['serifenloses fettkursives beta']);
  this.executeCharTest('𝞬', ['serifenloses fettkursives gamma']);
  this.executeCharTest('𝞭', ['serifenloses fettkursives delta']);
  this.executeCharTest('𝞮', ['serifenloses fettkursives epsilon']);
  this.executeCharTest('𝞯', ['serifenloses fettkursives zeta']);
  this.executeCharTest('𝞰', ['serifenloses fettkursives eta']);
  this.executeCharTest('𝞱', ['serifenloses fettkursives theta']);
  this.executeCharTest('𝞲', ['serifenloses fettkursives iota']);
  this.executeCharTest('𝞳', ['serifenloses fettkursives kappa']);
  this.executeCharTest('𝞴', ['serifenloses fettkursives lambda']);
  this.executeCharTest('𝞵', ['serifenloses fettkursives my']);
  this.executeCharTest('𝞶', ['serifenloses fettkursives ny']);
  this.executeCharTest('𝞷', ['serifenloses fettkursives xi']);
  this.executeCharTest('𝞸', ['serifenloses fettkursives omikron']);
  this.executeCharTest('𝞹', ['serifenloses fettkursives pi']);
  this.executeCharTest('𝞺', ['serifenloses fettkursives rho']);
  this.executeCharTest('𝞻', ['serifenloses fettkursives abschließendes sigma']);
  this.executeCharTest('𝞼', ['serifenloses fettkursives sigma']);
  this.executeCharTest('𝞽', ['serifenloses fettkursives tau']);
  this.executeCharTest('𝞾', ['serifenloses fettkursives ypsilon']);
  this.executeCharTest('𝞿', ['serifenloses fettkursives phi']);
  this.executeCharTest('𝟀', ['serifenloses fettkursives chi']);
  this.executeCharTest('𝟁', ['serifenloses fettkursives psi']);
  this.executeCharTest('𝟂', ['serifenloses fettkursives omega']);
  this.executeCharTest('𝟃', ['serifenloses fettkursives partielle Ableitung']);
  this.executeCharTest('𝟄', ['serifenloses fettkursives epsilon']);
  this.executeCharTest('𝟅', ['serifenloses fettkursives theta']);
  this.executeCharTest('𝟆', ['serifenloses fettkursives kappa']);
  this.executeCharTest('𝟇', ['serifenloses fettkursives phi']);
  this.executeCharTest('𝟈', ['serifenloses fettkursives rho']);
  this.executeCharTest('𝟉', ['serifenloses fettkursives pi']);
  this.executeCharTest('⁰', ['hoch null']);
  this.executeCharTest('¹', ['hoch eins']);
  this.executeCharTest('²', ['Quadrat']);
  this.executeCharTest('³', ['Kubik']);
  this.executeCharTest('⁴', ['hoch vier']);
  this.executeCharTest('⁵', ['hoch fünf']);
  this.executeCharTest('⁶', ['hoch sechs']);
  this.executeCharTest('⁷', ['hoch sieben']);
  this.executeCharTest('⁸', ['hoch acht']);
  this.executeCharTest('⁹', ['hoch neun']);
  this.executeCharTest('₀', ['Index null']);
  this.executeCharTest('₁', ['Index eins']);
  this.executeCharTest('₂', ['Index zwei']);
  this.executeCharTest('₃', ['Index drei']);
  this.executeCharTest('₄', ['Index vier']);
  this.executeCharTest('₅', ['Index fünf']);
  this.executeCharTest('₆', ['Index sechs']);
  this.executeCharTest('₇', ['Index sieben']);
  this.executeCharTest('₈', ['Index acht']);
  this.executeCharTest('₉', ['Index neun']);
  this.executeCharTest('⓪', ['eingekreiste null']);
  this.executeCharTest('①', ['eingekreiste eins']);
  this.executeCharTest('②', ['eingekreiste zwei']);
  this.executeCharTest('③', ['eingekreiste drei']);
  this.executeCharTest('④', ['eingekreiste vier']);
  this.executeCharTest('⑤', ['eingekreiste fünf']);
  this.executeCharTest('⑥', ['eingekreiste sechs']);
  this.executeCharTest('⑦', ['eingekreiste sieben']);
  this.executeCharTest('⑧', ['eingekreiste acht']);
  this.executeCharTest('⑨', ['eingekreiste neun']);
  this.executeCharTest('⑩', ['eingekreiste zehn']);
  this.executeCharTest('⑪', ['eingekreiste elf']);
  this.executeCharTest('⑫', ['eingekreiste zwölf']);
  this.executeCharTest('⑬', ['eingekreiste dreizehn']);
  this.executeCharTest('⑭', ['eingekreiste vierzehn']);
  this.executeCharTest('⑮', ['eingekreiste fünfzehn']);
  this.executeCharTest('⑯', ['eingekreiste sechzehn']);
  this.executeCharTest('⑰', ['eingekreiste siebzehn']);
  this.executeCharTest('⑱', ['eingekreiste achtzehn']);
  this.executeCharTest('⑲', ['eingekreiste neunzehn']);
  this.executeCharTest('⑳', ['eingekreiste zwanzig']);
  this.executeCharTest('㉑', ['eingekreiste einundzwanzig']);
  this.executeCharTest('㉒', ['eingekreiste zweiundzwanzig']);
  this.executeCharTest('㉓', ['eingekreiste dreiundzwanzig']);
  this.executeCharTest('㉔', ['eingekreiste vierundzwanzig']);
  this.executeCharTest('㉕', ['eingekreiste fünfundzwanzig']);
  this.executeCharTest('㉖', ['eingekreiste sechsundzwanzig']);
  this.executeCharTest('㉗', ['eingekreiste siebenundzwanzig']);
  this.executeCharTest('㉘', ['eingekreiste achtundzwanzig']);
  this.executeCharTest('㉙', ['eingekreiste neunundzwanzig']);
  this.executeCharTest('㉚', ['eingekreiste dreißig']);
  this.executeCharTest('㉛', ['eingekreiste einunddreißig']);
  this.executeCharTest('㉜', ['eingekreiste zweiunddreißig']);
  this.executeCharTest('㉝', ['eingekreiste dreiunddreißig']);
  this.executeCharTest('㉞', ['eingekreiste vierunddreißig']);
  this.executeCharTest('㉟', ['eingekreiste fünfunddreißig']);
  this.executeCharTest('㊱', ['eingekreiste sechsunddreißig']);
  this.executeCharTest('㊲', ['eingekreiste siebenunddreißig']);
  this.executeCharTest('㊳', ['eingekreiste achtunddreißig']);
  this.executeCharTest('㊴', ['eingekreiste neununddreißig']);
  this.executeCharTest('㊵', ['eingekreiste vierzig']);
  this.executeCharTest('㊶', ['eingekreiste einundvierzig']);
  this.executeCharTest('㊷', ['eingekreiste zweiundvierzig']);
  this.executeCharTest('㊸', ['eingekreiste dreiundvierzig']);
  this.executeCharTest('㊹', ['eingekreiste vierundvierzig']);
  this.executeCharTest('㊺', ['eingekreiste fünfundvierzig']);
  this.executeCharTest('㊻', ['eingekreiste sechsundvierzig']);
  this.executeCharTest('㊼', ['eingekreiste siebenundvierzig']);
  this.executeCharTest('㊽', ['eingekreiste achtundvierzig']);
  this.executeCharTest('㊾', ['eingekreiste neunundvierzig']);
  this.executeCharTest('㊿', ['eingekreiste fünfzig']);
  this.executeCharTest('⑴', ['eingeklammerte eins']);
  this.executeCharTest('⑵', ['eingeklammerte zwei']);
  this.executeCharTest('⑶', ['eingeklammerte drei']);
  this.executeCharTest('⑷', ['eingeklammerte vier']);
  this.executeCharTest('⑸', ['eingeklammerte fünf']);
  this.executeCharTest('⑹', ['eingeklammerte sechs']);
  this.executeCharTest('⑺', ['eingeklammerte sieben']);
  this.executeCharTest('⑻', ['eingeklammerte acht']);
  this.executeCharTest('⑼', ['eingeklammerte neun']);
  this.executeCharTest('⑽', ['eingeklammerte zehn']);
  this.executeCharTest('⑾', ['eingeklammerte elf']);
  this.executeCharTest('⑿', ['eingeklammerte zwölf']);
  this.executeCharTest('⒀', ['eingeklammerte dreizehn']);
  this.executeCharTest('⒁', ['eingeklammerte vierzehn']);
  this.executeCharTest('⒂', ['eingeklammerte fünfzehn']);
  this.executeCharTest('⒃', ['eingeklammerte sechzehn']);
  this.executeCharTest('⒄', ['eingeklammerte siebzehn']);
  this.executeCharTest('⒅', ['eingeklammerte achtzehn']);
  this.executeCharTest('⒆', ['eingeklammerte neunzehn']);
  this.executeCharTest('⒇', ['eingeklammerte zwanzig']);
  this.executeCharTest('🄀', ['null Punkt']);
  this.executeCharTest('⒈', ['eins Punkt']);
  this.executeCharTest('⒉', ['zwei Punkt']);
  this.executeCharTest('⒊', ['drei Punkt']);
  this.executeCharTest('⒋', ['vier Punkt']);
  this.executeCharTest('⒌', ['fünf Punkt']);
  this.executeCharTest('⒍', ['sechs Punkt']);
  this.executeCharTest('⒎', ['sieben Punkt']);
  this.executeCharTest('⒏', ['acht Punkt']);
  this.executeCharTest('⒐', ['neun Punkt']);
  this.executeCharTest('⒑', ['zehn Punkt']);
  this.executeCharTest('⒒', ['elf Punkt']);
  this.executeCharTest('⒓', ['zwölf Punkt']);
  this.executeCharTest('⒔', ['dreizehn Punkt']);
  this.executeCharTest('⒕', ['vierzehn Punkt']);
  this.executeCharTest('⒖', ['fünfzehn Punkt']);
  this.executeCharTest('⒗', ['sechzehn Punkt']);
  this.executeCharTest('⒘', ['siebzehn Punkt']);
  this.executeCharTest('⒙', ['achtzehn Punkt']);
  this.executeCharTest('⒚', ['neunzehn Punkt']);
  this.executeCharTest('⒛', ['zwanzig Punkt']);
  this.executeCharTest('⓿', ['schwarz eingekreiste null']);
  this.executeCharTest('❶', ['schwarz eingekreiste eins']);
  this.executeCharTest('❷', ['schwarz eingekreiste zwei']);
  this.executeCharTest('❸', ['schwarz eingekreiste drei']);
  this.executeCharTest('❹', ['schwarz eingekreiste vier']);
  this.executeCharTest('❺', ['schwarz eingekreiste fünf']);
  this.executeCharTest('❻', ['schwarz eingekreiste sechs']);
  this.executeCharTest('❼', ['schwarz eingekreiste sieben']);
  this.executeCharTest('❽', ['schwarz eingekreiste acht']);
  this.executeCharTest('❾', ['schwarz eingekreiste neun']);
  this.executeCharTest('❿', ['schwarz eingekreiste zehn']);
  this.executeCharTest('⓫', ['schwarz eingekreiste elf']);
  this.executeCharTest('⓬', ['schwarz eingekreiste zwölf']);
  this.executeCharTest('⓭', ['schwarz eingekreiste dreizehn']);
  this.executeCharTest('⓮', ['schwarz eingekreiste vierzehn']);
  this.executeCharTest('⓯', ['schwarz eingekreiste fünfzehn']);
  this.executeCharTest('⓰', ['schwarz eingekreiste sechzehn']);
  this.executeCharTest('⓱', ['schwarz eingekreiste siebzehn']);
  this.executeCharTest('⓲', ['schwarz eingekreiste achtzehn']);
  this.executeCharTest('⓳', ['schwarz eingekreiste neunzehn']);
  this.executeCharTest('⓴', ['schwarz eingekreiste zwanzig']);
  this.executeCharTest('⓵', ['doppelt eingekreiste eins']);
  this.executeCharTest('⓶', ['doppelt eingekreiste zwei']);
  this.executeCharTest('⓷', ['doppelt eingekreiste drei']);
  this.executeCharTest('⓸', ['doppelt eingekreiste vier']);
  this.executeCharTest('⓹', ['doppelt eingekreiste fünf']);
  this.executeCharTest('⓺', ['doppelt eingekreiste sechs']);
  this.executeCharTest('⓻', ['doppelt eingekreiste sieben']);
  this.executeCharTest('⓼', ['doppelt eingekreiste acht']);
  this.executeCharTest('⓽', ['doppelt eingekreiste neun']);
  this.executeCharTest('⓾', ['doppelt eingekreiste zehn']);
  this.executeCharTest('🄋', ['eingekreiste serifenlose null']);
  this.executeCharTest('➀', ['eingekreiste serifenlose eins']);
  this.executeCharTest('➁', ['eingekreiste serifenlose zwei']);
  this.executeCharTest('➂', ['eingekreiste serifenlose drei']);
  this.executeCharTest('➃', ['eingekreiste serifenlose vier']);
  this.executeCharTest('➄', ['eingekreiste serifenlose fünf']);
  this.executeCharTest('➅', ['eingekreiste serifenlose sechs']);
  this.executeCharTest('➆', ['eingekreiste serifenlose sieben']);
  this.executeCharTest('➇', ['eingekreiste serifenlose acht']);
  this.executeCharTest('➈', ['eingekreiste serifenlose neun']);
  this.executeCharTest('➉', ['eingekreiste serifenlose zehn']);
  this.executeCharTest('🄌', ['schwarz eingekreiste serifenlose null']);
  this.executeCharTest('➊', ['schwarz eingekreiste serifenlose eins']);
  this.executeCharTest('➋', ['schwarz eingekreiste serifenlose zwei']);
  this.executeCharTest('➌', ['schwarz eingekreiste serifenlose drei']);
  this.executeCharTest('➍', ['schwarz eingekreiste serifenlose vier']);
  this.executeCharTest('➎', ['schwarz eingekreiste serifenlose fünf']);
  this.executeCharTest('➏', ['schwarz eingekreiste serifenlose sechs']);
  this.executeCharTest('➐', ['schwarz eingekreiste serifenlose sieben']);
  this.executeCharTest('➑', ['schwarz eingekreiste serifenlose acht']);
  this.executeCharTest('➒', ['schwarz eingekreiste serifenlose neun']);
  this.executeCharTest('➓', ['schwarz eingekreiste serifenlose zehn']);
  this.executeCharTest('０', ['null']);
  this.executeCharTest('１', ['eins']);
  this.executeCharTest('２', ['zwei']);
  this.executeCharTest('３', ['drei']);
  this.executeCharTest('４', ['vier']);
  this.executeCharTest('５', ['fünf']);
  this.executeCharTest('６', ['sechs']);
  this.executeCharTest('７', ['sieben']);
  this.executeCharTest('８', ['acht']);
  this.executeCharTest('９', ['neun']);
  this.executeCharTest('𝟎', ['fette null']);
  this.executeCharTest('𝟏', ['fette eins']);
  this.executeCharTest('𝟐', ['fette zwei']);
  this.executeCharTest('𝟑', ['fette drei']);
  this.executeCharTest('𝟒', ['fette vier']);
  this.executeCharTest('𝟓', ['fette fünf']);
  this.executeCharTest('𝟔', ['fette sechs']);
  this.executeCharTest('𝟕', ['fette sieben']);
  this.executeCharTest('𝟖', ['fette acht']);
  this.executeCharTest('𝟗', ['fette neun']);
  this.executeCharTest('𝟘', ['null mit Doppelstrich']);
  this.executeCharTest('𝟙', ['eins mit Doppelstrich']);
  this.executeCharTest('𝟚', ['zwei mit Doppelstrich']);
  this.executeCharTest('𝟛', ['drei mit Doppelstrich']);
  this.executeCharTest('𝟜', ['vier mit Doppelstrich']);
  this.executeCharTest('𝟝', ['fünf mit Doppelstrich']);
  this.executeCharTest('𝟞', ['sechs mit Doppelstrich']);
  this.executeCharTest('𝟟', ['sieben mit Doppelstrich']);
  this.executeCharTest('𝟠', ['acht mit Doppelstrich']);
  this.executeCharTest('𝟡', ['neun mit Doppelstrich']);
  this.executeCharTest('𝟢', ['serifenlose null']);
  this.executeCharTest('𝟣', ['serifenlose eins']);
  this.executeCharTest('𝟤', ['serifenlose zwei']);
  this.executeCharTest('𝟥', ['serifenlose drei']);
  this.executeCharTest('𝟦', ['serifenlose vier']);
  this.executeCharTest('𝟧', ['serifenlose fünf']);
  this.executeCharTest('𝟨', ['serifenlose sechs']);
  this.executeCharTest('𝟩', ['serifenlose sieben']);
  this.executeCharTest('𝟪', ['serifenlose acht']);
  this.executeCharTest('𝟫', ['serifenlose neun']);
  this.executeCharTest('𝟬', ['serifenlose fette null']);
  this.executeCharTest('𝟭', ['serifenlose fette eins']);
  this.executeCharTest('𝟮', ['serifenlose fette zwei']);
  this.executeCharTest('𝟯', ['serifenlose fette drei']);
  this.executeCharTest('𝟰', ['serifenlose fette vier']);
  this.executeCharTest('𝟱', ['serifenlose fette fünf']);
  this.executeCharTest('𝟲', ['serifenlose fette sechs']);
  this.executeCharTest('𝟳', ['serifenlose fette sieben']);
  this.executeCharTest('𝟴', ['serifenlose fette acht']);
  this.executeCharTest('𝟵', ['serifenlose fette neun']);
  this.executeCharTest('𝟶', ['nichtproportionale null']);
  this.executeCharTest('𝟷', ['nichtproportionale eins']);
  this.executeCharTest('𝟸', ['nichtproportionale zwei']);
  this.executeCharTest('𝟹', ['nichtproportionale drei']);
  this.executeCharTest('𝟺', ['nichtproportionale vier']);
  this.executeCharTest('𝟻', ['nichtproportionale fünf']);
  this.executeCharTest('𝟼', ['nichtproportionale sechs']);
  this.executeCharTest('𝟽', ['nichtproportionale sieben']);
  this.executeCharTest('𝟾', ['nichtproportionale acht']);
  this.executeCharTest('𝟿', ['nichtproportionale neun']);
  this.executeCharTest('🄁', ['null Komma']);
  this.executeCharTest('🄂', ['eins Komma']);
  this.executeCharTest('🄃', ['zwei Komma']);
  this.executeCharTest('🄄', ['drei Komma']);
  this.executeCharTest('🄅', ['vier Komma']);
  this.executeCharTest('🄆', ['fünf Komma']);
  this.executeCharTest('🄇', ['sechs Komma']);
  this.executeCharTest('🄈', ['sieben Komma']);
  this.executeCharTest('🄉', ['acht Komma']);
  this.executeCharTest('🄊', ['neun Komma']);
  this.executeCharTest('Ⓐ', ['eingekreistes großes A']);
  this.executeCharTest('Ⓑ', ['eingekreistes großes B']);
  this.executeCharTest('Ⓒ', ['eingekreistes großes C']);
  this.executeCharTest('Ⓓ', ['eingekreistes großes D']);
  this.executeCharTest('Ⓔ', ['eingekreistes großes E']);
  this.executeCharTest('Ⓕ', ['eingekreistes großes F']);
  this.executeCharTest('Ⓖ', ['eingekreistes großes G']);
  this.executeCharTest('Ⓗ', ['eingekreistes großes H']);
  this.executeCharTest('Ⓘ', ['eingekreistes großes I']);
  this.executeCharTest('Ⓙ', ['eingekreistes großes J']);
  this.executeCharTest('Ⓚ', ['eingekreistes großes K']);
  this.executeCharTest('Ⓛ', ['eingekreistes großes L']);
  this.executeCharTest('Ⓜ', ['eingekreistes großes M']);
  this.executeCharTest('Ⓝ', ['eingekreistes großes N']);
  this.executeCharTest('Ⓞ', ['eingekreistes großes O']);
  this.executeCharTest('Ⓟ', ['eingekreistes großes P']);
  this.executeCharTest('Ⓠ', ['eingekreistes großes Q']);
  this.executeCharTest('Ⓡ', ['eingekreistes großes R']);
  this.executeCharTest('Ⓢ', ['eingekreistes großes S']);
  this.executeCharTest('Ⓣ', ['eingekreistes großes T']);
  this.executeCharTest('Ⓤ', ['eingekreistes großes U']);
  this.executeCharTest('Ⓥ', ['eingekreistes großes V']);
  this.executeCharTest('Ⓦ', ['eingekreistes großes W']);
  this.executeCharTest('Ⓧ', ['eingekreistes großes X']);
  this.executeCharTest('Ⓨ', ['eingekreistes großes Y']);
  this.executeCharTest('Ⓩ', ['eingekreistes großes Z']);
  this.executeCharTest('ⓐ', ['eingekreistes a']);
  this.executeCharTest('ⓑ', ['eingekreistes b']);
  this.executeCharTest('ⓒ', ['eingekreistes c']);
  this.executeCharTest('ⓓ', ['eingekreistes d']);
  this.executeCharTest('ⓔ', ['eingekreistes e']);
  this.executeCharTest('ⓕ', ['eingekreistes f']);
  this.executeCharTest('ⓖ', ['eingekreistes g']);
  this.executeCharTest('ⓗ', ['eingekreistes h']);
  this.executeCharTest('ⓘ', ['eingekreistes i']);
  this.executeCharTest('ⓙ', ['eingekreistes j']);
  this.executeCharTest('ⓚ', ['eingekreistes k']);
  this.executeCharTest('ⓛ', ['eingekreistes l']);
  this.executeCharTest('ⓜ', ['eingekreistes m']);
  this.executeCharTest('ⓝ', ['eingekreistes n']);
  this.executeCharTest('ⓞ', ['eingekreistes o']);
  this.executeCharTest('ⓟ', ['eingekreistes p']);
  this.executeCharTest('ⓠ', ['eingekreistes q']);
  this.executeCharTest('ⓡ', ['eingekreistes r']);
  this.executeCharTest('ⓢ', ['eingekreistes s']);
  this.executeCharTest('ⓣ', ['eingekreistes t']);
  this.executeCharTest('ⓤ', ['eingekreistes u']);
  this.executeCharTest('ⓥ', ['eingekreistes v']);
  this.executeCharTest('ⓦ', ['eingekreistes w']);
  this.executeCharTest('ⓧ', ['eingekreistes x']);
  this.executeCharTest('ⓨ', ['eingekreistes y']);
  this.executeCharTest('ⓩ', ['eingekreistes z']);
  this.executeCharTest('🄐', ['eingeklammertes großes A']);
  this.executeCharTest('🄑', ['eingeklammertes großes B']);
  this.executeCharTest('🄒', ['eingeklammertes großes C']);
  this.executeCharTest('🄓', ['eingeklammertes großes D']);
  this.executeCharTest('🄔', ['eingeklammertes großes E']);
  this.executeCharTest('🄕', ['eingeklammertes großes F']);
  this.executeCharTest('🄖', ['eingeklammertes großes G']);
  this.executeCharTest('🄗', ['eingeklammertes großes H']);
  this.executeCharTest('🄘', ['eingeklammertes großes I']);
  this.executeCharTest('🄙', ['eingeklammertes großes J']);
  this.executeCharTest('🄚', ['eingeklammertes großes K']);
  this.executeCharTest('🄛', ['eingeklammertes großes L']);
  this.executeCharTest('🄜', ['eingeklammertes großes M']);
  this.executeCharTest('🄝', ['eingeklammertes großes N']);
  this.executeCharTest('🄞', ['eingeklammertes großes O']);
  this.executeCharTest('🄟', ['eingeklammertes großes P']);
  this.executeCharTest('🄠', ['eingeklammertes großes Q']);
  this.executeCharTest('🄡', ['eingeklammertes großes R']);
  this.executeCharTest('🄢', ['eingeklammertes großes S']);
  this.executeCharTest('🄣', ['eingeklammertes großes T']);
  this.executeCharTest('🄤', ['eingeklammertes großes U']);
  this.executeCharTest('🄥', ['eingeklammertes großes V']);
  this.executeCharTest('🄦', ['eingeklammertes großes W']);
  this.executeCharTest('🄧', ['eingeklammertes großes X']);
  this.executeCharTest('🄨', ['eingeklammertes großes Y']);
  this.executeCharTest('🄩', ['eingeklammertes großes Z']);
  this.executeCharTest('⒜', ['eingeklammertes a']);
  this.executeCharTest('⒝', ['eingeklammertes b']);
  this.executeCharTest('⒞', ['eingeklammertes c']);
  this.executeCharTest('⒟', ['eingeklammertes d']);
  this.executeCharTest('⒠', ['eingeklammertes e']);
  this.executeCharTest('⒡', ['eingeklammertes f']);
  this.executeCharTest('⒢', ['eingeklammertes g']);
  this.executeCharTest('⒣', ['eingeklammertes h']);
  this.executeCharTest('⒤', ['eingeklammertes i']);
  this.executeCharTest('⒥', ['eingeklammertes j']);
  this.executeCharTest('⒦', ['eingeklammertes k']);
  this.executeCharTest('⒧', ['eingeklammertes l']);
  this.executeCharTest('⒨', ['eingeklammertes m']);
  this.executeCharTest('⒩', ['eingeklammertes n']);
  this.executeCharTest('⒪', ['eingeklammertes o']);
  this.executeCharTest('⒫', ['eingeklammertes p']);
  this.executeCharTest('⒬', ['eingeklammertes q']);
  this.executeCharTest('⒭', ['eingeklammertes r']);
  this.executeCharTest('⒮', ['eingeklammertes s']);
  this.executeCharTest('⒯', ['eingeklammertes t']);
  this.executeCharTest('⒰', ['eingeklammertes u']);
  this.executeCharTest('⒱', ['eingeklammertes v']);
  this.executeCharTest('⒲', ['eingeklammertes w']);
  this.executeCharTest('⒳', ['eingeklammertes x']);
  this.executeCharTest('⒴', ['eingeklammertes y']);
  this.executeCharTest('⒵', ['eingeklammertes z']);
  this.executeCharTest('🄰', ['umrahmtes großes A']);
  this.executeCharTest('🄱', ['umrahmtes großes B']);
  this.executeCharTest('🄲', ['umrahmtes großes C']);
  this.executeCharTest('🄳', ['umrahmtes großes D']);
  this.executeCharTest('🄴', ['umrahmtes großes E']);
  this.executeCharTest('🄵', ['umrahmtes großes F']);
  this.executeCharTest('🄶', ['umrahmtes großes G']);
  this.executeCharTest('🄷', ['umrahmtes großes H']);
  this.executeCharTest('🄸', ['umrahmtes großes I']);
  this.executeCharTest('🄹', ['umrahmtes großes J']);
  this.executeCharTest('🄺', ['umrahmtes großes K']);
  this.executeCharTest('🄻', ['umrahmtes großes L']);
  this.executeCharTest('🄼', ['umrahmtes großes M']);
  this.executeCharTest('🄽', ['umrahmtes großes N']);
  this.executeCharTest('🄾', ['umrahmtes großes O']);
  this.executeCharTest('🄿', ['umrahmtes großes P']);
  this.executeCharTest('🅀', ['umrahmtes großes Q']);
  this.executeCharTest('🅁', ['umrahmtes großes R']);
  this.executeCharTest('🅂', ['umrahmtes großes S']);
  this.executeCharTest('🅃', ['umrahmtes großes T']);
  this.executeCharTest('🅄', ['umrahmtes großes U']);
  this.executeCharTest('🅅', ['umrahmtes großes V']);
  this.executeCharTest('🅆', ['umrahmtes großes W']);
  this.executeCharTest('🅇', ['umrahmtes großes X']);
  this.executeCharTest('🅈', ['umrahmtes großes Y']);
  this.executeCharTest('🅉', ['umrahmtes großes Z']);
  this.executeCharTest('🅰', ['schwarz umrahmtes großes A']);
  this.executeCharTest('🅱', ['schwarz umrahmtes großes B']);
  this.executeCharTest('🅲', ['schwarz umrahmtes großes C']);
  this.executeCharTest('🅳', ['schwarz umrahmtes großes D']);
  this.executeCharTest('🅴', ['schwarz umrahmtes großes E']);
  this.executeCharTest('🅵', ['schwarz umrahmtes großes F']);
  this.executeCharTest('🅶', ['schwarz umrahmtes großes G']);
  this.executeCharTest('🅷', ['schwarz umrahmtes großes H']);
  this.executeCharTest('🅸', ['schwarz umrahmtes großes I']);
  this.executeCharTest('🅹', ['schwarz umrahmtes großes J']);
  this.executeCharTest('🅺', ['schwarz umrahmtes großes K']);
  this.executeCharTest('🅻', ['schwarz umrahmtes großes L']);
  this.executeCharTest('🅼', ['schwarz umrahmtes großes M']);
  this.executeCharTest('🅽', ['schwarz umrahmtes großes N']);
  this.executeCharTest('🅾', ['schwarz umrahmtes großes O']);
  this.executeCharTest('🅿', ['schwarz umrahmtes großes P']);
  this.executeCharTest('🆀', ['schwarz umrahmtes großes Q']);
  this.executeCharTest('🆁', ['schwarz umrahmtes großes R']);
  this.executeCharTest('🆂', ['schwarz umrahmtes großes S']);
  this.executeCharTest('🆃', ['schwarz umrahmtes großes T']);
  this.executeCharTest('🆄', ['schwarz umrahmtes großes U']);
  this.executeCharTest('🆅', ['schwarz umrahmtes großes V']);
  this.executeCharTest('🆆', ['schwarz umrahmtes großes W']);
  this.executeCharTest('🆇', ['schwarz umrahmtes großes X']);
  this.executeCharTest('🆈', ['schwarz umrahmtes großes Y']);
  this.executeCharTest('🆉', ['schwarz umrahmtes großes Z']);
  this.executeCharTest('🅐', ['schwarz eingekreistes großes A']);
  this.executeCharTest('🅑', ['schwarz eingekreistes großes B']);
  this.executeCharTest('🅒', ['schwarz eingekreistes großes C']);
  this.executeCharTest('🅓', ['schwarz eingekreistes großes D']);
  this.executeCharTest('🅔', ['schwarz eingekreistes großes E']);
  this.executeCharTest('🅕', ['schwarz eingekreistes großes F']);
  this.executeCharTest('🅖', ['schwarz eingekreistes großes G']);
  this.executeCharTest('🅗', ['schwarz eingekreistes großes H']);
  this.executeCharTest('🅘', ['schwarz eingekreistes großes I']);
  this.executeCharTest('🅙', ['schwarz eingekreistes großes J']);
  this.executeCharTest('🅚', ['schwarz eingekreistes großes K']);
  this.executeCharTest('🅛', ['schwarz eingekreistes großes L']);
  this.executeCharTest('🅜', ['schwarz eingekreistes großes M']);
  this.executeCharTest('🅝', ['schwarz eingekreistes großes N']);
  this.executeCharTest('🅞', ['schwarz eingekreistes großes O']);
  this.executeCharTest('🅟', ['schwarz eingekreistes großes P']);
  this.executeCharTest('🅠', ['schwarz eingekreistes großes Q']);
  this.executeCharTest('🅡', ['schwarz eingekreistes großes R']);
  this.executeCharTest('🅢', ['schwarz eingekreistes großes S']);
  this.executeCharTest('🅣', ['schwarz eingekreistes großes T']);
  this.executeCharTest('🅤', ['schwarz eingekreistes großes U']);
  this.executeCharTest('🅥', ['schwarz eingekreistes großes V']);
  this.executeCharTest('🅦', ['schwarz eingekreistes großes W']);
  this.executeCharTest('🅧', ['schwarz eingekreistes großes X']);
  this.executeCharTest('🅨', ['schwarz eingekreistes großes Y']);
  this.executeCharTest('🅩', ['schwarz eingekreistes großes Z']);
  this.executeCharTest('¼', ['ein Viertel']);
  this.executeCharTest('½', ['ein Halb']);
  this.executeCharTest('¾', ['drei Viertel']);
  this.executeCharTest('⅐', ['ein siebtel']);
  this.executeCharTest('⅑', ['ein neuntel']);
  this.executeCharTest('⅒', ['ein zehntel']);
  this.executeCharTest('⅓', ['ein drittel']);
  this.executeCharTest('⅔', ['zwei drittel']);
  this.executeCharTest('⅕', ['ein fünftel']);
  this.executeCharTest('⅖', ['zwei fünftel']);
  this.executeCharTest('⅗', ['drei fünftel']);
  this.executeCharTest('⅘', ['vier fünftel']);
  this.executeCharTest('⅙', ['ein sechstel']);
  this.executeCharTest('⅚', ['fünf sechstel']);
  this.executeCharTest('⅛', ['ein achtel']);
  this.executeCharTest('⅜', ['drei achtel']);
  this.executeCharTest('⅝', ['fünf achtel']);
  this.executeCharTest('⅞', ['sieben achtel']);
  this.executeCharTest('⅟', ['Bruchzähler eins']);
  this.executeCharTest('↉', ['null drittel']);
  this.executeCharTest('㉈', ['eingekreiste Zehn auf schwarzem Quadrat']);
  this.executeCharTest('㉉', ['eingekreiste Zwanzig auf schwarzem Quadrat']);
  this.executeCharTest('㉊', ['eingekreiste Dreißig auf schwarzem Quadrat']);
  this.executeCharTest('㉋', ['eingekreiste Vierzig auf schwarzem Quadrat']);
  this.executeCharTest('㉌', ['eingekreiste Fünfzig auf schwarzem Quadrat']);
  this.executeCharTest('㉍', ['eingekreiste Sechzig auf schwarzem Quadrat']);
  this.executeCharTest('㉎', ['eingekreiste Siebzig auf schwarzem Quadrat']);
  this.executeCharTest('㉏', ['eingekreiste Achtzig auf schwarzem Quadrat']);
  this.executeCharTest('ᴦ', ['Kapitälchen Gamma']);
  this.executeCharTest('ᴧ', ['Kapitälchen Lamda']);
  this.executeCharTest('ᴨ', ['Kapitälchen Pi']);
  this.executeCharTest('ᴩ', ['Kapitälchen Rho']);
  this.executeCharTest('ᴪ', ['Kapitälchen Psi']);
  this.executeCharTest('ᵞ', ['hochgestelltes gamma']);
  this.executeCharTest('ᵠ', ['hochgestelltes phi']);
  this.executeCharTest('ᵦ', ['tiefgestelltes beta']);
  this.executeCharTest('ᵧ', ['tiefgestelltes gamma']);
  this.executeCharTest('ᵨ', ['tiefgestelltes rho']);
  this.executeCharTest('ᵩ', ['tiefgestelltes phi']);
  this.executeCharTest('ᵪ', ['tiefgestelltes chi']);
  this.executeCharTest('ϐ', ['beta']);
  this.executeCharTest('ϗ', ['kai']);
  this.executeCharTest('϶', ['umgekehrtes epsilon']);
  this.executeCharTest('𝟊', ['fettes großes Digamma']);
  this.executeCharTest('𝟋', ['fettes digamma']);
  this.executeCharTest('ℵ', ['Alef-Symbol']);
  this.executeCharTest('ℶ', ['Bet-Symbol']);
  this.executeCharTest('ℷ', ['Gimel-Symbol']);
  this.executeCharTest('ℸ', ['Dalet-Symbol']);
  this.executeCharTest('ǖ', ['u mit Diärese und Makron']);
  this.executeCharTest('ǘ', ['u mit Diärese und Akut']);
  this.executeCharTest('ǚ', ['u mit Diärese und Caron']);
  this.executeCharTest('ǜ', ['u mit Diärese und Grab']);
  this.executeCharTest('ǟ', ['a mit Diärese und Makron']);
  this.executeCharTest('ǡ', ['a mit Dot Above und Makron']);
  this.executeCharTest('ǭ', ['o mit Ogonek und Makron']);
  this.executeCharTest('ǻ', ['a mit Ring oben und akut']);
  this.executeCharTest('ȫ', ['o mit Diärese und Makron']);
  this.executeCharTest('ȭ', ['o mit Tilde und Makron']);
  this.executeCharTest('ȱ', ['o mit Punkt oben und Makron']);
  this.executeCharTest('ḉ', ['c mit Cedilla und Akut']);
  this.executeCharTest('ḕ', ['e mit Makron und Grab']);
  this.executeCharTest('ḗ', ['e mit Makron und Akut']);
  this.executeCharTest('ḝ', ['e mit Cedilla und Breve']);
  this.executeCharTest('ḯ', ['i mit Diärese und Akut']);
  this.executeCharTest('ḹ', ['l mit Punkt unten und Makron']);
  this.executeCharTest('ṍ', ['o mit Tilde und Akut']);
  this.executeCharTest('ṏ', ['o mit Tilde und Diärese']);
  this.executeCharTest('ṑ', ['o mit Makron und Grab']);
  this.executeCharTest('ṓ', ['o mit Makron und Akut']);
  this.executeCharTest('ṝ', ['r mit Punkt unten und Makron']);
  this.executeCharTest('ṥ', ['s mit Akute und Punkt oben']);
  this.executeCharTest('ṧ', ['s mit Caron und Punkt oben']);
  this.executeCharTest('ṩ', ['s mit Punkt unten und Punkt oben']);
  this.executeCharTest('ṹ', ['u mit Tilde und Akut']);
  this.executeCharTest('ṻ', ['u mit Makron und Diärese']);
  this.executeCharTest('ấ', ['a mit Zirkumflex und Akut']);
  this.executeCharTest('ầ', ['a mit Zirkumflex und Grab']);
  this.executeCharTest('ẩ', ['a mit Zirkumflex und Haken oben']);
  this.executeCharTest('ẫ', ['a mit Zirkumflex und Tilde']);
  this.executeCharTest('ậ', ['a mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('ắ', ['a mit Breve und Akut']);
  this.executeCharTest('ằ', ['a mit Breve und Grab']);
  this.executeCharTest('ẳ', ['a mit Breve und Haken oben']);
  this.executeCharTest('ẵ', ['a mit Breve und Tilde']);
  this.executeCharTest('ặ', ['a mit Breve und Dot Below']);
  this.executeCharTest('ế', ['e mit Zirkumflex und Akut']);
  this.executeCharTest('ề', ['e mit Zirkumflex und Grab']);
  this.executeCharTest('ể', ['e mit Zirkumflex und Haken oben']);
  this.executeCharTest('ễ', ['e mit Zirkumflex und Tilde']);
  this.executeCharTest('ệ', ['e mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('ố', ['o mit Zirkumflex und Akut']);
  this.executeCharTest('ồ', ['o mit Zirkumflex und Grab']);
  this.executeCharTest('ổ', ['o mit Zirkumflex und Haken oben']);
  this.executeCharTest('ỗ', ['o mit Zirkumflex und Tilde']);
  this.executeCharTest('ộ', ['o mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('ớ', ['o mit Horn und Akut']);
  this.executeCharTest('ờ', ['o mit Horn und Grab']);
  this.executeCharTest('ở', ['o mit Horn und Haken oben']);
  this.executeCharTest('ỡ', ['o mit Horn und Tilde']);
  this.executeCharTest('ợ', ['o mit Horn und Punkt']);
  this.executeCharTest('ứ', ['u mit Horn und Akut']);
  this.executeCharTest('ừ', ['u mit Horn und Grab']);
  this.executeCharTest('ử', ['u mit Horn und Haken oben']);
  this.executeCharTest('ữ', ['u mit Horn und Tilde']);
  this.executeCharTest('ự', ['u mit Horn und Punkt']);
  this.executeCharTest('ø', ['o mit Strich']);
  this.executeCharTest('đ', ['d mit Strich']);
  this.executeCharTest('ħ', ['h mit Strich']);
  this.executeCharTest('ł', ['l mit Strich']);
  this.executeCharTest('ŧ', ['t mit Strich']);
  this.executeCharTest('ƀ', ['b mit Strich']);
  this.executeCharTest('ƛ', ['lambda mit Strich']);
  this.executeCharTest('ƶ', ['z mit Strich']);
  this.executeCharTest('ƾ', ['umgekehrter Glottalanschlag mit Strich']);
  this.executeCharTest('ǥ', ['g mit Strich']);
  this.executeCharTest('ǿ', ['o mit Strich und Akut']);
  this.executeCharTest('ȼ', ['c mit Strich']);
  this.executeCharTest('ɇ', ['e mit Strich']);
  this.executeCharTest('ɉ', ['j mit Strich']);
  this.executeCharTest('ɍ', ['r mit Strich']);
  this.executeCharTest('ɏ', ['y mit Strich']);
  this.executeCharTest('ɟ', ['punktloses j mit Strich']);
  this.executeCharTest('ɨ', ['i mit Strich']);
  this.executeCharTest('ʄ', ['punktloses j mit Strich und Haken']);
  this.executeCharTest('ʡ', ['Glottalanschlag mit Strich']);
  this.executeCharTest('ʢ', ['umgekehrter Glottalanschlag mit Strich']);
  this.executeCharTest('ᴓ', ['liegendes O mit Strich']);
  this.executeCharTest('ᵼ', ['iota mit Strich']);
  this.executeCharTest('ᵽ', ['p mit Strich']);
  this.executeCharTest('ᵿ', ['upsilon mit Strich']);
  this.executeCharTest('ẜ', ['lang mit diagonalem Anschlag']);
  this.executeCharTest('ẝ', ['lang S mit hohem Hub']);
  this.executeCharTest('ƍ', ['wurde Delta gedreht']);
  this.executeCharTest('ẛ', ['lang mit Punkt oben']);
  this.executeCharTest('ẟ', ['delta']);
  this.executeCharTest('ĸ', ['kra']);
  this.executeCharTest('ſ', ['lang S']);
  this.executeCharTest('ƃ', ['b mit Oberleiste']);
  this.executeCharTest('ƅ', ['ton sechs']);
  this.executeCharTest('ƈ', ['c mit Haken']);
  this.executeCharTest('ƌ', ['d mit Oberleiste']);
  this.executeCharTest('ƒ', ['f mit Haken']);
  this.executeCharTest('ƕ', ['hv']);
  this.executeCharTest('ƙ', ['k mit Haken']);
  this.executeCharTest('ƚ', ['l mit Strich']);
  this.executeCharTest('ƞ', ['n mit langem rechtem Bein']);
  this.executeCharTest('ơ', ['o mit Horn']);
  this.executeCharTest('ƣ', ['oi']);
  this.executeCharTest('ƥ', ['p mit Haken']);
  this.executeCharTest('ƨ', ['ton zwei']);
  this.executeCharTest('ƪ', ['umgedrehte esh Schleife']);
  this.executeCharTest('ƫ', ['t mit palatal Haken']);
  this.executeCharTest('ƭ', ['t mit Haken']);
  this.executeCharTest('ư', ['u mit Horn']);
  this.executeCharTest('ƴ', ['y mit Haken']);
  this.executeCharTest('ƹ', ['umgekehrtes ezh']);
  this.executeCharTest('ƺ', ['ezh mit Schwanz']);
  this.executeCharTest('ƽ', ['ton fünf']);
  this.executeCharTest('ƿ', ['wynn']);
  this.executeCharTest('ǆ', ['dz mit Caron']);
  this.executeCharTest('ǉ', ['lj']);
  this.executeCharTest('ǌ', ['nj']);
  this.executeCharTest('ǣ', ['ae mit Makron']);
  this.executeCharTest('ǯ', ['ezh mit Caron']);
  this.executeCharTest('ǳ', ['dz']);
  this.executeCharTest('ȝ', ['yogh']);
  this.executeCharTest('ɮ', ['lezh']);
  this.executeCharTest('ʒ', ['ezh']);
  this.executeCharTest('ʓ', ['ezh mit Kringel']);
  this.executeCharTest('ʤ', ['dezh Digraph']);
  this.executeCharTest('ǝ', ['gedreht E']);
  this.executeCharTest('ǽ', ['ae mit Akut']);
  this.executeCharTest('ȡ', ['d mit Kringel']);
  this.executeCharTest('ȣ', ['ou']);
  this.executeCharTest('ȥ', ['z mit Haken']);
  this.executeCharTest('ȴ', ['l mit Kringel']);
  this.executeCharTest('ȵ', ['n mit Kringel']);
  this.executeCharTest('ȶ', ['t mit Kringel']);
  this.executeCharTest('ȸ', ['db']);
  this.executeCharTest('ȹ', ['qp Digraph']);
  this.executeCharTest('ȿ', ['s mit Swash Tail']);
  this.executeCharTest('ɀ', ['z mit Swash Tail']);
  this.executeCharTest('ɂ', ['Glottalanschlag']);
  this.executeCharTest('ɋ', ['q mit Hakenschwanz']);
  this.executeCharTest('ɐ', ['gedreht A']);
  this.executeCharTest('ɑ', ['alpha']);
  this.executeCharTest('ɒ', ['gedrehtes Alpha']);
  this.executeCharTest('ɓ', ['b mit Haken']);
  this.executeCharTest('ɔ', ['open O']);
  this.executeCharTest('ɕ', ['c mit Kringel']);
  this.executeCharTest('ɖ', ['d mit Schwanz']);
  this.executeCharTest('ɗ', ['d mit Haken']);
  this.executeCharTest('ɘ', ['umgedreht E']);
  this.executeCharTest('ə', ['schwa']);
  this.executeCharTest('ɚ', ['schwa mit Haken']);
  this.executeCharTest('ɛ', ['offenes e']);
  this.executeCharTest('ɜ', ['umgedrehtes offenes e']);
  this.executeCharTest('ɝ', ['umgekehrtes offenes e mit Haken']);
  this.executeCharTest('ɞ', ['umgekehrtes geschlossenes epsilon']);
  this.executeCharTest('ɠ', ['g mit Haken']);
  this.executeCharTest('ɡ', ['g']);
  this.executeCharTest('ɣ', ['gamma']);
  this.executeCharTest('ɤ', ['mini gamma']);
  this.executeCharTest('ɥ', ['gedrehtes h']);
  this.executeCharTest('ɦ', ['h mit Haken']);
  this.executeCharTest('ɧ', ['h mit Haken']);
  this.executeCharTest('ɩ', ['iota']);
  this.executeCharTest('ɫ', ['l mit mittlerer Tilde']);
  this.executeCharTest('ɬ', ['l mit Gurt']);
  this.executeCharTest('ɭ', ['l mit Retroflexhaken']);
  this.executeCharTest('ɯ', ['gedreht M']);
  this.executeCharTest('ɰ', ['gedrehtes M mit langem Bein']);
  this.executeCharTest('ɱ', ['m mit Haken']);
  this.executeCharTest('ɲ', ['n mit linkem Haken']);
  this.executeCharTest('ɳ', ['n mit Retroflexhaken']);
  this.executeCharTest('ɵ', ['o mit balken']);
  this.executeCharTest('ɷ', ['geschlossenes omega']);
  this.executeCharTest('ɸ', ['phi']);
  this.executeCharTest('ɹ', ['gedrehtes r']);
  this.executeCharTest('ɺ', ['gedrehtes r mit langem Bein']);
  this.executeCharTest('ɻ', ['gedrehtes r mit langem Bein und Haken']);
  this.executeCharTest('ɼ', ['r mit langem Bein']);
  this.executeCharTest('ɽ', ['r mit Endstück']);
  this.executeCharTest('ɾ', ['r mit Angelhaken']);
  this.executeCharTest('ɿ', ['umgedrehtes R mit Angelhaken']);
  this.executeCharTest('ʂ', ['s mit Haken']);
  this.executeCharTest('ʃ', ['esh']);
  this.executeCharTest('ʅ', ['squat umgekehrt']);
  this.executeCharTest('ʆ', ['esh mit Kringel']);
  this.executeCharTest('ʇ', ['gedreht T']);
  this.executeCharTest('ʈ', ['t mit Retroflexhaken']);
  this.executeCharTest('ʉ', ['u Bar']);
  this.executeCharTest('ʊ', ['upsilon']);
  this.executeCharTest('ʋ', ['v mit Haken']);
  this.executeCharTest('ʌ', ['gedrehtes v']);
  this.executeCharTest('ʍ', ['gedrehtes w']);
  this.executeCharTest('ʎ', ['gedrehtes y']);
  this.executeCharTest('ʐ', ['z mit Retroflexhaken']);
  this.executeCharTest('ʑ', ['z mit Kringel']);
  this.executeCharTest('ʕ', ['pharyngales stimmhaft Frikativ']);
  this.executeCharTest('ʖ', ['invertierter Glottalanschlag']);
  this.executeCharTest('ʗ', ['gestrecktes C']);
  this.executeCharTest('ʘ', ['bilabialer Klick']);
  this.executeCharTest('ʚ', ['geschlossenes offenes e']);
  this.executeCharTest('ʞ', ['gedrehtes k']);
  this.executeCharTest('ʠ', ['q mit Haken']);
  this.executeCharTest('ʣ', ['dz Digraph']);
  this.executeCharTest('ʥ', ['dz Digraph mit Kringel']);
  this.executeCharTest('ʦ', ['ts Digraph']);
  this.executeCharTest('ʧ', ['tesh Digraph']);
  this.executeCharTest('ʨ', ['tc Digraph mit Kringel']);
  this.executeCharTest('ʩ', ['feng Digraph']);
  this.executeCharTest('ʪ', ['ls Digraph']);
  this.executeCharTest('ʫ', ['lz Digraph']);
  this.executeCharTest('ʬ', ['bilabiales Perkussiv']);
  this.executeCharTest('ʭ', ['bidentales Perkussiv']);
  this.executeCharTest('ʮ', ['gedrehtes h mit Angelhaken']);
  this.executeCharTest('ʯ', ['gedrehtes h mit Angelhaken und Schwanz']);
  this.executeCharTest('ᴂ', ['gedrehtes ae']);
  this.executeCharTest('ᴈ', ['gedrehtes e']);
  this.executeCharTest('ᴉ', ['gedrehtes i']);
  this.executeCharTest('ᴑ', ['liegendes O']);
  this.executeCharTest('ᴒ', ['liegendes geöffnet O']);
  this.executeCharTest('ᴔ', ['gedreht Oe']);
  this.executeCharTest('ᴖ', ['obere Hälfte O']);
  this.executeCharTest('ᴗ', ['untere Hälfte O']);
  this.executeCharTest('ᴝ', ['liegendes U']);
  this.executeCharTest('ᴞ', ['liegendes u Umlaut']);
  this.executeCharTest('ᴟ', ['liegendes m']);
  this.executeCharTest('ᴤ', ['stimmhaft laryngaler Frikativ']);
  this.executeCharTest('ᴥ', ['Ain']);
  this.executeCharTest('ᵫ', ['ue']);
  this.executeCharTest('ᵬ', ['b mit mittlerer Tilde']);
  this.executeCharTest('ᵭ', ['d mit mittlerer Tilde']);
  this.executeCharTest('ᵮ', ['f mit mittlerer Tilde']);
  this.executeCharTest('ᵯ', ['m mit mittlerer Tilde']);
  this.executeCharTest('ᵰ', ['n mit mittlerer Tilde']);
  this.executeCharTest('ᵱ', ['p mit mittlerer Tilde']);
  this.executeCharTest('ᵲ', ['r mit mittlerer Tilde']);
  this.executeCharTest('ᵳ', ['r mit Angelhaken und mittlerer Tilde']);
  this.executeCharTest('ᵴ', ['s mit mittlerer Tilde']);
  this.executeCharTest('ᵵ', ['t mit mittlerer Tilde']);
  this.executeCharTest('ᵶ', ['z mit mittlerer Tilde']);
  this.executeCharTest('ᵷ', ['gedreht G']);
  this.executeCharTest('ᵹ', ['insular G']);
  this.executeCharTest('ᵺ', ['th mit Durchgestrichen']);
  this.executeCharTest('ᶀ', ['b mit Palatalhaken']);
  this.executeCharTest('ᶁ', ['d mit Palatalhaken']);
  this.executeCharTest('ᶂ', ['f mit Palatalhaken']);
  this.executeCharTest('ᶃ', ['g mit Palatalhaken']);
  this.executeCharTest('ᶄ', ['k mit Palatalhaken']);
  this.executeCharTest('ᶅ', ['l mit Palatalhaken']);
  this.executeCharTest('ᶆ', ['m mit Palatalhaken']);
  this.executeCharTest('ᶇ', ['n mit Palatalhaken']);
  this.executeCharTest('ᶈ', ['p mit Palatalhaken']);
  this.executeCharTest('ᶉ', ['r mit Palatalhaken']);
  this.executeCharTest('ᶊ', ['s mit Palatalhaken']);
  this.executeCharTest('ᶋ', ['esh mit Palatalhaken']);
  this.executeCharTest('ᶌ', ['v mit Palatalhaken']);
  this.executeCharTest('ᶍ', ['x mit Palatalhaken']);
  this.executeCharTest('ᶎ', ['z mit Palatalhaken']);
  this.executeCharTest('ᶏ', ['a mit Retroflexhaken']);
  this.executeCharTest('ᶐ', ['alpha mit Retroflexhaken']);
  this.executeCharTest('ᶑ', ['d mit Haken und Schwanz']);
  this.executeCharTest('ᶒ', ['e mit Retroflexhaken']);
  this.executeCharTest('ᶓ', ['offenes e mit Retroflexhaken']);
  this.executeCharTest('ᶔ', ['umgedrehtes offenes e mit Retroflexhaken']);
  this.executeCharTest('ᶕ', ['schwa mit Retroflexhaken']);
  this.executeCharTest('ᶖ', ['i mit Retroflexhaken']);
  this.executeCharTest('ᶗ', ['offenes o mit Retroflexhaken']);
  this.executeCharTest('ᶘ', ['esh mit Retroflexhaken']);
  this.executeCharTest('ᶙ', ['u mit Retroflexhaken']);
  this.executeCharTest('ᶚ', ['ezh mit Retroflexhaken']);
  this.executeCharTest('ŉ', ['n mit Apostroph davor']);
  this.executeCharTest('ŋ', ['eng']);
  this.executeCharTest('à', ['a mit Grave']);
  this.executeCharTest('á', ['a mit Aigu']);
  this.executeCharTest('â', ['a mit Zirkumflex']);
  this.executeCharTest('ã', ['a mit Tilde']);
  this.executeCharTest('ä', ['a mit Diärese']);
  this.executeCharTest('å', ['a mit Ring darüber']);
  this.executeCharTest('ç', ['c mit Cedille']);
  this.executeCharTest('è', ['e mit Grave']);
  this.executeCharTest('é', ['e mit Aigu']);
  this.executeCharTest('ê', ['e mit Zirkumflex']);
  this.executeCharTest('ë', ['e mit Diärese']);
  this.executeCharTest('ì', ['i mit Grave']);
  this.executeCharTest('í', ['i mit Aigu']);
  this.executeCharTest('î', ['i mit Zirkumflex']);
  this.executeCharTest('ï', ['i mit Diärese']);
  this.executeCharTest('ñ', ['n mit Tilde']);
  this.executeCharTest('ò', ['o mit Grave']);
  this.executeCharTest('ó', ['o mit Aigu']);
  this.executeCharTest('ô', ['o mit Zirkumflex']);
  this.executeCharTest('õ', ['o mit Tilde']);
  this.executeCharTest('ö', ['o mit Diärese']);
  this.executeCharTest('ù', ['u mit Grave']);
  this.executeCharTest('ú', ['u mit Aigu']);
  this.executeCharTest('û', ['u mit Zirkumflex']);
  this.executeCharTest('ü', ['u mit Diärese']);
  this.executeCharTest('ý', ['y mit Aigu']);
  this.executeCharTest('ÿ', ['y mit Diärese']);
  this.executeCharTest('ā', ['a mit Makron']);
  this.executeCharTest('ă', ['a mit Breve']);
  this.executeCharTest('ą', ['a mit Ogonek']);
  this.executeCharTest('ć', ['c mit Aigu']);
  this.executeCharTest('ĉ', ['c mit Zirkumflex']);
  this.executeCharTest('ċ', ['c mit Punkt darüber']);
  this.executeCharTest('č', ['c mit Caron']);
  this.executeCharTest('ď', ['d mit Caron']);
  this.executeCharTest('ē', ['e mit Makron']);
  this.executeCharTest('ĕ', ['e mit Breve']);
  this.executeCharTest('ė', ['e mit Punkt darüber']);
  this.executeCharTest('ę', ['e mit Ogonek']);
  this.executeCharTest('ě', ['e mit Caron']);
  this.executeCharTest('ĝ', ['g mit Zirkumflex']);
  this.executeCharTest('ğ', ['g mit Breve']);
  this.executeCharTest('ġ', ['g mit Punkt darüber']);
  this.executeCharTest('ģ', ['g mit Cedilla']);
  this.executeCharTest('ĥ', ['h mit Zirkumflex']);
  this.executeCharTest('ĩ', ['i mit Tilde']);
  this.executeCharTest('ī', ['i mit Makron']);
  this.executeCharTest('ĭ', ['i mit Breve']);
  this.executeCharTest('į', ['i mit Ogonek']);
  this.executeCharTest('ı', ['i ohne punkt']);
  this.executeCharTest('ĵ', ['j mit Zirkumflex']);
  this.executeCharTest('ķ', ['k mit Cedille']);
  this.executeCharTest('ĺ', ['l mit Aigu']);
  this.executeCharTest('ļ', ['l mit Cedille']);
  this.executeCharTest('ľ', ['l mit Caron']);
  this.executeCharTest('ŀ', ['l mit Punkt in der Mitte']);
  this.executeCharTest('ń', ['n mit Aigu']);
  this.executeCharTest('ņ', ['n mit Cedille']);
  this.executeCharTest('ň', ['n mit Caron']);
  this.executeCharTest('ō', ['o mit Makron']);
  this.executeCharTest('ŏ', ['o mit Breve']);
  this.executeCharTest('ő', ['o mit doppeltem Aigu']);
  this.executeCharTest('ŕ', ['r mit Aigu']);
  this.executeCharTest('ŗ', ['r mit Cedille']);
  this.executeCharTest('ř', ['r mit Caron']);
  this.executeCharTest('ś', ['s mit Aigu']);
  this.executeCharTest('ŝ', ['s mit Zirkumflex']);
  this.executeCharTest('ş', ['s mit Cedille']);
  this.executeCharTest('š', ['s mit Caron']);
  this.executeCharTest('ţ', ['t mit Cedille']);
  this.executeCharTest('ť', ['t mit Caron']);
  this.executeCharTest('ũ', ['u mit Tilde']);
  this.executeCharTest('ū', ['u mit Makron']);
  this.executeCharTest('ŭ', ['u mit Breve']);
  this.executeCharTest('ů', ['u mit Ring darüber']);
  this.executeCharTest('ű', ['u mit doppeltem Aigu']);
  this.executeCharTest('ų', ['u mit Ogonek']);
  this.executeCharTest('ŵ', ['w mit Zirkumflex']);
  this.executeCharTest('ŷ', ['y mit Zirkumflex']);
  this.executeCharTest('ź', ['z mit Aigu']);
  this.executeCharTest('ż', ['z mit Punkt darüber']);
  this.executeCharTest('ž', ['z mit Caron']);
  this.executeCharTest('ǎ', ['a mit Caron']);
  this.executeCharTest('ǐ', ['i mit Caron']);
  this.executeCharTest('ǒ', ['o mit Caron']);
  this.executeCharTest('ǔ', ['u mit Caron']);
  this.executeCharTest('ǧ', ['g mit Caron']);
  this.executeCharTest('ǩ', ['k mit Caron']);
  this.executeCharTest('ǫ', ['o mit Ogonek']);
  this.executeCharTest('ǰ', ['j mit Caron']);
  this.executeCharTest('ǵ', ['g mit Aigu']);
  this.executeCharTest('ǹ', ['n mit Grab']);
  this.executeCharTest('ȁ', ['a mit Doppelgrab']);
  this.executeCharTest('ȃ', ['a mit umgekehrter Breve']);
  this.executeCharTest('ȅ', ['e mit Doppelgrab']);
  this.executeCharTest('ȇ', ['e mit umgekehrter Breve']);
  this.executeCharTest('ȉ', ['i mit Doppelgrab']);
  this.executeCharTest('ȋ', ['i mit umgekehrter Breve']);
  this.executeCharTest('ȍ', ['o mit Doppelgrab']);
  this.executeCharTest('ȏ', ['o mit umgekehrter Breve']);
  this.executeCharTest('ȑ', ['r mit Doppelgrab']);
  this.executeCharTest('ȓ', ['r mit umgekehrter Breve']);
  this.executeCharTest('ȕ', ['u mit Doppelgrab']);
  this.executeCharTest('ȗ', ['u mit umgekehrter Breve']);
  this.executeCharTest('ș', ['s mit untenstehendem Komma']);
  this.executeCharTest('ț', ['t mit untenstehendem Komma']);
  this.executeCharTest('ȟ', ['h mit Caron']);
  this.executeCharTest('ȧ', ['a mit Punkt oben']);
  this.executeCharTest('ȩ', ['e mit Cedilla']);
  this.executeCharTest('ȯ', ['o mit Punkt oben']);
  this.executeCharTest('ȳ', ['y mit Makron']);
  this.executeCharTest('ȷ', ['dotless J']);
  this.executeCharTest('ḁ', ['a mit Ring unten']);
  this.executeCharTest('ḃ', ['b mit Punkt oben']);
  this.executeCharTest('ḅ', ['b mit untenstehendem Punkt']);
  this.executeCharTest('ḇ', ['b mit Zeile darunter']);
  this.executeCharTest('ḋ', ['d mit Punkt oben']);
  this.executeCharTest('ḍ', ['d mit untenstehendem Punkt']);
  this.executeCharTest('ḏ', ['d mit Zeile darunter']);
  this.executeCharTest('ḑ', ['d mit Cedilla']);
  this.executeCharTest('ḓ', ['d mit darunterem Zirkumflex']);
  this.executeCharTest('ḙ', ['e mit darunterem Zirkumflex']);
  this.executeCharTest('ḛ', ['e mit darunterliegender Tilde']);
  this.executeCharTest('ḟ', ['f mit Punkt oben']);
  this.executeCharTest('ḡ', ['g mit Makron']);
  this.executeCharTest('ḣ', ['h mit Punkt oben']);
  this.executeCharTest('ḥ', ['h mit untenstehendem Punkt']);
  this.executeCharTest('ḧ', ['h mit Diärese']);
  this.executeCharTest('ḩ', ['h mit Cedilla']);
  this.executeCharTest('ḫ', ['h mit Breve unten']);
  this.executeCharTest('ḭ', ['i mit darunterliegender Tilde']);
  this.executeCharTest('ḱ', ['k mit Akut']);
  this.executeCharTest('ḳ', ['k mit untenstehendem Punkt']);
  this.executeCharTest('ḵ', ['k mit Zeile darunter']);
  this.executeCharTest('ḷ', ['l mit Punkt unten']);
  this.executeCharTest('ḻ', ['l mit Zeile darunter']);
  this.executeCharTest('ḽ', ['l mit darunterem Zirkumflex']);
  this.executeCharTest('ḿ', ['m mit Akut']);
  this.executeCharTest('ṁ', ['m mit Punkt oben']);
  this.executeCharTest('ṃ', ['m mit untenstehendem Punkt']);
  this.executeCharTest('ṅ', ['n mit Punkt oben']);
  this.executeCharTest('ṇ', ['n mit untenstehendem Punkt']);
  this.executeCharTest('ṉ', ['n mit Zeile darunter']);
  this.executeCharTest('ṋ', ['n mit darunterem Zirkumflex']);
  this.executeCharTest('ṕ', ['p mit Akut']);
  this.executeCharTest('ṗ', ['p mit Punkt oben']);
  this.executeCharTest('ṙ', ['r mit Punkt oben']);
  this.executeCharTest('ṛ', ['r mit untenstehendem Punkt']);
  this.executeCharTest('ṟ', ['r mit Zeile darunter']);
  this.executeCharTest('ṡ', ['s mit Punkt oben']);
  this.executeCharTest('ṣ', ['s mit untenstehendem Punkt']);
  this.executeCharTest('ṫ', ['t mit Punkt oben']);
  this.executeCharTest('ṭ', ['t mit untenstehendem Punkt']);
  this.executeCharTest('ṯ', ['t mit Zeile darunter']);
  this.executeCharTest('ṱ', ['t mit darunterem Zirkumflex']);
  this.executeCharTest('ṳ', ['u mit untenstehender Diärese']);
  this.executeCharTest('ṵ', ['u mit darunterliegender Tilde']);
  this.executeCharTest('ṷ', ['u mit darunterem Zirkumflex']);
  this.executeCharTest('ṽ', ['v mit Tilde']);
  this.executeCharTest('ṿ', ['v mit untenstehendem Punkt']);
  this.executeCharTest('ẁ', ['w mit Grab']);
  this.executeCharTest('ẃ', ['w mit Akut']);
  this.executeCharTest('ẅ', ['w mit Diärese']);
  this.executeCharTest('ẇ', ['w mit Punkt oben']);
  this.executeCharTest('ẉ', ['w mit Punkt unten']);
  this.executeCharTest('ẋ', ['x mit Punkt oben']);
  this.executeCharTest('ẍ', ['x mit Diärese']);
  this.executeCharTest('ẏ', ['y mit Punkt oben']);
  this.executeCharTest('ẑ', ['z mit Zirkumflex']);
  this.executeCharTest('ẓ', ['z mit untenstehendem Punkt']);
  this.executeCharTest('ẕ', ['z mit Zeile darunter']);
  this.executeCharTest('ẖ', ['h mit Zeile darunter']);
  this.executeCharTest('ẗ', ['t mit Diärese']);
  this.executeCharTest('ẘ', ['w mit Ring oben']);
  this.executeCharTest('ẙ', ['y mit Ring oben']);
  this.executeCharTest('ẚ', ['a mit rechtem Halbring']);
  this.executeCharTest('ạ', ['a mit Punkt unten']);
  this.executeCharTest('ả', ['a mit Haken oben']);
  this.executeCharTest('ẹ', ['e mit untenstehendem Punkt']);
  this.executeCharTest('ẻ', ['e mit Haken oben']);
  this.executeCharTest('ẽ', ['e mit Tilde']);
  this.executeCharTest('ỉ', ['i mit Haken oben']);
  this.executeCharTest('ị', ['i mit untenstehendem Punkt']);
  this.executeCharTest('ọ', ['o mit untenstehendem Punkt']);
  this.executeCharTest('ỏ', ['o mit Haken oben']);
  this.executeCharTest('ụ', ['u mit untenstehendem Punkt']);
  this.executeCharTest('ủ', ['u mit Haken oben']);
  this.executeCharTest('ỳ', ['y mit Grab']);
  this.executeCharTest('ỵ', ['y mit untenstehendem Punkt']);
  this.executeCharTest('ỷ', ['y mit Haken oben']);
  this.executeCharTest('ỹ', ['y mit Tilde']);
  this.executeCharTest('ͣ', ['kombinierendes a']);
  this.executeCharTest('ͤ', ['kombinierendes e']);
  this.executeCharTest('ͥ', ['kombinierendes i']);
  this.executeCharTest('ͦ', ['kombinierendes o']);
  this.executeCharTest('ͧ', ['kombinierendes u']);
  this.executeCharTest('ͨ', ['kombinierendes c']);
  this.executeCharTest('ͩ', ['kombinierendes d']);
  this.executeCharTest('ͪ', ['kombinierendes h']);
  this.executeCharTest('ͫ', ['kombinierendes m']);
  this.executeCharTest('ͬ', ['kombinierendes r']);
  this.executeCharTest('ͭ', ['kombinierendes t']);
  this.executeCharTest('ͮ', ['kombinierendes v']);
  this.executeCharTest('ͯ', ['kombinierendes x']);
  this.executeCharTest('ᵢ', ['tiefgestelltes i']);
  this.executeCharTest('ᵣ', ['tiefgestelltes r']);
  this.executeCharTest('ᵤ', ['tiefgestelltes u']);
  this.executeCharTest('ᵥ', ['tiefgestelltes v']);
  this.executeCharTest('᷊', ['tiefgestelltes r']);
  this.executeCharTest('ᷓ', ['kombinierendes oberes w']);
  this.executeCharTest('ᷔ', ['kombinierendes ae']);
  this.executeCharTest('ᷕ', ['kombinierendes ao']);
  this.executeCharTest('ᷖ', ['kombinierendes av']);
  this.executeCharTest('ᷗ', ['kombinierendes c mit Cedilla']);
  this.executeCharTest('ᷘ', ['kombinierendes insulares d']);
  this.executeCharTest('ᷙ', ['kombinierendes eth']);
  this.executeCharTest('ᷚ', ['kombinierendes g']);
  this.executeCharTest('ᷛ', ['kombinierendes Kapitälchen g']);
  this.executeCharTest('ᷜ', ['kombinierendes k']);
  this.executeCharTest('ᷝ', ['kombinierendes l']);
  this.executeCharTest('ᷞ', ['kombinierendes Kapitälchen L']);
  this.executeCharTest('ᷟ', ['kombinierendes Kapitälchen M']);
  this.executeCharTest('ᷠ', ['kombinierendes n']);
  this.executeCharTest('ᷡ', ['kombinierendes Kapitälchen N']);
  this.executeCharTest('ᷢ', ['kombinierendes lateinisches Kapitälchen R']);
  this.executeCharTest('ᷣ', ['kombinierendes r rotunda']);
  this.executeCharTest('ᷤ', ['kombinierendes s']);
  this.executeCharTest('ᷥ', ['kombinierendes langes s']);
  this.executeCharTest('ᷦ', ['kombinierendes z']);
  this.executeCharTest('ⁱ', ['hochgestelltes i']);
  this.executeCharTest('ⁿ', ['hochgestelltes n']);
  this.executeCharTest('ₐ', ['tiefgestelltes a']);
  this.executeCharTest('ₑ', ['tiefgestelltes e']);
  this.executeCharTest('ₒ', ['tiefgestelltes o']);
  this.executeCharTest('ₓ', ['tiefgestelltes x']);
  this.executeCharTest('ₔ', ['tiefgestelltes schwa']);
  this.executeCharTest('ₕ', ['tiefgestelltes h']);
  this.executeCharTest('ₖ', ['tiefgestelltes k']);
  this.executeCharTest('ₗ', ['tiefgestelltes l']);
  this.executeCharTest('ₘ', ['tiefgestelltes m']);
  this.executeCharTest('ₙ', ['tiefgestelltes n']);
  this.executeCharTest('ₚ', ['tiefgestelltes p']);
  this.executeCharTest('ₛ', ['tiefgestelltes s']);
  this.executeCharTest('ₜ', ['tiefgestelltes t']);
  this.executeCharTest('ⱼ', ['tiefgestelltes j']);
  this.executeCharTest('🄪', ['groß S in stumpfen Klammern']);
  this.executeCharTest('🄫', ['eingekreistes kursives groß C']);
  this.executeCharTest('🄬', ['eingekreistes kursives groß R']);
  this.executeCharTest('🆊', ['durchgestrichenes P auf schwarzen Quadrat']);
  this.executeCharTest('Ǖ', ['groß U mit Diärese und Makron']);
  this.executeCharTest('Ǘ', ['groß U mit Diärese und Akut']);
  this.executeCharTest('Ǚ', ['groß U mit Diärese und Caron']);
  this.executeCharTest('Ǜ', ['groß U mit Diärese und Grab']);
  this.executeCharTest('Ǟ', ['groß A mit Diärese und Makron']);
  this.executeCharTest('Ǡ', ['groß A mit Dot Above und Makron']);
  this.executeCharTest('Ǭ', ['groß O mit Ogonek und Makron']);
  this.executeCharTest('Ǻ', ['groß A mit Ring oben und akut']);
  this.executeCharTest('Ȫ', ['groß O mit Diärese und Makron']);
  this.executeCharTest('Ȭ', ['groß O mit Tilde und Makron']);
  this.executeCharTest('Ȱ', ['groß O mit Punkt oben und Makron']);
  this.executeCharTest('Ḉ', ['groß C mit Cedilla und Akut']);
  this.executeCharTest('Ḕ', ['groß E mit Makron und Grab']);
  this.executeCharTest('Ḗ', ['groß E mit Makron und Akut']);
  this.executeCharTest('Ḝ', ['groß E mit Cedilla und Breve']);
  this.executeCharTest('Ḯ', ['groß I mit Diärese und Akut']);
  this.executeCharTest('Ḹ', ['groß L mit Dot Below und Makron']);
  this.executeCharTest('Ṍ', ['groß O mit Tilde und Akut']);
  this.executeCharTest('Ṏ', ['groß O mit Tilde und Diärese']);
  this.executeCharTest('Ṑ', ['groß O mit Makron und Grab']);
  this.executeCharTest('Ṓ', ['groß O mit Makron und Akut']);
  this.executeCharTest('Ṝ', ['groß R mit Punkt unten und Makron']);
  this.executeCharTest('Ṥ', ['groß S mit Akute und Punkt oben']);
  this.executeCharTest('Ṧ', ['groß S mit Caron und Punkt oben']);
  this.executeCharTest('Ṩ', ['groß S mit untenstehendem Punkt und oben stehendem Punkt']);
  this.executeCharTest('Ṹ', ['groß U mit Tilde und Akut']);
  this.executeCharTest('Ṻ', ['groß U mit Makron und Diärese']);
  this.executeCharTest('Ấ', ['groß A mit Zirkumflex und Akut']);
  this.executeCharTest('Ầ', ['groß A mit Zirkumflex und Grab']);
  this.executeCharTest('Ẩ', ['groß A mit Zirkumflex und Haken oben']);
  this.executeCharTest('Ẫ', ['groß A mit Circumflex und Tilde']);
  this.executeCharTest('Ậ', ['groß A mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('Ắ', ['groß A mit Breve und Akut']);
  this.executeCharTest('Ằ', ['groß A mit Breve und Grab']);
  this.executeCharTest('Ẳ', ['groß A mit Breve und Hook oben']);
  this.executeCharTest('Ẵ', ['groß A mit Breve und Tilde']);
  this.executeCharTest('Ặ', ['groß A mit Breve und Dot Below']);
  this.executeCharTest('Ế', ['groß E mit Zirkumflex und Akut']);
  this.executeCharTest('Ề', ['groß E mit Zirkumflex und Grab']);
  this.executeCharTest('Ể', ['groß E mit Zirkumflex und Haken oben']);
  this.executeCharTest('Ễ', ['groß E mit Zirkumflex und Tilde']);
  this.executeCharTest('Ệ', ['groß E mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('Ố', ['groß O mit Circumflex und Akut']);
  this.executeCharTest('Ồ', ['groß O mit Zirkumflex und Grab']);
  this.executeCharTest('Ổ', ['groß O mit Zirkumflex und Haken oben']);
  this.executeCharTest('Ỗ', ['groß O mit Zirkumflex und Tilde']);
  this.executeCharTest('Ộ', ['groß O mit Zirkumflex und Punkt darunter']);
  this.executeCharTest('Ớ', ['groß O mit Horn und Akut']);
  this.executeCharTest('Ờ', ['groß O mit Horn und Grab']);
  this.executeCharTest('Ở', ['groß O mit Horn und Haken oben']);
  this.executeCharTest('Ỡ', ['groß O mit Horn und Tilde']);
  this.executeCharTest('Ợ', ['groß O mit Horn und Punkt']);
  this.executeCharTest('Ứ', ['groß U mit Horn und Akut']);
  this.executeCharTest('Ừ', ['groß U mit Horn und Grab']);
  this.executeCharTest('Ử', ['groß U mit Horn und Haken oben']);
  this.executeCharTest('Ữ', ['groß U mit Horn und Tilde']);
  this.executeCharTest('Ự', ['groß U mit Horn und Punkt']);
  this.executeCharTest('À', ['groß A mit Gravis']);
  this.executeCharTest('Á', ['groß A mit Aigu']);
  this.executeCharTest('Â', ['groß A mit Zirkumflex']);
  this.executeCharTest('Ã', ['groß A mit Tilde']);
  this.executeCharTest('Ä', ['groß A mit Diärese']);
  this.executeCharTest('Å', ['groß A mit Ring darüber']);
  this.executeCharTest('Ç', ['groß C mit Cedille']);
  this.executeCharTest('È', ['groß E mit Gravis']);
  this.executeCharTest('É', ['groß E mit Aigu']);
  this.executeCharTest('Ê', ['groß E mit Zirkumflex']);
  this.executeCharTest('Ë', ['groß E mit Diärese']);
  this.executeCharTest('Ì', ['groß I mit Gravis']);
  this.executeCharTest('Í', ['groß I mit Aigu']);
  this.executeCharTest('Î', ['groß I mit Zirkumflex']);
  this.executeCharTest('Ï', ['groß I mit Diärese']);
  this.executeCharTest('Ñ', ['großes n mit Tilde']);
  this.executeCharTest('Ò', ['großes o mit Gravis']);
  this.executeCharTest('Ó', ['groß O mit Aigu']);
  this.executeCharTest('Ô', ['groß O mit Zirkumflex']);
  this.executeCharTest('Õ', ['groß O mit Tilde']);
  this.executeCharTest('Ö', ['groß O mit Diärese']);
  this.executeCharTest('Ù', ['groß U mit Gravis']);
  this.executeCharTest('Ú', ['groß U mit Aigu']);
  this.executeCharTest('Û', ['groß U mit Zirkumflex']);
  this.executeCharTest('Ü', ['groß U mit Diärese']);
  this.executeCharTest('Ý', ['groß Y mit Aigu']);
  this.executeCharTest('Ā', ['groß A mit Makron']);
  this.executeCharTest('Ă', ['groß A mit Breve']);
  this.executeCharTest('Ą', ['groß A mit Ogonek']);
  this.executeCharTest('Ć', ['groß C mit Aigu']);
  this.executeCharTest('Ĉ', ['groß C mit Zirkumflex']);
  this.executeCharTest('Ċ', ['groß C mit Punkt darüber']);
  this.executeCharTest('Č', ['groß C mit Caron']);
  this.executeCharTest('Ď', ['groß D mit Caron']);
  this.executeCharTest('Ē', ['groß E mit Makron']);
  this.executeCharTest('Ĕ', ['groß E mit Breve']);
  this.executeCharTest('Ė', ['groß E mit Punkt darüber']);
  this.executeCharTest('Ę', ['groß E mit Ogonek']);
  this.executeCharTest('Ě', ['groß E mit Caron']);
  this.executeCharTest('Ĝ', ['groß G mit Zirkumflex']);
  this.executeCharTest('Ğ', ['groß G mit Breve']);
  this.executeCharTest('Ġ', ['groß G mit Punkt darüber']);
  this.executeCharTest('Ģ', ['groß G mit Cedille']);
  this.executeCharTest('Ĥ', ['groß H mit Zirkumflex']);
  this.executeCharTest('Ĩ', ['groß I mit Tilde']);
  this.executeCharTest('Ī', ['groß I mit Makron']);
  this.executeCharTest('Ĭ', ['groß I mit Breve']);
  this.executeCharTest('Į', ['groß I mit Ogonek']);
  this.executeCharTest('İ', ['groß I mit Punkt darüber']);
  this.executeCharTest('Ĵ', ['groß J mit Zirkumflex']);
  this.executeCharTest('Ķ', ['groß K mit Cedille']);
  this.executeCharTest('Ĺ', ['groß L mit Aigu']);
  this.executeCharTest('Ļ', ['groß L mit Cedille']);
  this.executeCharTest('Ľ', ['groß L mit Caron']);
  this.executeCharTest('Ŀ', ['groß L mit Punkt in der Mitte']);
  this.executeCharTest('Ń', ['groß N mit Aigu']);
  this.executeCharTest('Ņ', ['groß N mit Cedille']);
  this.executeCharTest('Ň', ['groß N mit Caron']);
  this.executeCharTest('Ō', ['groß O mit Makron']);
  this.executeCharTest('Ŏ', ['groß O mit Breve']);
  this.executeCharTest('Ő', ['groß O mit doppeltem Aigu']);
  this.executeCharTest('Ŕ', ['groß R mit Aigu']);
  this.executeCharTest('Ŗ', ['groß R mit Cedille']);
  this.executeCharTest('Ř', ['groß R mit Caron']);
  this.executeCharTest('Ś', ['groß S mit Aigu']);
  this.executeCharTest('Ŝ', ['groß S mit Zirkumflex']);
  this.executeCharTest('Ş', ['groß S mit Cedille']);
  this.executeCharTest('Š', ['groß S mit Caron']);
  this.executeCharTest('Ţ', ['groß T mit Cedille']);
  this.executeCharTest('Ť', ['groß T mit Caron']);
  this.executeCharTest('Ũ', ['groß U mit Tilde']);
  this.executeCharTest('Ū', ['groß U mit Makron']);
  this.executeCharTest('Ŭ', ['groß U mit Breve']);
  this.executeCharTest('Ů', ['groß U mit Ring darüber']);
  this.executeCharTest('Ű', ['groß U mit dopppeltem Aigu']);
  this.executeCharTest('Ų', ['groß U mit Ogonek']);
  this.executeCharTest('Ŵ', ['groß W mit Zirkumflex']);
  this.executeCharTest('Ŷ', ['groß Y mit Zirkumflex']);
  this.executeCharTest('Ÿ', ['groß Y mit Diärese']);
  this.executeCharTest('Ź', ['groß Z mit Aigu']);
  this.executeCharTest('Ż', ['groß Z mit Punkt darüber']);
  this.executeCharTest('Ž', ['groß Z mit Caron']);
  this.executeCharTest('Ǎ', ['groß A mit Caron']);
  this.executeCharTest('Ǐ', ['groß I mit Caron']);
  this.executeCharTest('Ǒ', ['groß O mit Caron']);
  this.executeCharTest('Ǔ', ['groß U mit Caron']);
  this.executeCharTest('Ǧ', ['groß G mit Caron']);
  this.executeCharTest('Ǩ', ['groß K mit Caron']);
  this.executeCharTest('Ǫ', ['groß O mit Ogonek']);
  this.executeCharTest('Ǵ', ['groß G mit Akut']);
  this.executeCharTest('Ǹ', ['groß N mit Gravis']);
  this.executeCharTest('Ȁ', ['groß A mit Doppelgravis']);
  this.executeCharTest('Ȃ', ['groß A mit umgekehrter Breve']);
  this.executeCharTest('Ȅ', ['groß E mit Doppelgravis']);
  this.executeCharTest('Ȇ', ['groß E mit umgekehrter Breve']);
  this.executeCharTest('Ȉ', ['groß I mit Doppelgravis']);
  this.executeCharTest('Ȋ', ['groß I mit umgekehrter Breve']);
  this.executeCharTest('Ȍ', ['groß O mit Doppelgravis']);
  this.executeCharTest('Ȏ', ['groß O mit umgekehrter Breve']);
  this.executeCharTest('Ȑ', ['groß R mit Doppelgravis']);
  this.executeCharTest('Ȓ', ['groß R mit umgekehrter Breve']);
  this.executeCharTest('Ȕ', ['groß U mit Doppelgravis']);
  this.executeCharTest('Ȗ', ['groß U mit umgekehrter Breve']);
  this.executeCharTest('Ș', ['groß S mit untenstehendem Komma']);
  this.executeCharTest('Ț', ['groß T mit untenstehendem Komma']);
  this.executeCharTest('Ȟ', ['groß H mit Caron']);
  this.executeCharTest('Ȧ', ['groß A mit Punkt oben']);
  this.executeCharTest('Ȩ', ['groß E mit Cedilla']);
  this.executeCharTest('Ȯ', ['groß O mit Punkt oben']);
  this.executeCharTest('Ȳ', ['groß Y mit Makron']);
  this.executeCharTest('Ḁ', ['groß A mit Ring unten']);
  this.executeCharTest('Ḃ', ['groß B mit Punkt oben']);
  this.executeCharTest('Ḅ', ['groß B mit untenstehendem Punkt']);
  this.executeCharTest('Ḇ', ['groß B mit Zeile darunter']);
  this.executeCharTest('Ḋ', ['groß D mit Punkt oben']);
  this.executeCharTest('Ḍ', ['groß D mit untenstehendem Punkt']);
  this.executeCharTest('Ḏ', ['groß D mit Zeile darunter']);
  this.executeCharTest('Ḑ', ['groß D mit Cedilla']);
  this.executeCharTest('Ḓ', ['groß D mit darunterem Zirkumflex']);
  this.executeCharTest('Ḙ', ['groß E mit darunterem Zirkumflex']);
  this.executeCharTest('Ḛ', ['groß E mit darunterliegender Tilde']);
  this.executeCharTest('Ḟ', ['groß F mit Punkt oben']);
  this.executeCharTest('Ḡ', ['groß G mit Makron']);
  this.executeCharTest('Ḣ', ['groß H mit Punkt oben']);
  this.executeCharTest('Ḥ', ['groß H mit untenstehendem Punkt']);
  this.executeCharTest('Ḧ', ['groß H mit Diärese']);
  this.executeCharTest('Ḩ', ['groß H mit Cedilla']);
  this.executeCharTest('Ḫ', ['groß H mit Breve unten']);
  this.executeCharTest('Ḭ', ['groß I mit unten stehender Tilde']);
  this.executeCharTest('Ḱ', ['groß K mit Akut']);
  this.executeCharTest('Ḳ', ['groß K mit untenstehendem Punkt']);
  this.executeCharTest('Ḵ', ['groß K mit Zeile']);
  this.executeCharTest('Ḷ', ['groß L mit Punkt unten']);
  this.executeCharTest('Ḻ', ['groß L mit Zeile darunter']);
  this.executeCharTest('Ḽ', ['groß L mit darunterem Zirkumflex']);
  this.executeCharTest('Ḿ', ['groß M mit Akut']);
  this.executeCharTest('Ṁ', ['groß M mit Punkt oben']);
  this.executeCharTest('Ṃ', ['groß M mit untenstehendem Punkt']);
  this.executeCharTest('Ṅ', ['groß N mit Punkt oben']);
  this.executeCharTest('Ṇ', ['groß N mit untenstehendem Punkt']);
  this.executeCharTest('Ṉ', ['groß N mit Zeile darunter']);
  this.executeCharTest('Ṋ', ['groß N mit darunterem Zirkumflex']);
  this.executeCharTest('Ṕ', ['groß P mit Akut']);
  this.executeCharTest('Ṗ', ['groß P mit Punkt oben']);
  this.executeCharTest('Ṙ', ['groß R mit Punkt oben']);
  this.executeCharTest('Ṛ', ['groß R mit untenstehendem Punkt']);
  this.executeCharTest('Ṟ', ['groß R mit Zeile darunter']);
  this.executeCharTest('Ṡ', ['groß S mit Punkt oben']);
  this.executeCharTest('Ṣ', ['groß S mit untenstehendem Punkt']);
  this.executeCharTest('Ṫ', ['groß T mit Punkt oben']);
  this.executeCharTest('Ṭ', ['groß T mit untenstehendem Punkt']);
  this.executeCharTest('Ṯ', ['groß T mit Zeile darunter']);
  this.executeCharTest('Ṱ', ['groß T mit darunterem Zirkumflex']);
  this.executeCharTest('Ṳ', ['groß U mit untenstehender Diärese']);
  this.executeCharTest('Ṵ', ['groß U mit darunterliegender Tilde']);
  this.executeCharTest('Ṷ', ['groß U mit darunterem Zirkumflex']);
  this.executeCharTest('Ṽ', ['groß V mit Tilde']);
  this.executeCharTest('Ṿ', ['groß V mit untenstehendem Punkt']);
  this.executeCharTest('Ẁ', ['groß W mit Gravis']);
  this.executeCharTest('Ẃ', ['groß W mit Akut']);
  this.executeCharTest('Ẅ', ['groß W mit Diärese']);
  this.executeCharTest('Ẇ', ['groß W mit Punkt oben']);
  this.executeCharTest('Ẉ', ['groß W mit Punkt unten']);
  this.executeCharTest('Ẋ', ['groß X mit Punkt oben']);
  this.executeCharTest('Ẍ', ['groß X mit Diärese']);
  this.executeCharTest('Ẏ', ['groß Y mit Punkt oben']);
  this.executeCharTest('Ẑ', ['groß Z mit Zirkumflex']);
  this.executeCharTest('Ẓ', ['groß Z mit untenstehendem Punkt']);
  this.executeCharTest('Ẕ', ['groß Z mit Zeile darunter']);
  this.executeCharTest('Ạ', ['groß A mit Punkt unten']);
  this.executeCharTest('Ả', ['groß A mit Haken oben']);
  this.executeCharTest('Ẹ', ['groß E mit untenstehendem Punkt']);
  this.executeCharTest('Ẻ', ['groß E mit Haken oben']);
  this.executeCharTest('Ẽ', ['groß E mit Tilde']);
  this.executeCharTest('Ỉ', ['groß I mit Haken oben']);
  this.executeCharTest('Ị', ['groß I mit untenstehendem Punkt']);
  this.executeCharTest('Ọ', ['groß O mit untenstehendem Punkt']);
  this.executeCharTest('Ỏ', ['groß O mit Haken oben']);
  this.executeCharTest('Ụ', ['groß U mit untenstehendem Punkt']);
  this.executeCharTest('Ủ', ['groß U mit Haken oben']);
  this.executeCharTest('Ỳ', ['groß Y mit Gravis']);
  this.executeCharTest('Ỵ', ['groß Y mit untenstehendem Punkt']);
  this.executeCharTest('Ỷ', ['groß Y mit Haken oben']);
  this.executeCharTest('Ỹ', ['groß Y mit Tilde']);
  this.executeCharTest('⊾', ['rechter Winkel mit Bogen']);
  this.executeCharTest('⍼', ['rechter Winkel mit nach unten gerichtetem Zickzackpfeil']);
  this.executeCharTest('⟀', ['Dreidimensionaler Winkel']);
  this.executeCharTest('⦛', ['Gemessene Winkelöffnung links']);
  this.executeCharTest('⦜', ['Rechtwinklige Variante mit Quadrat']);
  this.executeCharTest('⦝', ['rechter Winkel mit Punkt gemessen']);
  this.executeCharTest('⦞', ['Winkel mit S nach innen']);
  this.executeCharTest('⦟', ['Spitzer Winkel']);
  this.executeCharTest('⦠', ['Sphärischer Öffnungswinkel nach links']);
  this.executeCharTest('⦡', ['Sphärischer Winkel, der sich öffnet']);
  this.executeCharTest('⦢', ['Gedrehter Winkel']);
  this.executeCharTest('⦣', ['Umgekehrter Winkel']);
  this.executeCharTest('⦤', ['Winkel mit Underbar']);
  this.executeCharTest('⦥', ['Umgekehrter Winkel mit Unterleiste']);
  this.executeCharTest('⦦', ['Schräger Winkel, der sich öffnet']);
  this.executeCharTest('⦧', ['Schräger Winkel, der sich nach unten öffnet']);
  this.executeCharTest('⦨', ['Gemessener Winkel mit offenem Arm endet im Pfeil nach oben und rechts']);
  this.executeCharTest('⦩', ['Gemessener Winkel mit offenem Arm und Pfeil nach oben und links']);
  this.executeCharTest('⦪', ['Gemessener Winkel mit offenem Arm endet im nach unten zeigenden Pfeil und rechts']);
  this.executeCharTest('⦫', ['Gemessener Winkel mit offenem Arm endet im nach unten zeigenden Pfeil']);
  this.executeCharTest('⦬', ['Gemessener Winkel mit offenem Arm endet im Pfeil nach rechts und oben']);
  this.executeCharTest('⦭', ['Gemessener Winkel mit offenem Arm endet im Pfeil nach links und oben']);
  this.executeCharTest('⦮', ['Gemessener Winkel mit offenem Arm endet im nach rechts und unten zeigenden Pfeil']);
  this.executeCharTest('⦯', ['Gemessener Winkel mit offenem Arm und Pfeil nach links und unten']);
  this.executeCharTest('←', ['Pfeil nach links']);
  this.executeCharTest('↑', ['Aufwärtspfeil']);
  this.executeCharTest('→', ['Pfeil nach rechts']);
  this.executeCharTest('↓', ['Pfeil nach unten']);
  this.executeCharTest('↔', ['Linker rechter Pfeil']);
  this.executeCharTest('↕', ['Pfeil nach oben']);
  this.executeCharTest('↖', ['Nordwestpfeil']);
  this.executeCharTest('↗', ['Nordostpfeil']);
  this.executeCharTest('↘', ['Südostpfeil']);
  this.executeCharTest('↙', ['Südwestpfeil']);
  this.executeCharTest('↚', ['Pfeil nach links mit Strich']);
  this.executeCharTest('↛', ['Pfeil nach rechts mit Strich']);
  this.executeCharTest('↜', ['Wellenpfeil nach links']);
  this.executeCharTest('↝', ['Wellenpfeil nach rechts']);
  this.executeCharTest('↞', ['Pfeil nach links mit zwei Spitzen']);
  this.executeCharTest('↟', ['Aufwärts zwei Pfeil nach unten']);
  this.executeCharTest('↠', ['Pfeil nach rechts mit zwei Köpfen']);
  this.executeCharTest('↡', ['Abwärts zwei Pfeil nach unten']);
  this.executeCharTest('↢', ['Pfeil nach links mit Schwanz']);
  this.executeCharTest('↣', ['Pfeil nach rechts mit Schwanz']);
  this.executeCharTest('↤', ['Pfeil nach links von der Bar']);
  this.executeCharTest('↥', ['Pfeil von der Bar nach oben']);
  this.executeCharTest('↦', ['Pfeil nach rechts von der Bar']);
  this.executeCharTest('↧', ['Pfeil von der Bar nach unten']);
  this.executeCharTest('↨', ['Pfeil nach unten mit Basis']);
  this.executeCharTest('↩', ['Pfeil nach links mit Haken']);
  this.executeCharTest('↪', ['Pfeil nach rechts mit Haken']);
  this.executeCharTest('↫', ['Pfeil nach links mit Schleife']);
  this.executeCharTest('↬', ['Pfeil nach rechts mit Schleife']);
  this.executeCharTest('↭', ['Linker rechter Wellenpfeil']);
  this.executeCharTest('↮', ['Linker rechter Pfeil mit Strich']);
  this.executeCharTest('↯', ['Zickzack-Pfeil nach unten']);
  this.executeCharTest('↰', ['Aufwärtspfeil mit Spitze nach links']);
  this.executeCharTest('↱', ['Aufwärtspfeil mit Spitze nach rechts']);
  this.executeCharTest('↲', ['Pfeil nach unten mit Spitze nach links']);
  this.executeCharTest('↳', ['Abwärtspfeil mit Spitze nach rechts']);
  this.executeCharTest('↴', ['Pfeil nach rechts mit Ecke nach unten']);
  this.executeCharTest('↵', ['Pfeil nach unten mit Ecke nach links']);
  this.executeCharTest('↶', ['Gegen den Uhrzeigersinn oberer halbkreisförmiger Pfeil']);
  this.executeCharTest('↷', ['Halbkreis im Uhrzeigersinn']);
  this.executeCharTest('↸', ['Nordwestpfeil zur langen Bar']);
  this.executeCharTest('↹', ['Pfeil nach links zum Überfahren Pfeil nach rechts zum Überfahren']);
  this.executeCharTest('↺', ['Offener Kreispfeil gegen den Uhrzeigersinn']);
  this.executeCharTest('↻', ['Kreispfeil im Uhrzeigersinn öffnen']);
  this.executeCharTest('⇄', ['Pfeil nach rechts über Pfeil nach links']);
  this.executeCharTest('⇅', ['Aufwärtspfeil nach links von Abwärtspfeil']);
  this.executeCharTest('⇆', ['Pfeil nach links über Pfeil nach rechts']);
  this.executeCharTest('⇇', ['Links gepaarte Pfeile']);
  this.executeCharTest('⇈', ['Aufwärts gepaarte Pfeile']);
  this.executeCharTest('⇉', ['Rechts gepaarte Pfeile']);
  this.executeCharTest('⇊', ['Abwärts gepaarte Pfeile']);
  this.executeCharTest('⇍', ['Doppelpfeil nach links mit Strich']);
  this.executeCharTest('⇎', ['Links Rechts Doppelpfeil mit Strich']);
  this.executeCharTest('⇏', ['Doppelpfeil nach rechts mit Strich']);
  this.executeCharTest('⇐', ['Doppelpfeil nach links']);
  this.executeCharTest('⇑', ['Doppelpfeil nach oben']);
  this.executeCharTest('⇒', ['Doppelpfeil nach rechts']);
  this.executeCharTest('⇓', ['Doppelpfeil nach unten']);
  this.executeCharTest('⇔', ['Linker rechter Doppelpfeil']);
  this.executeCharTest('⇕', ['Doppelpfeil nach unten']);
  this.executeCharTest('⇖', ['Nordwest-Doppelpfeil']);
  this.executeCharTest('⇗', ['Nordost-Doppelpfeil']);
  this.executeCharTest('⇘', ['Südost Doppelpfeil']);
  this.executeCharTest('⇙', ['Südwest-Doppelpfeil']);
  this.executeCharTest('⇚', ['Dreifacher Pfeil nach links']);
  this.executeCharTest('⇛', ['Dreifacher Pfeil nach rechts']);
  this.executeCharTest('⇜', ['Linker Squiggle-Pfeil']);
  this.executeCharTest('⇝', ['Nach rechts gekrümmter Pfeil']);
  this.executeCharTest('⇞', ['Aufwärtspfeil mit Doppelstrich']);
  this.executeCharTest('⇟', ['Abwärtspfeil mit Doppelstrich']);
  this.executeCharTest('⇠', ['Pfeil nach links nach links']);
  this.executeCharTest('⇡', ['Pfeil nach oben gestrichen']);
  this.executeCharTest('⇢', ['Rechts gestrichener Pfeil']);
  this.executeCharTest('⇣', ['Abwärts gestrichelter Pfeil']);
  this.executeCharTest('⇤', ['Pfeil nach links zur Bar']);
  this.executeCharTest('⇥', ['Pfeil nach rechts zur Bar']);
  this.executeCharTest('⇦', ['Weißer Pfeil nach links']);
  this.executeCharTest('⇧', ['Aufwärts weißer Pfeil']);
  this.executeCharTest('⇨', ['Rechts weißer Pfeil']);
  this.executeCharTest('⇩', ['Abwärts weißer Pfeil']);
  this.executeCharTest('⇪', ['Aufwärts weißer Pfeil von der Stange']);
  this.executeCharTest('⇫', ['Aufwärts weißer Pfeil auf Sockel']);
  this.executeCharTest('⇬', ['Aufwärts weißer Pfeil auf Sockel mit horizontaler Stange']);
  this.executeCharTest('⇭', ['Aufwärts weißer Pfeil auf Sockel mit vertikaler Stange']);
  this.executeCharTest('⇮', ['Aufwärts weißer Doppelpfeil']);
  this.executeCharTest('⇯', ['Aufwärts weißer doppelter Pfeil auf Sockel']);
  this.executeCharTest('⇰', ['Rechts weißer Pfeil von der Wand']);
  this.executeCharTest('⇱', ['Nordwestpfeil zur Ecke']);
  this.executeCharTest('⇲', ['Südostpfeil zur Ecke']);
  this.executeCharTest('⇳', ['Weißer Pfeil nach unten']);
  this.executeCharTest('⇴', ['rechter Pfeil mit kleinem Kreis']);
  this.executeCharTest('⇵', ['Abwärtspfeil nach links von Aufwärtspfeil']);
  this.executeCharTest('⇶', ['Drei nach rechts gerichtete Pfeile']);
  this.executeCharTest('⇷', ['Pfeil nach links mit vertikalem Strich']);
  this.executeCharTest('⇸', ['Pfeil nach rechts mit vertikalem Strich']);
  this.executeCharTest('⇹', ['Linker rechter Pfeil mit vertikalem Strich']);
  this.executeCharTest('⇺', ['Pfeil nach links mit doppeltem vertikalem Strich']);
  this.executeCharTest('⇻', ['Pfeil nach rechts mit doppeltem vertikalem Strich']);
  this.executeCharTest('⇼', ['Linker rechter Pfeil mit doppeltem vertikalem Strich']);
  this.executeCharTest('⇽', ['Pfeil nach links mit offenem Kopf']);
  this.executeCharTest('⇾', ['Pfeil nach rechts mit offenem Kopf']);
  this.executeCharTest('⇿', ['Linker rechter Pfeil mit offenem Kopf']);
  this.executeCharTest('⌁', ['Elektrischer Pfeil']);
  this.executeCharTest('⌃', ['Pfeil nach oben']);
  this.executeCharTest('⌄', ['Pfeil nach unten']);
  this.executeCharTest('⌤', ['Pfeilspitze zwischen zwei horizontalen Balken']);
  this.executeCharTest('⎋', ['Gebrochener Kreis mit Nordwestpfeil']);
  this.executeCharTest('➔', ['Schwerer, nach rechts gerichteter Pfeil nach rechts']);
  this.executeCharTest('➘', ['Schwerer Südostpfeil']);
  this.executeCharTest('➙', ['Schwerer Pfeil nach rechts']);
  this.executeCharTest('➚', ['Schwerer Nordostpfeil']);
  this.executeCharTest('➛', ['Zeichnungspunkt Pfeil nach rechts']);
  this.executeCharTest('➜', ['Schwerer runder Pfeil nach rechts']);
  this.executeCharTest('➝', ['Dreieckköpfiger Pfeil nach rechts']);
  this.executeCharTest('➞', ['Schwerer Dreieckspfeil nach rechts']);
  this.executeCharTest('➟', ['Dreieckköpfiger Pfeil nach rechts']);
  this.executeCharTest('➠', ['Schwerer, gestrichelter Dreieckspfeil nach rechts']);
  this.executeCharTest('➡', ['Schwarzer Pfeil nach rechts']);
  this.executeCharTest('➢', ['Dreidimensionale, nach oben beleuchtete Pfeilspitze']);
  this.executeCharTest('➣', ['Dreidimensionale, von unten beleuchtete Pfeilspitze nach rechts']);
  this.executeCharTest('➤', ['Schwarze Pfeilspitze nach rechts']);
  this.executeCharTest('➥', ['Schwerer schwarzer Pfeil nach unten und rechts gebogen']);
  this.executeCharTest('➦', ['Schwerer schwarzer Pfeil nach oben und rechts gebogen']);
  this.executeCharTest('➧', ['Schwarzer nach rechts gerichteter Pfeil']);
  this.executeCharTest('➨', ['Schwerer konkaver Spitze-Pfeil nach rechts']);
  this.executeCharTest('➩', ['Rechts geschatteter weißer Pfeil nach rechts']);
  this.executeCharTest('➪', ['Links schattierter weißer Pfeil nach rechts']);
  this.executeCharTest('➫', ['Zurückgekippter, beschatteter weißer Pfeil nach rechts']);
  this.executeCharTest('➬', ['Vorne geneigter, beschatteter weißer Pfeil nach rechts']);
  this.executeCharTest('➭', ['Schwerer unterer rechter Schatten mit weißem Pfeil nach rechts']);
  this.executeCharTest('➮', ['Schwerer oberer rechter Schatten mit weißem Pfeil nach rechts']);
  this.executeCharTest('➯', ['Gekerbter Pfeil nach rechts unten rechts']);
  this.executeCharTest('➱', ['Weißer Pfeil nach rechts oben gekerbt']);
  this.executeCharTest('➲', ['Eingekreister schwerer weißer Pfeil nach rechts']);
  this.executeCharTest('➳', ['Pfeil mit weißer Feder nach rechts']);
  this.executeCharTest('➴', ['Schwarz-gefiederter Südostpfeil']);
  this.executeCharTest('➵', ['Pfeil mit schwarzer Feder nach rechts']);
  this.executeCharTest('➶', ['Schwarzgefiederter Nordostpfeil']);
  this.executeCharTest('➷', ['Schwerer schwarzgefiederter Südostpfeil']);
  this.executeCharTest('➸', ['Schwerer schwarzgefiederter Pfeil nach rechts']);
  this.executeCharTest('➹', ['Schwerer schwarzgefiederter Nordostpfeil']);
  this.executeCharTest('➺', ['Teardrop-Barbed-Pfeil nach rechts']);
  this.executeCharTest('➻', ['Schwerer Tropfen-Pfeil nach rechts']);
  this.executeCharTest('➼', ['Keil-Schwanz nach rechts Pfeil']);
  this.executeCharTest('➽', ['Schwerer, nach rechts gekeilter Pfeil']);
  this.executeCharTest('➾', ['Offener Pfeil nach rechts']);
  this.executeCharTest('⟰', ['Vierfachpfeil nach oben']);
  this.executeCharTest('⟱', ['Vierfacher Pfeil nach unten']);
  this.executeCharTest('⟲', ['Kreispfeil gegen den Uhrzeigersinn']);
  this.executeCharTest('⟳', ['Kreispfeil im Uhrzeigersinn']);
  this.executeCharTest('⟴', ['rechter Pfeil mit Circled Plus']);
  this.executeCharTest('⟵', ['Langer Pfeil nach links']);
  this.executeCharTest('⟶', ['Langer Pfeil nach rechts']);
  this.executeCharTest('⟷', ['Langer linker rechter Pfeil']);
  this.executeCharTest('⟸', ['Langer Doppelpfeil nach links']);
  this.executeCharTest('⟹', ['Langer Doppelpfeil nach rechts']);
  this.executeCharTest('⟺', ['Langer linker rechter Doppelpfeil']);
  this.executeCharTest('⟻', ['Langer Pfeil nach links von der Bar']);
  this.executeCharTest('⟼', ['Langer Rechtspfeil von der Bar']);
  this.executeCharTest('⟽', ['Langer Doppelpfeil nach links von der Bar']);
  this.executeCharTest('⟾', ['Langer Doppelpfeil nach rechts von der Bar']);
  this.executeCharTest('⟿', ['Langer nach rechts gerichteter Squiggle-Pfeil']);
  this.executeCharTest('⤀', ['Pfeil nach rechts mit senkrechtem Strich']);
  this.executeCharTest('⤁', ['Zwei Pfeil nach rechts mit doppeltem vertikalem Strich']);
  this.executeCharTest('⤂', ['Doppelpfeil nach links mit vertikalem Strich']);
  this.executeCharTest('⤃', ['Doppelpfeil nach rechts mit vertikalem Strich']);
  this.executeCharTest('⤄', ['Linker rechter Doppelpfeil mit vertikalem Strich']);
  this.executeCharTest('⤅', ['Zwei Pfeil nach rechts von der Bar']);
  this.executeCharTest('⤆', ['Doppelpfeil nach links von der Bar']);
  this.executeCharTest('⤇', ['Doppelter Pfeil nach rechts von der Bar']);
  this.executeCharTest('⤈', ['Abwärtspfeil mit horizontalem Strich']);
  this.executeCharTest('⤉', ['Aufwärtspfeil mit horizontalem Anschlag']);
  this.executeCharTest('⤊', ['Dreifachpfeil nach oben']);
  this.executeCharTest('⤋', ['Dreifacher Pfeil nach unten']);
  this.executeCharTest('⤌', ['Doppelpfeil nach links']);
  this.executeCharTest('⤍', ['Doppelpfeil nach rechts']);
  this.executeCharTest('⤎', ['Dreifacher Strichpfeil nach links']);
  this.executeCharTest('⤏', ['Dreifacher Bindestrich nach rechts']);
  this.executeCharTest('⤐', ['Dreipoliger Pfeil nach rechts']);
  this.executeCharTest('⤑', ['Pfeil nach rechts mit gepunktetem Stamm']);
  this.executeCharTest('⤒', ['Aufwärtspfeil zur Bar']);
  this.executeCharTest('⤓', ['Abwärtspfeil zur Bar']);
  this.executeCharTest('⤔', ['Pfeil nach rechts mit Schwanz mit senkrechtem Anschlag']);
  this.executeCharTest('⤕', ['Pfeil nach rechts mit Schwanz mit doppeltem vertikalem Strich']);
  this.executeCharTest('⤖', ['Nach rechts gerichteter zweiköpfiger Pfeil mit Schwanz']);
  this.executeCharTest('⤗', ['Nach rechts gerichteter Doppelpfeil mit Schwanz mit senkrechtem Anschlag']);
  this.executeCharTest('⤘', ['Nach rechts gerichteter Doppelpfeil mit Schwanz mit doppeltem vertikalem Strich']);
  this.executeCharTest('⤙', ['Pfeil nach links nach links']);
  this.executeCharTest('⤚', ['Pfeil nach rechts nach rechts']);
  this.executeCharTest('⤛', ['Doppelter Pfeilschwanz nach links']);
  this.executeCharTest('⤜', ['Doppelter Pfeilschwanz nach rechts']);
  this.executeCharTest('⤝', ['Pfeil nach links zu Black Diamond']);
  this.executeCharTest('⤞', ['Pfeil nach rechts zu Black Diamond']);
  this.executeCharTest('⤟', ['Pfeil nach links von Bar zu Black Diamond']);
  this.executeCharTest('⤠', ['Pfeil nach rechts von Bar zu Black Diamond']);
  this.executeCharTest('⤡', ['Nordwest- und Südostpfeil']);
  this.executeCharTest('⤢', ['Nordost- und Südwestpfeil']);
  this.executeCharTest('⤣', ['Nordwestpfeil mit Haken']);
  this.executeCharTest('⤤', ['Nordostpfeil mit Haken']);
  this.executeCharTest('⤥', ['Südostpfeil mit Haken']);
  this.executeCharTest('⤦', ['Südwestpfeil mit Haken']);
  this.executeCharTest('⤧', ['Nordwestpfeil und Nordostpfeil']);
  this.executeCharTest('⤨', ['Nordostpfeil und Südostpfeil']);
  this.executeCharTest('⤩', ['Südostpfeil und Südwestpfeil']);
  this.executeCharTest('⤪', ['Südwestpfeil und Nordwestpfeil']);
  this.executeCharTest('⤭', ['Südostpfeil Kreuzung Nordostpfeil']);
  this.executeCharTest('⤮', ['Nordostpfeil Kreuzung Südostpfeil']);
  this.executeCharTest('⤯', ['Fallende Diagonale, die Nordostpfeil kreuzt']);
  this.executeCharTest('⤰', ['Steigende Diagonale, die Südostpfeil kreuzt']);
  this.executeCharTest('⤱', ['Nordostpfeilüberquerung Nordwestpfeil']);
  this.executeCharTest('⤲', ['Nordwestpfeilüberquerung Nordostpfeil']);
  this.executeCharTest('⤳', ['Wellenpfeil, der direkt nach rechts zeigt']);
  this.executeCharTest('⤴', ['Pfeil nach rechts, dann nach oben gekrümmt']);
  this.executeCharTest('⤵', ['Pfeil nach rechts, dann nach unten gekrümmt']);
  this.executeCharTest('⤶', ['Pfeil nach unten, dann nach links gekrümmt']);
  this.executeCharTest('⤷', ['Pfeil nach unten, dann nach rechts gekrümmt']);
  this.executeCharTest('⤸', ['Rechtsseitiger Bogen im Uhrzeigersinn']);
  this.executeCharTest('⤹', ['Bogen der linken Seite gegen den Uhrzeigersinn']);
  this.executeCharTest('⤺', ['Pfeil oben gegen den Uhrzeigersinn']);
  this.executeCharTest('⤻', ['Pfeil unten gegen den Uhrzeigersinn']);
  this.executeCharTest('⤼', ['Pfeil oben im Uhrzeigersinn mit Minus']);
  this.executeCharTest('⤽', ['Pfeil oben gegen den Uhrzeigersinn mit Plus']);
  this.executeCharTest('⤾', ['Rechts unten halbkreisförmig im Uhrzeigersinn']);
  this.executeCharTest('⤿', ['Linker halbkreisförmiger Pfeil gegen den Uhrzeigersinn']);
  this.executeCharTest('⥀', ['Geschlossener Kreispfeil gegen den Uhrzeigersinn']);
  this.executeCharTest('⥁', ['Geschlossener Kreispfeil im Uhrzeigersinn']);
  this.executeCharTest('⥂', ['Pfeil nach rechts über Kurzer Pfeil nach links']);
  this.executeCharTest('⥃', ['Pfeil nach links über Kurzer Pfeil nach rechts']);
  this.executeCharTest('⥄', ['Kurzer Pfeil nach rechts Über Pfeil nach links']);
  this.executeCharTest('⥅', ['Pfeil nach rechts mit Plus unten']);
  this.executeCharTest('⥆', ['Pfeil nach links mit Plus unten']);
  this.executeCharTest('⥇', ['Pfeil nach rechts durch X']);
  this.executeCharTest('⥈', ['Linker rechter Pfeil durch kleinen Kreis']);
  this.executeCharTest('⥉', ['Aufwärts zweiköpfiger Pfeil vom kleinen Kreis']);
  this.executeCharTest('⥰', ['round implies']);
  this.executeCharTest('⥱', ['Gleichheitszeichen über dem Pfeil nach rechts']);
  this.executeCharTest('⥲', ['Tilde-Operator über dem Pfeil nach rechts']);
  this.executeCharTest('⥳', ['Pfeil nach links über Tilde-Operator']);
  this.executeCharTest('⥴', ['Pfeil nach rechts über Tilde-Operator']);
  this.executeCharTest('⥵', ['Pfeil nach rechts fast gleich']);
  this.executeCharTest('⥶', ['Weniger als oben Pfeil nach links']);
  this.executeCharTest('⥷', ['Pfeil nach links durch weniger als']);
  this.executeCharTest('⥸', ['Größer als über dem Pfeil nach rechts']);
  this.executeCharTest('⥹', ['Untersatz über dem Pfeil nach rechts']);
  this.executeCharTest('⥺', ['Pfeil nach links durch Teilmenge']);
  this.executeCharTest('⥻', ['Superset über dem Pfeil nach links']);
  this.executeCharTest('⦳', ['Leeres Set mit Pfeil rechts oben']);
  this.executeCharTest('⦴', ['Leeres Set mit linkem Pfeil oben']);
  this.executeCharTest('⦽', ['Pfeil nach oben durch Kreis']);
  this.executeCharTest('⧪', ['Schwarzer Diamant mit Pfeil nach unten']);
  this.executeCharTest('⧬', ['Weißer Kreis mit Pfeil nach unten']);
  this.executeCharTest('⧭', ['Schwarzer Kreis mit Pfeil nach unten']);
  this.executeCharTest('⨗', ['Integral mit Pfeil nach links mit Haken']);
  this.executeCharTest('⬀', ['North East White Arrow']);
  this.executeCharTest('⬁', ['Nordwestlicher weißer Pfeil']);
  this.executeCharTest('⬂', ['Südostweißer Pfeil']);
  this.executeCharTest('⬃', ['Südwestweißer Pfeil']);
  this.executeCharTest('⬄', ['Linker rechter weißer Pfeil']);
  this.executeCharTest('⬅', ['Schwarzer Pfeil nach links']);
  this.executeCharTest('⬆', ['Aufwärts schwarzer Pfeil']);
  this.executeCharTest('⬇', ['Abwärts schwarzer Pfeil']);
  this.executeCharTest('⬈', ['Schwarzer Nordostpfeil']);
  this.executeCharTest('⬉', ['Nordwestlicher schwarzer Pfeil']);
  this.executeCharTest('⬊', ['Schwarzer Südostpfeil']);
  this.executeCharTest('⬋', ['Südwestlicher schwarzer Pfeil']);
  this.executeCharTest('⬌', ['Linker rechter schwarzer Pfeil']);
  this.executeCharTest('⬍', ['Schwarzer Pfeil nach unten']);
  this.executeCharTest('⬎', ['Pfeil nach rechts mit Spitze nach unten']);
  this.executeCharTest('⬏', ['Pfeil nach rechts mit Spitze nach oben']);
  this.executeCharTest('⬐', ['Pfeil nach links mit Spitze nach unten']);
  this.executeCharTest('⬑', ['Pfeil nach links mit Spitze nach oben']);
  this.executeCharTest('⬰', ['Linker Pfeil mit kleinem Kreis']);
  this.executeCharTest('⬱', ['Drei nach links gerichtete Pfeile']);
  this.executeCharTest('⬲', ['Linker Pfeil mit Circled Plus']);
  this.executeCharTest('⬳', ['Langer nach links gerichteter Squiggle-Pfeil']);
  this.executeCharTest('⬴', ['Pfeil nach links mit senkrechtem Strich']);
  this.executeCharTest('⬵', ['Doppelpfeil nach links mit doppeltem vertikalem Strich']);
  this.executeCharTest('⬶', ['Doppelpfeil nach links von der Bar']);
  this.executeCharTest('⬷', ['Pfeil nach links mit zwei Köpfen']);
  this.executeCharTest('⬸', ['Pfeil nach links mit gepunktetem Stamm']);
  this.executeCharTest('⬹', ['Pfeil nach links mit Schwanz mit vertikalem Strich']);
  this.executeCharTest('⬺', ['Pfeil nach links mit Schwanz mit doppeltem vertikalem Strich']);
  this.executeCharTest('⬻', ['Nach links gerichteter zweiköpfiger Pfeil mit Schwanz']);
  this.executeCharTest('⬼', ['Nach links gerichteter zweiköpfiger Pfeil mit Schwanz mit vertikalem Strich']);
  this.executeCharTest('⬽', ['Nach links gerichteter zweiköpfiger Pfeil mit Schwanz mit doppeltem vertikalem Strich']);
  this.executeCharTest('⬾', ['Pfeil nach links durch X']);
  this.executeCharTest('⬿', ['Wellenpfeil, der direkt nach links zeigt']);
  this.executeCharTest('⭀', ['Gleichheitszeichen über dem Pfeil nach links']);
  this.executeCharTest('⭁', ['Reverse-Tilde-Operator Über Linkspfeil']);
  this.executeCharTest('⭂', ['Pfeil nach links über der Rückseite fast gleich']);
  this.executeCharTest('⭃', ['Pfeil nach rechts durch mehr als']);
  this.executeCharTest('⭄', ['Pfeil nach rechts durch Superset']);
  this.executeCharTest('⭅', ['Vierfachpfeil nach links']);
  this.executeCharTest('⭆', ['Vierfachpfeil nach rechts']);
  this.executeCharTest('⭇', ['Reverse-Tilde-Operator über dem Pfeil nach rechts']);
  this.executeCharTest('⭈', ['Pfeil nach rechts oben fast gleich']);
  this.executeCharTest('⭉', ['Tilde-Operator über dem Pfeil nach links']);
  this.executeCharTest('⭊', ['Pfeil nach links oben fast gleich']);
  this.executeCharTest('⭋', ['Pfeil nach links über Reverse-Tilde-Operator']);
  this.executeCharTest('⭌', ['Pfeil nach rechts über Reverse-Tilde-Operator']);
  this.executeCharTest('￩', ['Halbbreiter Pfeil nach links']);
  this.executeCharTest('￪', ['Halbbreiter Pfeil nach oben']);
  this.executeCharTest('￫', ['Halbbreiter Pfeil nach rechts']);
  this.executeCharTest('￬', ['Halbbreiter Pfeil nach unten']);
  this.executeCharTest('ℓ', ['Skript klein L']);
  this.executeCharTest('℘', ['Skript groß P']);
  this.executeCharTest('ℼ', ['pi mit Doppelstrich']);
  this.executeCharTest('ℽ', ['gamma mit Doppelstrich']);
  this.executeCharTest('ℾ', ['groß Gamma mit Doppelstrich']);
  this.executeCharTest('ℿ', ['groß Pi mit Doppelstrich']);
  this.executeCharTest('⅀', ['Summenzeichen mit Doppelstrich']);
  this.executeCharTest('ⅅ', ['groß D kursiv mit Doppelstrich']);
  this.executeCharTest('ⅆ', ['d kursiv mit Doppelstrich']);
  this.executeCharTest('ⅇ', ['e kursiv mit Doppelstrich']);
  this.executeCharTest('ⅈ', ['i kursiv mit Doppelstrich']);
  this.executeCharTest('ⅉ', ['j kursiv mit Doppelstrich']);
  this.executeCharTest('𝚤', ['punktloses i kursiv']);
  this.executeCharTest('𝚥', ['punktloses j kursiv']);
  this.executeCharTest('(', ['Klammer auf']);
  this.executeCharTest(')', ['Klammer zu']);
  this.executeCharTest('[', ['eckige Klammer auf']);
  this.executeCharTest(']', ['eckige Klammer zu']);
  this.executeCharTest('{', ['geschwungene Klammer auf']);
  this.executeCharTest('}', ['geschwungene Klammer zu']);
  this.executeCharTest('⁅', ['Linke eckige Klammer mit Stachel']);
  this.executeCharTest('⁆', ['Rechte eckige Klammer mit Stachel']);
  this.executeCharTest('⌈', ['linke Aufrundungsklammer']);
  this.executeCharTest('⌉', ['rechte Aufrundungsklammer']);
  this.executeCharTest('⌊', ['linke Abrundungsklammer']);
  this.executeCharTest('⌋', ['rechter Abrundungsklammer']);
  this.executeCharTest('⌌', ['unterer rechter Abschnitt']);
  this.executeCharTest('⌍', ['Unterer linker Abschnitt']);
  this.executeCharTest('⌎', ['Oberer rechter Abschnitt']);
  this.executeCharTest('⌏', ['Oberer linker Abschnitt']);
  this.executeCharTest('⌜', ['Obere linke Ecke']);
  this.executeCharTest('⌝', ['Obere rechte Ecke']);
  this.executeCharTest('⌞', ['Untere linke Ecke']);
  this.executeCharTest('⌟', ['Rechte untere Ecke']);
  this.executeCharTest('⌠', ['Obere Hälfte eines Integrals']);
  this.executeCharTest('⌡', ['Untere Hälfte eines Integrals']);
  this.executeCharTest('〈', ['Linke spitze Klammer']);
  this.executeCharTest('〉', ['Rechte spitze Klammer']);
  this.executeCharTest('⎛', ['Oberer Teil der linken Klammer']);
  this.executeCharTest('⎜', ['Linke Klammerverlängerung']);
  this.executeCharTest('⎝', ['Unterer Teil der linken Klammer']);
  this.executeCharTest('⎞', ['Oberer Teil der rechten Klammer']);
  this.executeCharTest('⎟', ['Rechte Klammerverlängerung']);
  this.executeCharTest('⎠', ['Unterer Teil der rechten Klammer']);
  this.executeCharTest('⎡', ['Oberer Teil der linken eckigen Klammer']);
  this.executeCharTest('⎢', ['Linke eckige Klammerverlängerung']);
  this.executeCharTest('⎣', ['unterer Teil der linken eckigen Klammer']);
  this.executeCharTest('⎤', ['Oberer Teil der rechten eckigen Klammer']);
  this.executeCharTest('⎥', ['Rechte eckige Klammerverlängerung']);
  this.executeCharTest('⎦', ['unterer Teil der rechten eckigen Klammer']);
  this.executeCharTest('⎧', ['oberer Teil der linken geschweiften Klammer']);
  this.executeCharTest('⎨', ['Mittelstück der linken geschweiften Klammer']);
  this.executeCharTest('⎩', ['unterer Teil der linken geschweiften Klammer']);
  this.executeCharTest('⎪', ['Zwischenteil einer geschweiften Klammer']);
  this.executeCharTest('⎫', ['oberer Teil der rechten geschweiften Klammer']);
  this.executeCharTest('⎬', ['Mittelstück der rechten geschweiften Klammer']);
  this.executeCharTest('⎭', ['unterer Teil der rechten geschweiften Klammer']);
  this.executeCharTest('⎮', ['Mittelteil eines Integrals']);
  this.executeCharTest('⎯', ['Erweiterung einer Querlinie']);
  this.executeCharTest('⎰', ['Geschweiftes Klammerteil oben links oder rechts unten']);
  this.executeCharTest('⎱', ['Geschweiftes Klammerteil oben rechts oder unten links']);
  this.executeCharTest('⎲', ['Oberer Teil einer Summe']);
  this.executeCharTest('⎳', ['Unterer Teil einer Summe']);
  this.executeCharTest('⎴', ['Obere eckige Klammer']);
  this.executeCharTest('⎵', ['Untere eckige Klammer']);
  this.executeCharTest('⎶', ['Untere eckige Klammer auf oberer eckiger Klammer']);
  this.executeCharTest('⎷', ['Unterer Teil des Radikalsymbols']);
  this.executeCharTest('⎸', ['Linke vertikale Boxlinie']);
  this.executeCharTest('⎹', ['Rechte vertikale Boxlinie']);
  this.executeCharTest('⏜', ['Obere Klammer']);
  this.executeCharTest('⏝', ['Untere Klammer']);
  this.executeCharTest('⏞', ['Obere geschweifte Klammer']);
  this.executeCharTest('⏟', ['Untere geschweifte Klammer']);
  this.executeCharTest('⏠', ['Obere eckige Klammer']);
  this.executeCharTest('⏡', ['Untere eckige Klammer']);
  this.executeCharTest('❨', ['Mittlere linke Klammerverzierung']);
  this.executeCharTest('❩', ['Mittlere rechte Klammerverzierung']);
  this.executeCharTest('❪', ['Mittlere abgeflachte linke Klammerverzierung']);
  this.executeCharTest('❫', ['Mittlere abgeflachte rechte Klammerverzierung']);
  this.executeCharTest('❬', ['Mittlere nach links weisende Winkelhalterung']);
  this.executeCharTest('❭', ['Mittlere, rechtwinklige Winkelhalterung']);
  this.executeCharTest('❮', ['Schwere nach links weisende Anführungszeichen-Verzierung']);
  this.executeCharTest('❯', ['Schwere nach rechts zeigenden Winkel-Anführungszeichen-Verzierung']);
  this.executeCharTest('❰', ['Schwere nach links weisende Winkelhalterung']);
  this.executeCharTest('❱', ['Schwere, nach rechts weisende Winkelhalterung']);
  this.executeCharTest('❲', ['Leichte linke Schildpatt Bracket Ornament']);
  this.executeCharTest('❳', ['Leichte rechte Schildpatt-Klammerverzierung']);
  this.executeCharTest('❴', ['Mittlere linke geschweifte Klammerverzierung']);
  this.executeCharTest('❵', ['Mittlere rechte geschweifte Klammerverzierung']);
  this.executeCharTest('⟅', ['Linker S-förmiger Taschenbegrenzer']);
  this.executeCharTest('⟆', ['rechter S-förmiger Taschenbegrenzer']);
  this.executeCharTest('⟦', ['Mathematische linke weiße eckige Klammer']);
  this.executeCharTest('⟧', ['Mathematische rechte weiße eckige Klammer']);
  this.executeCharTest('⟨', ['Mathematische linke Winkelklammer']);
  this.executeCharTest('⟩', ['Mathematische rechtwinklige Klammer']);
  this.executeCharTest('⟪', ['Mathematische linke doppelte Winkelklammer']);
  this.executeCharTest('⟫', ['Mathematische rechtwinklige eckige Klammer']);
  this.executeCharTest('⟬', ['Mathematische linke Schildkrötenpanzerhalterung']);
  this.executeCharTest('⟭', ['Mathematische rechte weiße Schildpatt-Klammer']);
  this.executeCharTest('⟮', ['Mathematische linke abgeflachte Klammer']);
  this.executeCharTest('⟯', ['Mathematische rechte abgeflachte Klammer']);
  this.executeCharTest('⦃', ['Linke weiße geschweifte Klammer']);
  this.executeCharTest('⦄', ['Rechte weiße geschweifte Klammer']);
  this.executeCharTest('⦅', ['Linke weiße Klammer']);
  this.executeCharTest('⦆', ['Rechte weiße Klammer']);
  this.executeCharTest('⦇', ['Z-Notation Linke Bildklammer']);
  this.executeCharTest('⦈', ['Z-Notation rechte Bildklammer']);
  this.executeCharTest('⦉', ['Z-Notation Linke Klammer']);
  this.executeCharTest('⦊', ['Z Notation Right Binding Bracket']);
  this.executeCharTest('⦋', ['Linke eckige Klammer mit Unterlenker']);
  this.executeCharTest('⦌', ['Rechte eckige Klammer mit Unterlenker']);
  this.executeCharTest('⦍', ['Linke eckige Klammer mit Häkchen in der oberen Ecke']);
  this.executeCharTest('⦎', ['Rechte eckige Klammer mit Tick in der unteren Ecke']);
  this.executeCharTest('⦏', ['Linke eckige Klammer mit Tick in der unteren Ecke']);
  this.executeCharTest('⦐', ['Rechte eckige Klammer mit Tick in der oberen Ecke']);
  this.executeCharTest('⦑', ['Linke Winkelklammer mit Punkt']);
  this.executeCharTest('⦒', ['Rechtwinklige Klammer mit Punkt']);
  this.executeCharTest('⦓', ['Linker Bogen weniger als Halterung']);
  this.executeCharTest('⦔', ['rechter Bogen größer als Halterung']);
  this.executeCharTest('⦕', ['Doppelter linker Bogen größer als Halterung']);
  this.executeCharTest('⦖', ['Doppelter rechter Bogen weniger als Halterung']);
  this.executeCharTest('⦗', ['Linke schwarze Schildkrötenhalterung']);
  this.executeCharTest('⦘', ['Rechte schwarze Schildpatt-Klammer']);
  this.executeCharTest('⧘', ['Linker wackeliger Zaun']);
  this.executeCharTest('⧙', ['rechter wackeliger Zaun']);
  this.executeCharTest('⧚', ['Linker doppelter wackeliger Zaun']);
  this.executeCharTest('⧛', ['rechter doppelter wackeliger Zaun']);
  this.executeCharTest('⧼', ['Nach links zeigender gebogener Winkelhalter']);
  this.executeCharTest('⧽', ['Nach rechts zeigender gebogener Winkelhalter']);
  this.executeCharTest('⸢', ['Obere linke halbe Halterung']);
  this.executeCharTest('⸣', ['Obere rechte halbe Klammer']);
  this.executeCharTest('⸤', ['Linke halbe halterung unten']);
  this.executeCharTest('⸥', ['Untere rechte halbe Halterung']);
  this.executeCharTest('⸦', ['U-Halterung links seitlich']);
  this.executeCharTest('⸧', ['U-Halterung rechts seitlich']);
  this.executeCharTest('⸨', ['Linke doppelte Klammer']);
  this.executeCharTest('⸩', ['Rechte doppelte Klammer']);
  this.executeCharTest('〈', ['Linke Winkelklammer']);
  this.executeCharTest('〉', ['Rechtwinklige Halterung']);
  this.executeCharTest('《', ['Linke Doppelwinkelhalterung']);
  this.executeCharTest('》', ['Rechte Doppelwinkelhalterung']);
  this.executeCharTest('「', ['Linke Eckklammer']);
  this.executeCharTest('」', ['Rechte Eckhalterung']);
  this.executeCharTest('『', ['Linke weiße Eckhalterung']);
  this.executeCharTest('』', ['Rechte weiße Eckhalterung']);
  this.executeCharTest('【', ['Linke schwarze linsenförmige Halterung']);
  this.executeCharTest('】', ['Rechte schwarze linsenförmige Halterung']);
  this.executeCharTest('〔', ['Linke Schildpatt-Klammer']);
  this.executeCharTest('〕', ['Rechte Schildpattlasche']);
  this.executeCharTest('〖', ['Linke weiße linsenförmige Halterung']);
  this.executeCharTest('〗', ['Rechte weiße linsenförmige Halterung']);
  this.executeCharTest('〘', ['Linke weiße Schildpatt-Klammer']);
  this.executeCharTest('〙', ['Rechte weiße Schildpatt-Klammer']);
  this.executeCharTest('〚', ['Linke weiße eckige Klammer']);
  this.executeCharTest('〛', ['Rechte weiße eckige Klammer']);
  this.executeCharTest('〝', ['Doppelte Anführungszeichen in umgekehrter Reihenfolge']);
  this.executeCharTest('〞', ['Doppelte Anführungszeichen']);
  this.executeCharTest('〟', ['Niedriges doppeltes Prime-Anführungszeichen']);
  this.executeCharTest('﴾', ['Verzierte linke Klammer']);
  this.executeCharTest('﴿', ['Verzierte rechte Klammer']);
  this.executeCharTest('︗', ['Präsentationsformular für vertikale linke weiße linsenförmige Halterung']);
  this.executeCharTest('︘', ['Präsentationsformular für vertikale rechtwinklige linsenförmige Halterung']);
  this.executeCharTest('︵', ['Präsentationsformular für vertikale linke Klammer']);
  this.executeCharTest('︶', ['Präsentationsformular für vertikale rechte Klammer']);
  this.executeCharTest('︷', ['Präsentationsformular für vertikale linke geschweifte Klammer']);
  this.executeCharTest('︸', ['Präsentationsformular für vertikale, recht geschweifte Klammer']);
  this.executeCharTest('︹', ['Präsentationsformular für vertikale linke Schildpattklammer']);
  this.executeCharTest('︺', ['Präsentationsformular für vertikale rechte Schildpatt-Klammer']);
  this.executeCharTest('︻', ['Präsentationsformular für vertikale linke schwarze linsenförmige Halterung']);
  this.executeCharTest('︼', ['Präsentationsformular für vertikale rechtwinklige schwarze linsenförmige Halterung']);
  this.executeCharTest('︽', ['Präsentationsformular für vertikale linke Doppelwinkelhalterung']);
  this.executeCharTest('︾', ['Präsentationsformular für vertikale rechtwinklige, rechtwinklige Halterung']);
  this.executeCharTest('︿', ['Präsentationsformular für vertikale linke Winkelhalterung']);
  this.executeCharTest('﹀', ['Präsentationsformular für vertikale rechtwinklige Halterung']);
  this.executeCharTest('﹁', ['Präsentationsformular für vertikale linke Eckhalterung']);
  this.executeCharTest('﹂', ['Präsentationsformular für vertikale rechte Eckhalterung']);
  this.executeCharTest('﹃', ['Präsentationsformular für vertikale linke weiße Eckhalterung']);
  this.executeCharTest('﹄', ['Präsentationsformular für vertikale rechte weiße Eckhalterung']);
  this.executeCharTest('﹇', ['Präsentationsformular für vertikale linke eckige Klammer']);
  this.executeCharTest('﹈', ['Präsentationsformular für vertikale eckige Klammer']);
  this.executeCharTest('﹙', ['Kleine linke Klammer']);
  this.executeCharTest('﹚', ['Kleine rechte Klammer']);
  this.executeCharTest('﹛', ['Kleine linke geschweifte Klammer']);
  this.executeCharTest('﹜', ['Kleine rechte geschweifte Klammer']);
  this.executeCharTest('﹝', ['Kleine linke Schildpatt-Klammer']);
  this.executeCharTest('﹞', ['Kleine rechte Schildpatt-Klammer']);
  this.executeCharTest('（', ['Linke Klammer in voller Breite']);
  this.executeCharTest('）', ['Rechte Klammer mit voller Breite']);
  this.executeCharTest('［', ['Linke eckige Klammer mit voller Breite']);
  this.executeCharTest('］', ['Rechteckige Klammer mit voller Breite']);
  this.executeCharTest('｛', ['Linke geschweifte Klammer mit voller Breite']);
  this.executeCharTest('｝', ['Rechtwinklige Klammer mit voller Breite']);
  this.executeCharTest('｟', ['Linke weiße Klammer mit voller Breite']);
  this.executeCharTest('｠', ['Rechte breite weiße Klammer']);
  this.executeCharTest('｢', ['Halbe breite linke eckklammer']);
  this.executeCharTest('｣', ['Halbe breite rechte eckklammer']);
  this.executeCharTest('─', ['Box Drawings Light Horizontal']);
  this.executeCharTest('━', ['Box Drawings Schwere Horizontale']);
  this.executeCharTest('│', ['Box Drawings Light Vertical']);
  this.executeCharTest('┃', ['Box Drawings Schwere Vertikale']);
  this.executeCharTest('┄', ['Box-Zeichnungen Licht Triple Dash Horizontal']);
  this.executeCharTest('┅', ['Box Drawings Heavy Triple Dash Horizontal']);
  this.executeCharTest('┆', ['Box Drawings Light Triple Dash Vertical']);
  this.executeCharTest('┇', ['Box Drawings Heavy Triple Dash Vertical']);
  this.executeCharTest('┈', ['Box Drawings Light Quadruple Dash Horizontal']);
  this.executeCharTest('┉', ['Box Drawings Heavy Quadruple Dash Horizontal']);
  this.executeCharTest('┊', ['Box Drawings Light Quadruple Dash Vertical']);
  this.executeCharTest('┋', ['Box Drawings Heavy Quadruple Dash Vertical']);
  this.executeCharTest('┌', ['Box Drawings Light Down und Right']);
  this.executeCharTest('┍', ['Box Drawings Down Light und Right Heavy']);
  this.executeCharTest('┎', ['Box Drawings Down Heavy und Right Light']);
  this.executeCharTest('┏', ['Box Drawings Heavy Down und Right']);
  this.executeCharTest('┐', ['Box Drawings Light Down und Links']);
  this.executeCharTest('┑', ['Box Drawings Down Light und Left Heavy']);
  this.executeCharTest('┒', ['Box Drawings Down Heavy und Left Light']);
  this.executeCharTest('┓', ['Box Drawings Heavy Down und Left']);
  this.executeCharTest('└', ['Box-Zeichnungen leuchten auf und richtig']);
  this.executeCharTest('┕', ['Box Drawings Up Light und Right Heavy']);
  this.executeCharTest('┖', ['Box Drawings Up Heavy und Right Light']);
  this.executeCharTest('┗', ['Box Drawings Heavy Up und Right']);
  this.executeCharTest('┘', ['Box-Zeichnungen leuchten und links']);
  this.executeCharTest('┙', ['Box Drawings Up Light und Left Heavy']);
  this.executeCharTest('┚', ['Box Drawings Up Heavy und Left Light']);
  this.executeCharTest('┛', ['Box Drawings Heavy Up und Links']);
  this.executeCharTest('├', ['Box Drawings Light Vertical und Right']);
  this.executeCharTest('┝', ['Box Drawings Vertical Light und Right Heavy']);
  this.executeCharTest('┞', ['Box Drawings Up Heavy und Right Down Light']);
  this.executeCharTest('┟', ['Box Drawings Down Heavy und Right Up Light']);
  this.executeCharTest('┠', ['Box Drawings Vertical Heavy und Right Light']);
  this.executeCharTest('┡', ['Box Drawings Down Light und Right Up Heavy']);
  this.executeCharTest('┢', ['Box Drawings Up Light und Right Down Heavy']);
  this.executeCharTest('┣', ['Box Drawings Heavy Vertical und Right']);
  this.executeCharTest('┤', ['Box Drawings Light Vertical und Left']);
  this.executeCharTest('┥', ['Box Drawings Vertical Light und Left Heavy']);
  this.executeCharTest('┦', ['Box Drawings Up Heavy und Left Down Light']);
  this.executeCharTest('┧', ['Box Drawings Down Heavy und Left Up Light']);
  this.executeCharTest('┨', ['Box Drawings Vertical Heavy und Left Light']);
  this.executeCharTest('┩', ['Box Drawings Down Light und Left Up Heavy']);
  this.executeCharTest('┪', ['Box Drawings Up Light und Left Down Heavy']);
  this.executeCharTest('┫', ['Box Drawings Heavy Vertical und Left']);
  this.executeCharTest('┬', ['Box-Zeichnungen leicht und horizontal']);
  this.executeCharTest('┭', ['Box Drawings Left Heavy und Right Down Light']);
  this.executeCharTest('┮', ['Box Drawings Right Heavy und Left Down Light']);
  this.executeCharTest('┯', ['Box Drawings Down Light und Horizontal Heavy']);
  this.executeCharTest('┰', ['Box-Zeichnungen für schweres und horizontales Licht']);
  this.executeCharTest('┱', ['Box Drawings Right Light und Left Down Heavy']);
  this.executeCharTest('┲', ['Box Drawings Left Light und Right Down Heavy']);
  this.executeCharTest('┳', ['Box-Zeichnungen nach unten und horizontal']);
  this.executeCharTest('┴', ['Box-Zeichnungen leuchten und horizontal']);
  this.executeCharTest('┵', ['Box Drawings Left Heavy und Right Up Light']);
  this.executeCharTest('┶', ['Box Drawings Right Heavy und Left Up Light']);
  this.executeCharTest('┷', ['Box Drawings Up Light und Horizontal Heavy']);
  this.executeCharTest('┸', ['Box-Zeichnungen für schweres und horizontales Licht']);
  this.executeCharTest('┹', ['Box Drawings Right Light und Left Up Heavy']);
  this.executeCharTest('┺', ['Box Drawings Left Light und Right Up Heavy']);
  this.executeCharTest('┻', ['Box-Zeichnungen schwer und horizontal']);
  this.executeCharTest('┼', ['Box Drawings Light vertikal und horizontal']);
  this.executeCharTest('┽', ['Kastenzeichnungen links schweres und rechtes vertikales Licht']);
  this.executeCharTest('┾', ['Box Drawings Right Heavy und Left Vertical Light']);
  this.executeCharTest('┿', ['Box Drawings Vertical Light und Horizontal Heavy']);
  this.executeCharTest('╀', ['Box Drawings Up Heavy und Down Horizontal Light']);
  this.executeCharTest('╁', ['Box Drawings Down Heavy und Up Horizontal Light']);
  this.executeCharTest('╂', ['Kastenzeichnungen Vertikales schweres und horizontales Licht']);
  this.executeCharTest('╃', ['Box Drawings Left Up Heavy und Right Down Light']);
  this.executeCharTest('╄', ['Box Drawings Right Up Heavy und Left Down Light']);
  this.executeCharTest('╅', ['Box Drawings Left Down Heavy und Right Up Light']);
  this.executeCharTest('╆', ['Box Drawings Right Down Heavy und Left Up Light']);
  this.executeCharTest('╇', ['Box Drawings Down Light und Up Horizontal Heavy']);
  this.executeCharTest('╈', ['Box Drawings Up Light und Down Horizontal Heavy']);
  this.executeCharTest('╉', ['Box Drawings Right Light und Left Vertical Heavy']);
  this.executeCharTest('╊', ['Box Drawings Left Light und Right Vertical Heavy']);
  this.executeCharTest('╋', ['Box Drawings Heavy vertikal und horizontal']);
  this.executeCharTest('╌', ['Box Drawings Light Double Dash Horizontal']);
  this.executeCharTest('╍', ['Box Drawings Heavy Double Dash Horizontal']);
  this.executeCharTest('╎', ['Box Drawings Light Double Dash Vertical']);
  this.executeCharTest('╏', ['Box Drawings Heavy Double Dash Vertical']);
  this.executeCharTest('═', ['Box-Zeichnungen doppelt horizontal']);
  this.executeCharTest('║', ['Box Drawings Double Vertical']);
  this.executeCharTest('╒', ['Box Drawings Down Single und Right Double']);
  this.executeCharTest('╓', ['Box Drawings Down Double und Right Single']);
  this.executeCharTest('╔', ['Box Drawings Double Down und Right']);
  this.executeCharTest('╕', ['Box Drawings Down Single und Left Double']);
  this.executeCharTest('╖', ['Box Drawings Down Double und Left Single']);
  this.executeCharTest('╗', ['Box Drawings Double Down und Links']);
  this.executeCharTest('╘', ['Box Drawings Up Single und Right Double']);
  this.executeCharTest('╙', ['Box Drawings Up Double und Right Single']);
  this.executeCharTest('╚', ['Box-Zeichnungen verdoppeln und rechts']);
  this.executeCharTest('╛', ['Box Drawings Up Single und Left Double']);
  this.executeCharTest('╜', ['Box Drawings Up Double und Left Single']);
  this.executeCharTest('╝', ['Box-Zeichnungen verdoppeln und links']);
  this.executeCharTest('╞', ['Box Drawings Vertical Single und Right Double']);
  this.executeCharTest('╟', ['Box Drawings Vertical Double und Right Single']);
  this.executeCharTest('╠', ['Box Drawings Double Vertical und Right']);
  this.executeCharTest('╡', ['Box Drawings Vertical Single und Left Double']);
  this.executeCharTest('╢', ['Box Drawings Vertical Double und Left Single']);
  this.executeCharTest('╣', ['Box Drawings Double Vertical und Left']);
  this.executeCharTest('╤', ['Box Drawings Down Single und Horizontal Double']);
  this.executeCharTest('╥', ['Box Drawings Down Double und Horizontal Single']);
  this.executeCharTest('╦', ['Box Drawings Double Down und Horizontal']);
  this.executeCharTest('╧', ['Box Drawings Up Single und Horizontal Double']);
  this.executeCharTest('╨', ['Box Drawings Up Double und Horizontal Single']);
  this.executeCharTest('╩', ['Box-Zeichnungen verdoppeln und horizontal']);
  this.executeCharTest('╪', ['Box Drawings Vertical Single und Horizontal Double']);
  this.executeCharTest('╫', ['Box Drawings Vertical Double und Horizontal Single']);
  this.executeCharTest('╬', ['Box-Zeichnungen doppelt vertikal und horizontal']);
  this.executeCharTest('╭', ['Box Drawings Light Arc Down und Right']);
  this.executeCharTest('╮', ['Box Drawings Light Arc Down und Links']);
  this.executeCharTest('╯', ['Box Drawings Light Arc Up und links']);
  this.executeCharTest('╰', ['Box Drawings Light Arc Up und rechts']);
  this.executeCharTest('╱', ['Box Drawings Light Diagonal Oben Rechts Nach Unten Links']);
  this.executeCharTest('╲', ['Box Drawings Light Diagonal von oben links nach rechts unten']);
  this.executeCharTest('╳', ['Box Zeichnungen Light Diagonal Cross']);
  this.executeCharTest('╴', ['Box-Zeichnungen Light Left']);
  this.executeCharTest('╵', ['Box-Zeichnungen leuchten auf']);
  this.executeCharTest('╶', ['Box-Zeichnungen Light Right']);
  this.executeCharTest('╷', ['Box Drawings Light Down']);
  this.executeCharTest('╸', ['Box Drawings Heavy Left']);
  this.executeCharTest('╹', ['Box Drawings Heavy Up']);
  this.executeCharTest('╺', ['Box Drawings Heavy Right']);
  this.executeCharTest('╻', ['Box Drawings Heavy Down']);
  this.executeCharTest('╼', ['Box Drawings Light Left und Heavy Right']);
  this.executeCharTest('╽', ['Box Drawings Light Up und Heavy Down']);
  this.executeCharTest('╾', ['Box Drawings Heavy Left und Light Right']);
  this.executeCharTest('╿', ['Box Drawings Heavy Up und Light Down']);
  this.executeCharTest('▀', ['Block der oberen Hälfte']);
  this.executeCharTest('▁', ['Unterer achter Block']);
  this.executeCharTest('▂', ['Unterer Viertelblock']);
  this.executeCharTest('▃', ['Drei Achtel-Block senken']);
  this.executeCharTest('▄', ['Block der unteren Hälfte']);
  this.executeCharTest('▅', ['Fünf Achtel Block']);
  this.executeCharTest('▆', ['Unterer Dreiviertelblock']);
  this.executeCharTest('▇', ['Unterer Sieben Achtel-Block']);
  this.executeCharTest('█', ['Voller Block']);
  this.executeCharTest('▉', ['Linker Sieben Achtel Block']);
  this.executeCharTest('▊', ['Linker Dreiviertelblock']);
  this.executeCharTest('▋', ['Linker Block mit fünf Achteln']);
  this.executeCharTest('▌', ['Linke halbe Block']);
  this.executeCharTest('▍', ['Block drei Achtel']);
  this.executeCharTest('▎', ['Linke einen Viertelblock']);
  this.executeCharTest('▏', ['Linker achter Block']);
  this.executeCharTest('▐', ['Rechte halbe Block']);
  this.executeCharTest('░', ['Lichtschatten']);
  this.executeCharTest('▒', ['Mittlere Schatten']);
  this.executeCharTest('▓', ['Dunkler Schatten']);
  this.executeCharTest('▔', ['Oberer achter Block']);
  this.executeCharTest('▕', ['rechter achter Block']);
  this.executeCharTest('▖', ['Quadrant unten links']);
  this.executeCharTest('▗', ['Quadrant rechts unten']);
  this.executeCharTest('▘', ['Quadrant oben links']);
  this.executeCharTest('▙', ['Quadrant oben links und unten links und rechts unten']);
  this.executeCharTest('▚', ['Quadrant oben links und rechts unten']);
  this.executeCharTest('▛', ['Quadrant oben links und oben rechts und unten links']);
  this.executeCharTest('▜', ['Quadrant oben links und oben rechts und unten rechts']);
  this.executeCharTest('▝', ['Quadrant oben rechts']);
  this.executeCharTest('▞', ['Quadrant oben rechts und unten links']);
  this.executeCharTest('▟', ['Quadrant oben rechts und unten links und unten rechts']);
  this.executeCharTest('■', ['Schwarzes Quadrat']);
  this.executeCharTest('□', ['Weißes Quadrat']);
  this.executeCharTest('▢', ['Weißes Quadrat mit abgerundeten Ecken']);
  this.executeCharTest('▣', ['Weißes Quadrat, das schwarzes kleines Quadrat enthält']);
  this.executeCharTest('▤', ['Quadrat mit horizontaler Füllung']);
  this.executeCharTest('▥', ['Quadrat mit vertikaler Füllung']);
  this.executeCharTest('▦', ['Quadrat mit orthogonaler Schraffurfüllung']);
  this.executeCharTest('▧', ['Quadrat mit Oben links nach rechts unten füllen']);
  this.executeCharTest('▨', ['Quadrat mit oberer rechter bis unterer linker Füllung']);
  this.executeCharTest('▩', ['Quadrat mit diagonaler Schraffurfüllung']);
  this.executeCharTest('▪', ['Schwarzes kleines Quadrat']);
  this.executeCharTest('▫', ['Weißes kleines Quadrat']);
  this.executeCharTest('▬', ['Schwarzes Rechteck']);
  this.executeCharTest('▭', ['Weißes Rechteck']);
  this.executeCharTest('▮', ['Schwarzes vertikales Rechteck']);
  this.executeCharTest('▯', ['Weißes vertikales Rechteck']);
  this.executeCharTest('▰', ['Schwarzes Parallelogramm']);
  this.executeCharTest('▱', ['Weißes Parallelogramm']);
  this.executeCharTest('▲', ['Schwarzes nach oben zeigendes Dreieck']);
  this.executeCharTest('△', ['Weißes nach oben zeigendes Dreieck']);
  this.executeCharTest('▴', ['Schwarzes nach oben zeigendes kleines Dreieck']);
  this.executeCharTest('▵', ['Weißes nach oben zeigendes kleines Dreieck']);
  this.executeCharTest('▶', ['Schwarzes rechtwinkliges Dreieck']);
  this.executeCharTest('▷', ['Weißes rechtwinkliges Dreieck']);
  this.executeCharTest('▸', ['Schwarzes nach rechts zeigendes kleines Dreieck']);
  this.executeCharTest('▹', ['Weißes nach rechts zeigendes kleines Dreieck']);
  this.executeCharTest('►', ['Schwarzer nach rechts zeigender Zeiger']);
  this.executeCharTest('▻', ['Weißer nach rechts zeigender Zeiger']);
  this.executeCharTest('▼', ['Schwarzes Abwärtsdreieck']);
  this.executeCharTest('▽', ['Weißes nach unten zeigendes Dreieck']);
  this.executeCharTest('▾', ['Schwarzes, nach unten zeigendes kleines Dreieck']);
  this.executeCharTest('▿', ['Weißes kleines Dreieck']);
  this.executeCharTest('◀', ['Schwarzes nach links zeigendes Dreieck']);
  this.executeCharTest('◁', ['Weißes nach links zeigendes Dreieck']);
  this.executeCharTest('◂', ['Schwarzes nach links zeigendes kleines Dreieck']);
  this.executeCharTest('◃', ['Weißes nach links zeigendes kleines Dreieck']);
  this.executeCharTest('◄', ['Schwarzer nach links zeigender Zeiger']);
  this.executeCharTest('◅', ['Weißer nach links zeigender Zeiger']);
  this.executeCharTest('◆', ['Schwarzer Diamant']);
  this.executeCharTest('◇', ['Weißer Diamant']);
  this.executeCharTest('◈', ['Weißer Diamant mit schwarzem kleinem Diamant']);
  this.executeCharTest('◉', ['Fischauge']);
  this.executeCharTest('◊', ['Raute']);
  this.executeCharTest('○', ['Weißer Kreis']);
  this.executeCharTest('◌', ['Gepunkteter Kreis']);
  this.executeCharTest('◍', ['Kreis mit vertikaler Füllung']);
  this.executeCharTest('◎', ['Bullseye']);
  this.executeCharTest('●', ['Schwarzer Kreis']);
  this.executeCharTest('◐', ['Kreis mit linker Hälfte schwarz']);
  this.executeCharTest('◑', ['Kreis mit rechter Hälfte schwarz']);
  this.executeCharTest('◒', ['Kreis mit unterer Hälfte Schwarz']);
  this.executeCharTest('◓', ['Kreis mit oberer Hälfte schwarz']);
  this.executeCharTest('◔', ['Kreis mit oberem rechten Quadranten schwarz']);
  this.executeCharTest('◕', ['Kreis mit ganzem oberen linken Quadranten schwarz']);
  this.executeCharTest('◖', ['Linker halber schwarzer Kreis']);
  this.executeCharTest('◗', ['rechter halber schwarzer Kreis']);
  this.executeCharTest('◘', ['Inverse Kugel']);
  this.executeCharTest('◙', ['Inverse weißer Kreis']);
  this.executeCharTest('◚', ['Umgekehrter weißer Kreis der oberen Hälfte']);
  this.executeCharTest('◛', ['Inverser weißer Kreis der unteren Hälfte']);
  this.executeCharTest('◜', ['Kreisbogen des oberen linken Quadranten']);
  this.executeCharTest('◝', ['Kreisbogen im oberen rechten Quadranten']);
  this.executeCharTest('◞', ['Kreisbogen des rechten unteren Quadranten']);
  this.executeCharTest('◟', ['Kreisbogen des unteren linken Quadranten']);
  this.executeCharTest('◠', ['Oberer Halbkreis']);
  this.executeCharTest('◡', ['Unterer Halbkreis']);
  this.executeCharTest('◢', ['Schwarzes rechtes Dreieck']);
  this.executeCharTest('◣', ['Schwarzes unteres linkes Dreieck']);
  this.executeCharTest('◤', ['Schwarzes oberes linkes Dreieck']);
  this.executeCharTest('◥', ['Schwarzes rechtes Dreieck']);
  this.executeCharTest('◦', ['Weiße Kugel']);
  this.executeCharTest('◧', ['Quadrat mit linker Hälfte schwarz']);
  this.executeCharTest('◨', ['Quadrat mit rechter Hälfte schwarz']);
  this.executeCharTest('◩', ['Quadrat mit der oberen linken Diagonalenhälfte schwarz']);
  this.executeCharTest('◪', ['Quadrat mit unterer rechter diagonaler Hälfte schwarz']);
  this.executeCharTest('◫', ['Weißes Quadrat mit senkrechter Linie']);
  this.executeCharTest('◬', ['Weißes nach oben zeigendes Dreieck mit Punkt']);
  this.executeCharTest('◭', ['Aufwärtszeigendes Dreieck mit linker Hälfte schwarz']);
  this.executeCharTest('◮', ['Aufwärtszeigendes Dreieck mit rechter Hälfte schwarz']);
  this.executeCharTest('◯', ['Großer Kreis']);
  this.executeCharTest('◰', ['Weißes Quadrat mit oberem linken Quadranten']);
  this.executeCharTest('◱', ['Weißes Quadrat mit unterem linken Quadranten']);
  this.executeCharTest('◲', ['Weißes Quadrat mit unterem rechten Quadranten']);
  this.executeCharTest('◳', ['Weißes Quadrat mit rechtem oberen Quadranten']);
  this.executeCharTest('◴', ['Weißer Kreis mit oberem linkem Quadranten']);
  this.executeCharTest('◵', ['Weißer Kreis mit unterem linken Quadranten']);
  this.executeCharTest('◶', ['Weißer Kreis mit unterem rechten Quadranten']);
  this.executeCharTest('◷', ['Weißer Kreis mit rechtem oberen Quadranten']);
  this.executeCharTest('◸', ['Oberes linkes Dreieck']);
  this.executeCharTest('◹', ['Oberes rechtes Dreieck']);
  this.executeCharTest('◺', ['Unteres linkes Dreieck']);
  this.executeCharTest('◻', ['Weißes mittleres Quadrat']);
  this.executeCharTest('◼', ['Schwarzes mittleres Quadrat']);
  this.executeCharTest('◽', ['Weißes mittleres kleines Quadrat']);
  this.executeCharTest('◾', ['Schwarzes mittleres kleines Quadrat']);
  this.executeCharTest('◿', ['Unteres rechtes Dreieck']);
  this.executeCharTest('⬒', ['Quadrat mit oberer Hälfte schwarz']);
  this.executeCharTest('⬓', ['Quadrat mit unterer Hälfte schwarz']);
  this.executeCharTest('⬔', ['Quadrat mit oberer rechter diagonaler Hälfte schwarz']);
  this.executeCharTest('⬕', ['Quadrat mit unterer linker diagonaler Hälfte schwarz']);
  this.executeCharTest('⬖', ['Diamant mit linker Hälfte schwarz']);
  this.executeCharTest('⬗', ['Diamant mit rechter Hälfte schwarz']);
  this.executeCharTest('⬘', ['Diamant mit oberer Hälfte schwarz']);
  this.executeCharTest('⬙', ['Diamant mit unterer Hälfte schwarz']);
  this.executeCharTest('⬚', ['Gepunktetes Quadrat']);
  this.executeCharTest('⬛', ['Schwarzes großes Quadrat']);
  this.executeCharTest('⬜', ['Weißes großes Quadrat']);
  this.executeCharTest('⬝', ['Schwarzes sehr kleines Quadrat']);
  this.executeCharTest('⬞', ['Weißes sehr kleines Quadrat']);
  this.executeCharTest('⬟', ['Schwarzes Pentagon']);
  this.executeCharTest('⬠', ['Weißes Pentagon']);
  this.executeCharTest('⬡', ['Weißes Sechseck']);
  this.executeCharTest('⬢', ['Schwarzes Sechseck']);
  this.executeCharTest('⬣', ['Horizontales schwarzes Sechseck']);
  this.executeCharTest('⬤', ['Schwarzer großer Kreis']);
  this.executeCharTest('⬥', ['Schwarzer mittlerer Diamant']);
  this.executeCharTest('⬦', ['Weißer mittlerer Diamant']);
  this.executeCharTest('⬧', ['Schwarze mittlere Raute']);
  this.executeCharTest('⬨', ['Weiße mittlere Raute']);
  this.executeCharTest('⬩', ['Schwarzer kleiner Diamant']);
  this.executeCharTest('⬪', ['Schwarze kleine Raute']);
  this.executeCharTest('⬫', ['Weiße kleine Raute']);
  this.executeCharTest('⬬', ['Schwarze horizontale Ellipse']);
  this.executeCharTest('⬭', ['Weiße horizontale Ellipse']);
  this.executeCharTest('⬮', ['Schwarze vertikale Ellipse']);
  this.executeCharTest('⬯', ['Weiße vertikale Ellipse']);
  this.executeCharTest('⭐', ['Weißer mittlerer Stern']);
  this.executeCharTest('⭑', ['Schwarzer kleiner Stern']);
  this.executeCharTest('⭒', ['Weißer kleiner Stern']);
  this.executeCharTest('⭓', ['Schwarzes nach rechts zeigendes Pentagon']);
  this.executeCharTest('⭔', ['Weißes nach rechts zeigendes Pentagon']);
  this.executeCharTest('⭕', ['Schwerer großer Kreis']);
  this.executeCharTest('⭖', ['Schweres Oval mit innenliegendem Oval']);
  this.executeCharTest('⭗', ['Schwerer Kreis mit Kreis nach innen']);
  this.executeCharTest('⭘', ['Schwerer Kreis']);
  this.executeCharTest('⭙', ['Schwerer eingekreister Saltire']);
  this.executeCharTest('↼', ['Linke Harpune mit Barb nach oben']);
  this.executeCharTest('↽', ['Harpune nach links mit Barb nach unten']);
  this.executeCharTest('↾', ['Harpune nach oben mit Barb nach rechts']);
  this.executeCharTest('↿', ['Harpune nach oben mit Barb nach links']);
  this.executeCharTest('⇀', ['Harpune nach rechts mit Barb nach oben']);
  this.executeCharTest('⇁', ['Harpune nach rechts mit Barb nach unten']);
  this.executeCharTest('⇂', ['Harpune nach unten mit Barb nach rechts']);
  this.executeCharTest('⇃', ['Harpune nach unten mit Barb nach links']);
  this.executeCharTest('⇋', ['Harpune nach links über Harpune nach rechts']);
  this.executeCharTest('⇌', ['Harpune nach rechts über Harpune nach links']);
  this.executeCharTest('⥊', ['Linke Barb Up Rechte Barb Down Harpoon']);
  this.executeCharTest('⥋', ['Linke Barb Down Rechte Barb Up Harpoon']);
  this.executeCharTest('⥌', ['Nach oben Barb Rechts Nach links Barb Harpoon']);
  this.executeCharTest('⥍', ['Up Barb Left Abwärts Barb Right Harpoon']);
  this.executeCharTest('⥎', ['Linke Barb Up Rechte Barb Up Harpoon']);
  this.executeCharTest('⥏', ['Barb nach rechts Barb nach rechts Harpoon']);
  this.executeCharTest('⥐', ['Linke Barb Down Rechte Barb Down Harpoon']);
  this.executeCharTest('⥑', ['Up Barb Left Abwärts Barb Left Harpoon']);
  this.executeCharTest('⥒', ['Linke Harpune mit Barb Up To Bar']);
  this.executeCharTest('⥓', ['Harpune nach rechts mit Barb bis zur Bar']);
  this.executeCharTest('⥔', ['Harpune nach oben mit Widerhaken rechts']);
  this.executeCharTest('⥕', ['Harpune nach unten mit Barb Right to Bar']);
  this.executeCharTest('⥖', ['Linke Harpune mit Widerhaken nach unten']);
  this.executeCharTest('⥗', ['Harpune nach rechts mit Widerhaken nach unten']);
  this.executeCharTest('⥘', ['Harpune nach oben mit Barb nach links']);
  this.executeCharTest('⥙', ['Harpune nach unten mit Barb nach links']);
  this.executeCharTest('⥚', ['Linke Harpune mit Barb Up von der Bar']);
  this.executeCharTest('⥛', ['Harpune nach rechts mit Barb Up von der Bar']);
  this.executeCharTest('⥜', ['Harpune nach oben mit Barb rechts von der Bar']);
  this.executeCharTest('⥝', ['Harpune nach unten mit Barb rechts von der Bar']);
  this.executeCharTest('⥞', ['Linke Harpune mit Barb Down von der Bar']);
  this.executeCharTest('⥟', ['Rechts Harpoon mit Barb Down von der Bar']);
  this.executeCharTest('⥠', ['Harpune nach oben mit Barb links von der Bar']);
  this.executeCharTest('⥡', ['Harpune nach unten mit Barb links von der Bar']);
  this.executeCharTest('⥢', ['Harpune nach links mit Barb nach oben Harpune nach links mit Barb nach unten']);
  this.executeCharTest('⥣', ['Harpune nach oben mit Barb links neben Harpune nach oben mit Barb rechts']);
  this.executeCharTest('⥤', ['Harpune nach rechts mit Barb nach oben Harpoon nach rechts mit Barb nach unten']);
  this.executeCharTest('⥥', ['Harpune nach unten mit Barb nach unten Harpune nach unten mit Barb nach rechts']);
  this.executeCharTest('⥦', ['Linke Harpune mit Barb Up Oben Rechts Harpoon mit Barb Up']);
  this.executeCharTest('⥧', ['Linke Harpune mit Widerhaken nach unten Rechts Harpune mit Widerhaken nach unten']);
  this.executeCharTest('⥨', ['Harpune nach rechts mit Barb nach oben Harpune nach links mit Barb nach oben']);
  this.executeCharTest('⥩', ['Harpune nach rechts mit Barb nach unten Harpune nach links mit Barb nach unten']);
  this.executeCharTest('⥪', ['Linke Harpune mit Barb Up Above Long Dash']);
  this.executeCharTest('⥫', ['Linke Harpune mit Barb Down Under Long Dash']);
  this.executeCharTest('⥬', ['Harpune nach rechts mit Barb Up Long Long Dash']);
  this.executeCharTest('⥭', ['Harpune nach rechts mit Widerhaken nach unten']);
  this.executeCharTest('⥮', ['Harpune nach oben mit Barb links neben Harpune nach unten mit Barb rechts']);
  this.executeCharTest('⥯', ['Harpune nach unten mit Barb links neben Harpune nach oben mit Barb rechts']);
  this.executeCharTest('⥼', ['linker Fischschwanz']);
  this.executeCharTest('⥽', ['rechter Fischschwanz']);
  this.executeCharTest('⥾', ['Fischschwanz']);
  this.executeCharTest('⥿', ['Fischschwanz']);
  this.executeCharTest('ℏ', ['Planck-Konstante über zwei Pi']);
  this.executeCharTest('℔', ['L B Balkensymbol']);
  this.executeCharTest('№', ['Numero-Zeichen']);
  this.executeCharTest('℗', ['Tonaufnahme Copyright']);
  this.executeCharTest('℞', ['Rezept nehmen']);
  this.executeCharTest('℟', ['Antwort']);
  this.executeCharTest('℠', ['Dienstleistungsmarke']);
  this.executeCharTest('℡', ['Telefon Zeichen']);
  this.executeCharTest('™', ['Markenzeichen']);
  this.executeCharTest('℣', ['Versicle']);
  this.executeCharTest('℥', ['Unze-Zeichen']);
  this.executeCharTest('Ω', ['Ohm-Zeichen']);
  this.executeCharTest('℧', ['Umgekehrtes Ohm-Zeichen']);
  this.executeCharTest('K', ['Kelvin-Zeichen']);
  this.executeCharTest('Å', ['Angstrom-Zeichen']);
  this.executeCharTest('℮', ['Geschätztes Symbol']);
  this.executeCharTest('Ⅎ', ['Umgeschlagenes Kapital F']);
  this.executeCharTest('ℹ', ['Informationsquelle']);
  this.executeCharTest('℺', ['Gedrehtes Kapital Q']);
  this.executeCharTest('℻', ['Faksimile-Zeichen']);
  this.executeCharTest('⅁', ['Sans-Serif Capital G']);
  this.executeCharTest('⅂', ['Sans-Serif Capital L']);
  this.executeCharTest('⅃', ['Aufgehobenes Sans-Serif-Kapital L']);
  this.executeCharTest('⅄', ['Sans-Serif Capital Y']);
  this.executeCharTest('!', ['Fakultät']);
  this.executeCharTest('"', ['Anführungszeichen']);
  this.executeCharTest('#', ['Nummernzeichen']);
  this.executeCharTest('$', ['Dollar']);
  this.executeCharTest('%', ['Prozent']);
  this.executeCharTest('&', ['und']);
  this.executeCharTest('\'', ['Hochkomma']);
  this.executeCharTest('*', ['times']);
  this.executeCharTest('+', ['plus']);
  this.executeCharTest(',', ['Komma']);
  this.executeCharTest('-', ['minus']);
  this.executeCharTest('.', ['Punkt']);
  this.executeCharTest('/', ['Schrägstrich']);
  this.executeCharTest(':', ['Doppelpunkt']);
  this.executeCharTest(';', ['Strichpunkt']);
  this.executeCharTest('<', ['kleiner als']);
  this.executeCharTest('=', ['ist gleich']);
  this.executeCharTest('>', ['größer als']);
  this.executeCharTest('?', ['Fragezeichen']);
  this.executeCharTest('@', ['Klammeraffe']);
  this.executeCharTest('\\', ['Umgekehrter Schrägstrich']);
  this.executeCharTest('^', ['circumflex']);
  this.executeCharTest('_', ['Unterstrich']);
  this.executeCharTest('`', ['Gravis Akzent']);
  this.executeCharTest('|', ['senkrechter Strich']);
  this.executeCharTest('~', ['tilde']);
  this.executeCharTest('¡', ['Umgekehrtes Ausrufezeichen']);
  this.executeCharTest('¢', ['Cent']);
  this.executeCharTest('£', ['Pfund']);
  this.executeCharTest('¤', ['währungszeichen']);
  this.executeCharTest('¥', ['yen']);
  this.executeCharTest('¦', ['gebrochene Linie']);
  this.executeCharTest('§', ['Abschnitt']);
  this.executeCharTest('¨', ['diaeresis']);
  this.executeCharTest('©', ['Copyright']);
  this.executeCharTest('ª', ['weibliches Ordnungszeichen']);
  this.executeCharTest('«', ['Nach links zeigendes doppeltes spitzes Anführungszeichen']);
  this.executeCharTest('¬', ['nicht']);
  this.executeCharTest('®', ['registered sign']);
  this.executeCharTest('¯', ['Überstrich']);
  this.executeCharTest('°', ['Grad']);
  this.executeCharTest('±', ['plus minus']);
  this.executeCharTest('´', ['acute accent']);
  this.executeCharTest('µ', ['micro sign']);
  this.executeCharTest('¶', ['Paragraf']);
  this.executeCharTest('·', ['mal']);
  this.executeCharTest('¸', ['Cedille']);
  this.executeCharTest('º', ['Männliches Ordnungszeichen']);
  this.executeCharTest('»', ['Nach rechts zeigendes doppeltes spitzes Anführungszeichen']);
  this.executeCharTest('¿', ['umgekehrtes Fragezeichen']);
  this.executeCharTest('×', ['mal']);
  this.executeCharTest('÷', ['geteilt durch']);
  this.executeCharTest('˘', ['Breve']);
  this.executeCharTest('˙', ['Überpunkt']);
  this.executeCharTest('˚', ['Überring']);
  this.executeCharTest('˛', ['Ogonek']);
  this.executeCharTest('˜', ['Tilde']);
  this.executeCharTest('˝', ['Doppleakutakzent']);
  this.executeCharTest('‐', ['Bindestrich']);
  this.executeCharTest('‑', ['Nicht brechender Bindestrich']);
  this.executeCharTest('‒', ['Abbildung Bindestrich']);
  this.executeCharTest('–', ['En Dash']);
  this.executeCharTest('—', ['EM Dash']);
  this.executeCharTest('―', ['Horizontale Linie']);
  this.executeCharTest('‖', ['Doppelte vertikale Linie']);
  this.executeCharTest('‗', ['Doppelter Unterstrich']);
  this.executeCharTest('‘', ['Linkes einfaches Anführungszeichen']);
  this.executeCharTest('’', ['Rechtes einfaches Anführungszeichen']);
  this.executeCharTest('‚', ['Einzelnes rechtes Anführungszeichen']);
  this.executeCharTest('‛', ['Einzelnes linkes Anführungszeichen']);
  this.executeCharTest('“', ['Linkes doppeltes Anführungszeichen']);
  this.executeCharTest('”', ['Rechtes doppeltes Anführungszeichen']);
  this.executeCharTest('„', ['Doppeltes rechtes Anführungszeichen']);
  this.executeCharTest('‟', ['Doppeltes linkes Anführungszeichen']);
  this.executeCharTest('†', ['Dolch']);
  this.executeCharTest('‡', ['Doppelter Dolch']);
  this.executeCharTest('•', ['Kugel']);
  this.executeCharTest('‣', ['Dreieckige Kugel']);
  this.executeCharTest('․', ['Einzelpunkt']);
  this.executeCharTest('‥', ['zwei Punkte']);
  this.executeCharTest('…', ['horizontale Ellipsis']);
  this.executeCharTest('‧', ['Trennungspunkt']);
  this.executeCharTest('‰', ['promille']);
  this.executeCharTest('‱', ['pro Zehntausend']);
  this.executeCharTest('′', ['Strich']);
  this.executeCharTest('″', ['zwei Strich']);
  this.executeCharTest('‴', ['drei Strich']);
  this.executeCharTest('‵', ['strich invertiert']);
  this.executeCharTest('‶', ['zwei Strich invertiert']);
  this.executeCharTest('‷', ['drei Strich invertiert']);
  this.executeCharTest('‸', ['Caret']);
  this.executeCharTest('‹', ['Einfacher nach links zeigender Winkel Anführungszeichen']);
  this.executeCharTest('›', ['Einzelne Nach-rechts-Winkel-Anführungszeichen']);
  this.executeCharTest('※', ['Referenzmarke']);
  this.executeCharTest('‼', ['Doppelausrufezeichen']);
  this.executeCharTest('‽', ['Interrobang']);
  this.executeCharTest('‾', ['Überschrift']);
  this.executeCharTest('‿', ['Undertie']);
  this.executeCharTest('⁀', ['Zeichen Krawatte']);
  this.executeCharTest('⁁', ['Caret-Einfügungspunkt']);
  this.executeCharTest('⁂', ['Asterism']);
  this.executeCharTest('⁃', ['Bindestrich Kugel']);
  this.executeCharTest('⁄', ['Fraktions-Schrägstrich']);
  this.executeCharTest('⁇', ['Doppel-Fragezeichen']);
  this.executeCharTest('⁈', ['Fragezeichen für Ausrufezeichen']);
  this.executeCharTest('⁉', ['Ausrufezeichen']);
  this.executeCharTest('⁋', ['Umgekehrtes Pilcrow-Zeichen']);
  this.executeCharTest('⁌', ['Schwarze Kugel nach links']);
  this.executeCharTest('⁍', ['Schwarze Kugel nach rechts']);
  this.executeCharTest('⁎', ['Niedriges Sternchen']);
  this.executeCharTest('⁏', ['Umgekehrtes Semikolon']);
  this.executeCharTest('⁐', ['Nahansicht']);
  this.executeCharTest('⁑', ['Zwei Sternchen vertikal ausgerichtet']);
  this.executeCharTest('⁒', ['Kommerzielles Minuszeichen']);
  this.executeCharTest('⁓', ['Swing Dash']);
  this.executeCharTest('⁔', ['Inverted Undertie']);
  this.executeCharTest('⁕', ['Blume Interpunktionszeichen']);
  this.executeCharTest('⁖', ['Drei Punkt-Interpunktion']);
  this.executeCharTest('⁗', ['quadruple prime']);
  this.executeCharTest('⁘', ['Vierpunkt-Interpunktion']);
  this.executeCharTest('⁙', ['Fünf Punkt-Interpunktion']);
  this.executeCharTest('⁚', ['Zwei Punkt-Interpunktion']);
  this.executeCharTest('⁛', ['Vier-Punkt-Markierung']);
  this.executeCharTest('⁜', ['Gepunktetes Kreuz']);
  this.executeCharTest('⁝', ['Tricolon']);
  this.executeCharTest('⁞', ['Vertikale vier Punkte']);
  this.executeCharTest('⁺', ['Hochgestelltes Pluszeichen']);
  this.executeCharTest('⁻', ['Hochgestelltes Minus']);
  this.executeCharTest('⁼', ['Hochgestelltes Gleichheitszeichen']);
  this.executeCharTest('⁽', ['Hochgestellte linke Klammer']);
  this.executeCharTest('⁾', ['Hochgestellte rechte Klammer']);
  this.executeCharTest('₊', ['Index Pluszeichen']);
  this.executeCharTest('₋', ['Tiefgestelltes Minus']);
  this.executeCharTest('₌', ['Tiefgestelltes Gleichheitszeichen']);
  this.executeCharTest('₍', ['Tiefgestellte linke Klammer']);
  this.executeCharTest('₎', ['Tiefgestellte rechte Klammer']);
  this.executeCharTest('⅊', ['Grundstücksgrenze']);
  this.executeCharTest('⅋', ['Ampersand gedreht']);
  this.executeCharTest('⅌', ['Pro Zeichen']);
  this.executeCharTest('⅍', ['Aktieselskab']);
  this.executeCharTest('ⅎ', ['Gedreht klein F']);
  this.executeCharTest('∀', ['für alle']);
  this.executeCharTest('∁', ['Komplement']);
  this.executeCharTest('∃', ['es gibt']);
  this.executeCharTest('∄', ['es gibt nicht']);
  this.executeCharTest('∅', ['leere Menge']);
  this.executeCharTest('∆', ['Differenz']);
  this.executeCharTest('∈', ['Element von']);
  this.executeCharTest('∉', ['nicht Element von']);
  this.executeCharTest('∊', ['Element von']);
  this.executeCharTest('∋', ['hat als Element']);
  this.executeCharTest('∌', ['hat nicht als Element']);
  this.executeCharTest('∍', ['hat als Element']);
  this.executeCharTest('∎', ['Ende Beweis']);
  this.executeCharTest('∏', ['Produkt']);
  this.executeCharTest('∐', ['Koprodukt']);
  this.executeCharTest('∑', ['Summe']);
  this.executeCharTest('−', ['minus']);
  this.executeCharTest('∓', ['minus plus']);
  this.executeCharTest('∔', ['Plus mit Punkt']);
  this.executeCharTest('∕', ['Division']);
  this.executeCharTest('∖', ['Mengendifferenz']);
  this.executeCharTest('∗', ['Sternoperator']);
  this.executeCharTest('∘', ['verknüpft mit']);
  this.executeCharTest('∙', ['Kreisoperator']);
  this.executeCharTest('√', ['Quadratwurzelzeichen']);
  this.executeCharTest('∛', ['Kubikwurzelzeichen']);
  this.executeCharTest('∜', ['vierte Wurzel']);
  this.executeCharTest('∝', ['proportional zu']);
  this.executeCharTest('∞', ['unendlich']);
  this.executeCharTest('∟', ['rechter Winkel']);
  this.executeCharTest('∠', ['Winkel']);
  this.executeCharTest('∡', ['gerichteter Winkel']);
  this.executeCharTest('∢', ['Raumwinkel']);
  this.executeCharTest('∣', ['teilt']);
  this.executeCharTest('∤', ['teilt nicht']);
  this.executeCharTest('∥', ['parallel zu']);
  this.executeCharTest('∦', ['nicht parallel zu']);
  this.executeCharTest('∧', ['und']);
  this.executeCharTest('∨', ['oder']);
  this.executeCharTest('∩', ['Durchschnitt']);
  this.executeCharTest('∪', ['Vereinigung']);
  this.executeCharTest('∫', ['Integral']);
  this.executeCharTest('∬', ['Doppelintegral']);
  this.executeCharTest('∭', ['Dreifachintegral']);
  this.executeCharTest('∮', ['Randintegral']);
  this.executeCharTest('∯', ['Oberflächenintegral']);
  this.executeCharTest('∰', ['Volumenintegral']);
  this.executeCharTest('∱', ['Integral im Uhrzeigersinn']);
  this.executeCharTest('∲', ['Kurvenintegral im Uhrzeigersinn']);
  this.executeCharTest('∳', ['Kurvenintegral im Gegenuhrzeigersinn']);
  this.executeCharTest('∴', ['folglich']);
  this.executeCharTest('∵', ['weil']);
  this.executeCharTest('∶', ['Verhältnis']);
  this.executeCharTest('∷', ['Proportion']);
  this.executeCharTest('∸', ['Minus mit Punkt']);
  this.executeCharTest('∹', ['Überschuss']);
  this.executeCharTest('∺', ['geometrische Proportion']);
  this.executeCharTest('∻', ['homothetisch']);
  this.executeCharTest('∼', ['Tildeoperator']);
  this.executeCharTest('∽', ['Umgekehrte Tilde']);
  this.executeCharTest('∾', ['Umgekehrtes stummes S']);
  this.executeCharTest('∿', ['Sinuswelle']);
  this.executeCharTest('≀', ['Kranzprodukt']);
  this.executeCharTest('≁', ['durchgestrichene Tilde']);
  this.executeCharTest('≂', ['Minus über Tilde']);
  this.executeCharTest('≃', ['asymptotisch gleich']);
  this.executeCharTest('≄', ['nicht asymptotisch gleich']);
  this.executeCharTest('≅', ['ungefähr gleich']);
  this.executeCharTest('≆', ['ungefähr, aber nicht ganz gleich']);
  this.executeCharTest('≇', ['weder ungefähr noch ganz gleich']);
  this.executeCharTest('≈', ['beinahe gleich']);
  this.executeCharTest('≉', ['nicht beinahe gleich']);
  this.executeCharTest('≊', ['beinahe gleich oder gleich']);
  this.executeCharTest('≋', ['dreifache Tilde']);
  this.executeCharTest('≌', ['alles gleich']);
  this.executeCharTest('≍', ['äquivalent zu']);
  this.executeCharTest('≎', ['geometrisch äquivalent zu']);
  this.executeCharTest('≏', ['Differenz zwischen']);
  this.executeCharTest('≐', ['nähert sich der Grenze']);
  this.executeCharTest('≑', ['geometrisch gleich']);
  this.executeCharTest('≒', ['Ungefähr gleich oder das Bild von']);
  this.executeCharTest('≓', ['Bild von oder ungefähr gleich']);
  this.executeCharTest('≔', ['definiert als']);
  this.executeCharTest('≕', ['definiert als von rechts']);
  this.executeCharTest('≖', ['ungefähr gleich']);
  this.executeCharTest('≗', ['ungefähr gleich']);
  this.executeCharTest('≘', ['entspricht']);
  this.executeCharTest('≙', ['entspricht']);
  this.executeCharTest('≚', ['gleichwinklig zu']);
  this.executeCharTest('≛', ['gleich mit Stern']);
  this.executeCharTest('≜', ['gleich mit Delta']);
  this.executeCharTest('≝', ['definitionsgemäß gleich']);
  this.executeCharTest('≞', ['gemessen mit']);
  this.executeCharTest('≟', ['vielleicht gleich']);
  this.executeCharTest('≠', ['ungleich']);
  this.executeCharTest('≡', ['kongruent mit']);
  this.executeCharTest('≢', ['nicht kongruent mit']);
  this.executeCharTest('≣', ['genau äquivalent mit']);
  this.executeCharTest('≤', ['kleiner oder gleich']);
  this.executeCharTest('≥', ['größer oder gleich']);
  this.executeCharTest('≦', ['kleiner als über gleich']);
  this.executeCharTest('≧', ['größer als über gleich']);
  this.executeCharTest('≨', ['kleiner als, aber nicht gleich']);
  this.executeCharTest('≩', ['größer als, aber nicht gleich']);
  this.executeCharTest('≪', ['viel kleiner als']);
  this.executeCharTest('≫', ['viel größer als']);
  this.executeCharTest('≬', ['zwischen']);
  this.executeCharTest('≭', ['nicht äquivalent mit']);
  this.executeCharTest('≮', ['nicht kleiner als']);
  this.executeCharTest('≯', ['nicht größer als']);
  this.executeCharTest('≰', ['weder kleiner als noch gleich']);
  this.executeCharTest('≱', ['weder größer als noch gleich']);
  this.executeCharTest('≲', ['kleiner als oder äquivalent']);
  this.executeCharTest('≳', ['größer als oder äquivalent']);
  this.executeCharTest('≴', ['weder kleiner als noch äquivalent']);
  this.executeCharTest('≵', ['weder größer als noch äquivalent']);
  this.executeCharTest('≶', ['kleiner oder größer als']);
  this.executeCharTest('≷', ['größer oder kleiner als']);
  this.executeCharTest('≸', ['weder kleiner noch größer als']);
  this.executeCharTest('≹', ['weder größer noch kleiner als']);
  this.executeCharTest('≺', ['vorangehend']);
  this.executeCharTest('≻', ['nachfolgend']);
  this.executeCharTest('≼', ['vorangehend oder gleich']);
  this.executeCharTest('≽', ['nachfolgend oder gleich']);
  this.executeCharTest('≾', ['vorangehend oder äquivalent']);
  this.executeCharTest('≿', ['nachfolgend oder äquivalent']);
  this.executeCharTest('⊀', ['nicht vorangehend']);
  this.executeCharTest('⊁', ['nicht nachfolgend']);
  this.executeCharTest('⊂', ['echte Teilmenge von']);
  this.executeCharTest('⊃', ['echte Obermenge von']);
  this.executeCharTest('⊄', ['keine echte Teilmenge von']);
  this.executeCharTest('⊅', ['kein echte Obermenge von']);
  this.executeCharTest('⊆', ['Teilmenge oder gleich']);
  this.executeCharTest('⊇', ['Obermenge oder gleich']);
  this.executeCharTest('⊈', ['weder Teilmenge noch gleich']);
  this.executeCharTest('⊉', ['weder Obermenge noch gleich']);
  this.executeCharTest('⊊', ['Teilmenge aber nicht gleich']);
  this.executeCharTest('⊋', ['Obermenge aber nicht gleich']);
  this.executeCharTest('⊌', ['Multimenge']);
  this.executeCharTest('⊍', ['Multimengenmultiplikation']);
  this.executeCharTest('⊎', ['Multimengenvereinigung']);
  this.executeCharTest('⊏', ['quadratisches Bild von']);
  this.executeCharTest('⊐', ['quadratisches Original von']);
  this.executeCharTest('⊑', ['quadratisches Bild oder gleich']);
  this.executeCharTest('⊒', ['quadratisches Original oder gleich']);
  this.executeCharTest('⊓', ['quadratische Schnittmenge']);
  this.executeCharTest('⊔', ['quadratische VereinigungTasse']);
  this.executeCharTest('⊕', ['eingekreistes Plus']);
  this.executeCharTest('⊖', ['eingekreistes Minus']);
  this.executeCharTest('⊗', ['eingekreiste Multiplikation']);
  this.executeCharTest('⊘', ['eingekreiste Division']);
  this.executeCharTest('⊙', ['eingekreister Punktoperator']);
  this.executeCharTest('⊚', ['eingekreister Ringoperator']);
  this.executeCharTest('⊛', ['eingekreister Sternoperator']);
  this.executeCharTest('⊜', ['eingekreistes Gleich']);
  this.executeCharTest('⊝', ['eingekreister Gedankenstrich']);
  this.executeCharTest('⊞', ['eingerahmtes Plus']);
  this.executeCharTest('⊟', ['eingerahmtes Minus']);
  this.executeCharTest('⊠', ['eingerahmte Multiplikation']);
  this.executeCharTest('⊡', ['eingerahmter Punktoperator']);
  this.executeCharTest('⊢', ['ergibt']);
  this.executeCharTest('⊣', ['ergibt nicht']);
  this.executeCharTest('⊤', ['senkrecht von']);
  this.executeCharTest('⊥', ['senkrecht auf']);
  this.executeCharTest('⊦', ['Behauptung']);
  this.executeCharTest('⊧', ['Model']);
  this.executeCharTest('⊨', ['wahr']);
  this.executeCharTest('⊩', ['erzwingen']);
  this.executeCharTest('⊪', ['dreifache vertikale Leiste mit rechtem Drehkreuz']);
  this.executeCharTest('⊫', ['doppelte vertikale Leiste mit doppeltem rechtem Drehkreuz']);
  this.executeCharTest('⊬', ['beweist nicht']);
  this.executeCharTest('⊭', ['nicht wahr']);
  this.executeCharTest('⊮', ['nicht erzwingen']);
  this.executeCharTest('⊯', ['negierte doppelte vertikale Leiste mit doppeltem rechten Drehkreuz']);
  this.executeCharTest('⊰', ['vorangehend in Relation']);
  this.executeCharTest('⊱', ['nachfolgend in Relation']);
  this.executeCharTest('⊲', ['normale Untergruppe']);
  this.executeCharTest('⊳', ['enthält normale Untergruppe']);
  this.executeCharTest('⊴', ['normale Untergruppe von oder gleich']);
  this.executeCharTest('⊵', ['enthält normale Untergruppe oder gleich']);
  this.executeCharTest('⊶', ['Original von']);
  this.executeCharTest('⊷', ['Bild von']);
  this.executeCharTest('⊸', ['Mehrfachzuordnung']);
  this.executeCharTest('⊹', ['hermitesch konjugierte Matrix']);
  this.executeCharTest('⊺', ['einschalten']);
  this.executeCharTest('⊻', ['Ausschließendes Oder']);
  this.executeCharTest('⊼', ['Nand verknüpft mit']);
  this.executeCharTest('⊽', ['Nor verknüpft mit']);
  this.executeCharTest('⊿', ['rechtwinkliges Dreieck']);
  this.executeCharTest('⋀', ['N-stufiges logisches Und']);
  this.executeCharTest('⋁', ['N-stufiges logisches Oder']);
  this.executeCharTest('⋂', ['N-stufiger Durchschnitt']);
  this.executeCharTest('⋃', ['N-stufige Vereinigung']);
  this.executeCharTest('⋄', ['Rautenoperator']);
  this.executeCharTest('⋅', ['mal']);
  this.executeCharTest('⋆', ['Sternoperator']);
  this.executeCharTest('⋇', ['Divisionsanzahl']);
  this.executeCharTest('⋈', ['Schleife']);
  this.executeCharTest('⋉', ['linkes halbdirektes Produkt']);
  this.executeCharTest('⋊', ['rechtes halbdirektes Produkt']);
  this.executeCharTest('⋋', ['linkes halbdirektes Produkt']);
  this.executeCharTest('⋌', ['rechtes halbdirektes Produkt']);
  this.executeCharTest('⋍', ['umgekehrte Tilde gleich']);
  this.executeCharTest('⋎', ['geschweiftes logisches Oder']);
  this.executeCharTest('⋏', ['geschweiftes logisches Und']);
  this.executeCharTest('⋐', ['doppelte Teilmenge']);
  this.executeCharTest('⋑', ['doppelte Obermenge']);
  this.executeCharTest('⋒', ['doppelter Durchschnitt']);
  this.executeCharTest('⋓', ['doppelte Vereinigung']);
  this.executeCharTest('⋔', ['echter Durchschnitt']);
  this.executeCharTest('⋕', ['gleich und parallel']);
  this.executeCharTest('⋖', ['kleiner als mit Punkt']);
  this.executeCharTest('⋗', ['größer als mit Punkt']);
  this.executeCharTest('⋘', ['sehr viel kleiner als']);
  this.executeCharTest('⋙', ['sehr viel größer als']);
  this.executeCharTest('⋚', ['kleiner als, gleich oder größer als']);
  this.executeCharTest('⋛', ['größer als, gleich oder kleiner als']);
  this.executeCharTest('⋜', ['gleich oder kleiner als']);
  this.executeCharTest('⋝', ['gleich oder größer als']);
  this.executeCharTest('⋞', ['gleich oder vorangehend']);
  this.executeCharTest('⋟', ['gleich oder nachfolgend']);
  this.executeCharTest('⋠', ['weder vorangehend oder gleich']);
  this.executeCharTest('⋡', ['weder nachfolgend oder gleich']);
  this.executeCharTest('⋢', ['kein quadratisches Bild oder gleich']);
  this.executeCharTest('⋣', ['kein quadratisches Original oder gleich']);
  this.executeCharTest('⋤', ['quadratisches Bild oder nicht gleich']);
  this.executeCharTest('⋥', ['quadratisches Original oder nicht gleich']);
  this.executeCharTest('⋦', ['kleiner als, aber nicht äquivalent']);
  this.executeCharTest('⋧', ['größer als, aber nicht äquivalent']);
  this.executeCharTest('⋨', ['vorangehend, aber nicht äquivalent']);
  this.executeCharTest('⋩', ['nachfolgend, aber nicht äquivalent']);
  this.executeCharTest('⋪', ['nicht normale Untergruppe von']);
  this.executeCharTest('⋫', ['enthält keine normale Untergruppe']);
  this.executeCharTest('⋬', ['keine normale Untergruppe von oder gleich']);
  this.executeCharTest('⋭', ['enthält nicht als normale Untergruppe oder gleich']);
  this.executeCharTest('⋮', ['Vertikale Ellipsis']);
  this.executeCharTest('⋯', ['Zentrierte horizontale Ellipse']);
  this.executeCharTest('⋰', ['Diagonale Ellipse unten links nach oben rechts']);
  this.executeCharTest('⋱', ['Diagonale Ellipse, oben links nach unten rechts']);
  this.executeCharTest('⋲', ['Element mit langem horizontalen Strich']);
  this.executeCharTest('⋳', ['Element mit vertikalem Strich am Ende des horizontalen Strichs']);
  this.executeCharTest('⋴', ['kleines Element mit vertikalem Strich am Ende des horizontalen Strichs']);
  this.executeCharTest('⋵', ['Element mit Punkt']);
  this.executeCharTest('⋶', ['Element mit Überstrich']);
  this.executeCharTest('⋷', ['kleines Element mit Überstrich']);
  this.executeCharTest('⋸', ['Element mit Unterstrich']);
  this.executeCharTest('⋹', ['Element mit 2 horizontalen Strichen']);
  this.executeCharTest('⋺', ['umgekehrtes Elementzeichen mit langem horizontalen Strich']);
  this.executeCharTest('⋻', ['umgekehrtes Elementzeichen mit vertikalem Strich am Ende des horizontalen Strichs']);
  this.executeCharTest('⋼', ['kleines umgekehrtes Elementzeichen mit vertikalem Strich am Ende des horizontalen Strichs']);
  this.executeCharTest('⋽', ['umgekehrtes Elementzeichen mit Überstrich']);
  this.executeCharTest('⋾', ['kleines umgekehrtes Elementzeichen mit Überstrich']);
  this.executeCharTest('⋿', ['Z-Notation-Bag-Mitgliedschaft']);
  this.executeCharTest('⌀', ['Durchmesser-Zeichen']);
  this.executeCharTest('⌂', ['Haus']);
  this.executeCharTest('⌅', ['Projektiv']);
  this.executeCharTest('⌆', ['Perspektive']);
  this.executeCharTest('⌇', ['Schlangenlinie']);
  this.executeCharTest('⌐', ['Umgekehrtes Nichtzeichen']);
  this.executeCharTest('⌑', ['Quadratische Raute']);
  this.executeCharTest('⌒', ['Bogen']);
  this.executeCharTest('⌓', ['Segment']);
  this.executeCharTest('⌔', ['Sektor']);
  this.executeCharTest('➕', ['Schweres Pluszeichen']);
  this.executeCharTest('➖', ['Schweres Minuszeichen']);
  this.executeCharTest('➗', ['Heavy Division Sign']);
  this.executeCharTest('➰', ['Curly Loop']);
  this.executeCharTest('➿', ['Doppelte geschweifte Schleife']);
  this.executeCharTest('⟁', ['Weißes Dreieck, das kleines weißes Dreieck enthält']);
  this.executeCharTest('⟂', ['Aufrecht']);
  this.executeCharTest('⟃', ['Subset öffnen']);
  this.executeCharTest('⟄', ['Superset öffnen']);
  this.executeCharTest('⟇', ['Oder mit innerem Punkt']);
  this.executeCharTest('⟈', ['Umgekehrter Schrägstrich Vorhergehender Teilsatz']);
  this.executeCharTest('⟉', ['Superset Vorgänger Schrägstrich']);
  this.executeCharTest('⟊', ['Vertikaler Balken mit horizontalem Hub']);
  this.executeCharTest('⟋', ['Mathematische aufsteigende Diagonale']);
  this.executeCharTest('⟌', ['Lange Abteilung']);
  this.executeCharTest('⟍', ['Mathematische fallende Diagonale']);
  this.executeCharTest('⟎', ['quadratisches und']);
  this.executeCharTest('⟏', ['quadratisches oder']);
  this.executeCharTest('⟐', ['Weißer Diamant mit zentriertem Punkt']);
  this.executeCharTest('⟑', ['Und mit Dot']);
  this.executeCharTest('⟒', ['Element der Öffnung nach oben']);
  this.executeCharTest('⟓', ['Untere rechte Ecke mit Punkt']);
  this.executeCharTest('⟔', ['Obere linke Ecke mit Punkt']);
  this.executeCharTest('⟕', ['Linke äußere Verbindung']);
  this.executeCharTest('⟖', ['rechter äußerer Join']);
  this.executeCharTest('⟗', ['Volle äußere Verbindung']);
  this.executeCharTest('⟘', ['Große Up Tack']);
  this.executeCharTest('⟙', ['Großes Down Tack']);
  this.executeCharTest('⟚', ['Linkes und rechtes doppeltes Drehkreuz']);
  this.executeCharTest('⟛', ['Linker und rechter Tack']);
  this.executeCharTest('⟜', ['Linke Multimap']);
  this.executeCharTest('⟝', ['Long Right Tack']);
  this.executeCharTest('⟞', ['Langer linker Tack']);
  this.executeCharTest('⟟', ['Up Tack mit Kreis oben']);
  this.executeCharTest('⟠', ['Raute durch horizontale Regel geteilt']);
  this.executeCharTest('⟡', ['Weißer konkavseitiger Diamant']);
  this.executeCharTest('⟢', ['Weißer konkavseitiger Diamant mit Zecke nach links']);
  this.executeCharTest('⟣', ['Weißer konkavseitiger Diamant mit Zecke nach rechts']);
  this.executeCharTest('⟤', ['Weißes Quadrat mit Zecke nach links']);
  this.executeCharTest('⟥', ['Weißes Quadrat mit Tick nach rechts']);
  this.executeCharTest('⤫', ['Steigende diagonale Kreuzung fallende Diagonale']);
  this.executeCharTest('⤬', ['Fallende diagonale Kreuzung steigende Diagonale']);
  this.executeCharTest('⦀', ['Dreifacher vertikaler Balkenbegrenzer']);
  this.executeCharTest('⦁', ['Z Notationspunkt']);
  this.executeCharTest('⦂', ['Z Notationstyp Doppelpunkt']);
  this.executeCharTest('⦙', ['Gepunkteter Zaun']);
  this.executeCharTest('⦚', ['Vertikale Zickzacklinie']);
  this.executeCharTest('⦰', ['Umgekehrter leerer Satz']);
  this.executeCharTest('⦱', ['Leeres Set mit Overbar']);
  this.executeCharTest('⦲', ['Leeres Set mit kleinem Kreis oben']);
  this.executeCharTest('⦵', ['Kreis mit horizontaler Leiste']);
  this.executeCharTest('⦶', ['circled vertical bar']);
  this.executeCharTest('⦷', ['eingekreiste Parallele']);
  this.executeCharTest('⦸', ['eingekreister umgekehrter Schrägstrich']);
  this.executeCharTest('⦹', ['eingekreistes Senkrecht']);
  this.executeCharTest('⦺', ['Kreis geteilt durch horizontale Leiste und obere Hälfte geteilt durch vertikale Leiste']);
  this.executeCharTest('⦻', ['Kreis mit überlagertem X']);
  this.executeCharTest('⦼', ['eingekreistes, gegen den Uhrzeigersinn gedrehtes Divisionszeichen']);
  this.executeCharTest('⦾', ['eingekreiste weiße Kugel']);
  this.executeCharTest('⦿', ['eingekreiste Kugel']);
  this.executeCharTest('⧀', ['eingekreist weniger als']);
  this.executeCharTest('⧁', ['eingekreist größer als']);
  this.executeCharTest('⧂', ['Kreis mit kleinem Kreis nach rechts']);
  this.executeCharTest('⧃', ['Kreis mit zwei horizontalen Strichen nach rechts']);
  this.executeCharTest('⧄', ['Quadrat mit Diagonale links unten nach rechts oben']);
  this.executeCharTest('⧅', ['Quadrat mit Diagonale links oben nach rechts unten']);
  this.executeCharTest('⧆', ['Quadrat Sternchen']);
  this.executeCharTest('⧇', ['Quadratischer kleiner Kreis']);
  this.executeCharTest('⧈', ['Doppelquadrat']);
  this.executeCharTest('⧉', ['Zwei verbundene Quadrate']);
  this.executeCharTest('⧊', ['Dreieck mit Punkt oben']);
  this.executeCharTest('⧋', ['Dreieck mit Unterleiste']);
  this.executeCharTest('⧌', ['S im Dreieck']);
  this.executeCharTest('⧍', ['Dreieck mit Serifen unten']);
  this.executeCharTest('⧎', ['Rechtes Dreieck über linkem Dreieck']);
  this.executeCharTest('⧏', ['Linkes Dreieck neben vertikaler Leiste']);
  this.executeCharTest('⧐', ['Vertikaler Balken neben dem rechten Dreieck']);
  this.executeCharTest('⧑', ['Fliege mit linker Hälfte schwarz']);
  this.executeCharTest('⧒', ['Fliege mit rechter Hälfte schwarz']);
  this.executeCharTest('⧓', ['Schwarze Fliege']);
  this.executeCharTest('⧔', ['Zeiten mit linker Hälfte schwarz']);
  this.executeCharTest('⧕', ['Mal mit rechter Hälfte Schwarz']);
  this.executeCharTest('⧖', ['Weiße Sanduhr']);
  this.executeCharTest('⧗', ['Schwarze Sanduhr']);
  this.executeCharTest('⧜', ['Unvollständige Unendlichkeit']);
  this.executeCharTest('⧝', ['Krawatte über Unendlichkeit']);
  this.executeCharTest('⧞', ['Unendlichkeit mit vertikaler Leiste negiert']);
  this.executeCharTest('⧟', ['Doppelter Multimap']);
  this.executeCharTest('⧠', ['Quadrat mit konturierter Kontur']);
  this.executeCharTest('⧡', ['Erhöht als']);
  this.executeCharTest('⧢', ['Produkt mischen']);
  this.executeCharTest('⧣', ['Gleichheitszeichen und geneigte Parallele']);
  this.executeCharTest('⧤', ['Gleichheitszeichen und schräge Parallele zu Tilde oben']);
  this.executeCharTest('⧥', ['Identisch und schräg parallel']);
  this.executeCharTest('⧦', ['Gleich Stark']);
  this.executeCharTest('⧧', ['Thermodynamisch']);
  this.executeCharTest('⧨', ['Abwärtszeigendes Dreieck mit linker Hälfte schwarz']);
  this.executeCharTest('⧩', ['Abwärtsdreieck mit rechter Hälfte schwarz']);
  this.executeCharTest('⧫', ['Schwarze Raute']);
  this.executeCharTest('⧮', ['Fehlergesperrtes weißes Quadrat']);
  this.executeCharTest('⧯', ['Fehlerfreies schwarzes Quadrat']);
  this.executeCharTest('⧰', ['Fehlergesperrter weißer Diamant']);
  this.executeCharTest('⧱', ['Error-Barred Black Diamond']);
  this.executeCharTest('⧲', ['Fehlergesperrter weißer Kreis']);
  this.executeCharTest('⧳', ['Fehlergesperrter schwarzer Kreis']);
  this.executeCharTest('⧴', ['rule delayed']);
  this.executeCharTest('⧵', ['Umgekehrter Schrägstrich Operator']);
  this.executeCharTest('⧶', ['Schrägstrich mit Overbar']);
  this.executeCharTest('⧷', ['Umgekehrter Schrägstrich mit horizontalem Hub']);
  this.executeCharTest('⧸', ['Großer Schrägstrich']);
  this.executeCharTest('⧹', ['Großer umgekehrter Schrägstrich']);
  this.executeCharTest('⧺', ['Doppel plus']);
  this.executeCharTest('⧻', ['Triple Plus']);
  this.executeCharTest('⧾', ['Winzig']);
  this.executeCharTest('⧿', ['Miny']);
  this.executeCharTest('⨀', ['N-Ary Circled-Punkt-Operator']);
  this.executeCharTest('⨁', ['N-Ary Circled Plus Operator']);
  this.executeCharTest('⨂', ['N-Ary Circled-Times-Operator']);
  this.executeCharTest('⨃', ['N-Ary Union-Operator mit Punkt']);
  this.executeCharTest('⨄', ['N-Ary Union-Operator mit Plus']);
  this.executeCharTest('⨅', ['N-Ary Square-Kreuzungsoperator']);
  this.executeCharTest('⨆', ['N-Ary Square Union-Betreiber']);
  this.executeCharTest('⨇', ['Zwei logische und Operator']);
  this.executeCharTest('⨈', ['Zwei logisch oder Operator']);
  this.executeCharTest('⨉', ['N-Ary Times-Operator']);
  this.executeCharTest('⨊', ['Modulo Zwei Summe']);
  this.executeCharTest('⨋', ['Summation mit Integral']);
  this.executeCharTest('⨌', ['Vierfach-Integral-Operator']);
  this.executeCharTest('⨍', ['Finite Part Integral']);
  this.executeCharTest('⨎', ['Integral mit Doppelhub']);
  this.executeCharTest('⨏', ['Integraler Durchschnitt mit Schrägstrich']);
  this.executeCharTest('⨐', ['Zirkulationsfunktion']);
  this.executeCharTest('⨑', ['Integration gegen den Uhrzeigersinn']);
  this.executeCharTest('⨒', ['Linienintegration mit rechteckigem Pfad um die Pole']);
  this.executeCharTest('⨓', ['Linienintegration mit halbkreisförmigem Pfad um den Pol']);
  this.executeCharTest('⨔', ['Leitungsintegration ohne Pole']);
  this.executeCharTest('⨕', ['Integral um einen Punktoperator']);
  this.executeCharTest('⨖', ['Quaternion Integral Operator']);
  this.executeCharTest('⨘', ['Integriert mit Times Sign']);
  this.executeCharTest('⨙', ['Integral mit der Kreuzung']);
  this.executeCharTest('⨚', ['Integral mit Union']);
  this.executeCharTest('⨛', ['Integral mit Overbar']);
  this.executeCharTest('⨜', ['Integral mit Underbar']);
  this.executeCharTest('⨝', ['Beitreten']);
  this.executeCharTest('⨞', ['Großes linkes Dreieckbediener']);
  this.executeCharTest('⨟', ['Z-Notationsschema-Zusammensetzung']);
  this.executeCharTest('⨠', ['Z-Notationsschema-Piping']);
  this.executeCharTest('⨡', ['Z-Notationsschema-Projektion']);
  this.executeCharTest('⨢', ['Pluszeichen mit kleinem Kreis oben']);
  this.executeCharTest('⨣', ['Pluszeichen mit Zirkumflex-Akzent oben']);
  this.executeCharTest('⨤', ['Pluszeichen mit Tilde oben']);
  this.executeCharTest('⨥', ['Pluszeichen mit Punkt unten']);
  this.executeCharTest('⨦', ['Pluszeichen mit Tilde unter']);
  this.executeCharTest('⨧', ['Pluszeichen mit Index Zwei']);
  this.executeCharTest('⨨', ['Pluszeichen mit schwarzem Dreieck']);
  this.executeCharTest('⨩', ['Minuszeichen mit Komma oben']);
  this.executeCharTest('⨪', ['Minuszeichen mit Punkt unten']);
  this.executeCharTest('⨫', ['Minuszeichen mit fallenden Punkten']);
  this.executeCharTest('⨬', ['Minuszeichen mit steigenden Punkten']);
  this.executeCharTest('⨭', ['Pluszeichen Im linken Halbkreis']);
  this.executeCharTest('⨮', ['Pluszeichen Im rechten Halbkreis']);
  this.executeCharTest('⨯', ['Vektor- oder Kreuzprodukt']);
  this.executeCharTest('⨰', ['Multiplikationszeichen mit Punkt oben']);
  this.executeCharTest('⨱', ['Multiplikationszeichen mit Unterleiste']);
  this.executeCharTest('⨲', ['Semidirektprodukt mit geschlossenem Boden']);
  this.executeCharTest('⨳', ['smash product']);
  this.executeCharTest('⨴', ['Multiplikationszeichen im linken Halbkreis']);
  this.executeCharTest('⨵', ['Multiplikationszeichen im rechten Halbkreis']);
  this.executeCharTest('⨶', ['eingekreistes Multiplikationszeichen mit Circumflex-Akzent']);
  this.executeCharTest('⨷', ['Multiplikationszeichen im doppelten Kreis']);
  this.executeCharTest('⨸', ['circled division sign']);
  this.executeCharTest('⨹', ['Pluszeichen im Dreieck']);
  this.executeCharTest('⨺', ['Minuszeichen im Dreieck']);
  this.executeCharTest('⨻', ['Multiplikationszeichen im Dreieck']);
  this.executeCharTest('⨼', ['Innenprodukt']);
  this.executeCharTest('⨽', ['Produkt für den rechten Innenraum']);
  this.executeCharTest('⨾', ['Z-Notation relationaler Aufbau']);
  this.executeCharTest('⨿', ['Verschmelzung oder Koprodukt']);
  this.executeCharTest('⩀', ['Schnittpunkt mit Punkt']);
  this.executeCharTest('⩁', ['Union mit Minuszeichen']);
  this.executeCharTest('⩂', ['Union mit Overbar']);
  this.executeCharTest('⩃', ['Kreuzung mit Overbar']);
  this.executeCharTest('⩄', ['Überschneidung mit logischem und']);
  this.executeCharTest('⩅', ['Vereinigung mit logischem Or']);
  this.executeCharTest('⩆', ['Vereinigung über dem Schnittpunkt']);
  this.executeCharTest('⩇', ['Schnittpunkt über Union']);
  this.executeCharTest('⩈', ['Vereinigung über Stab über Kreuzung']);
  this.executeCharTest('⩉', ['Schnittpunkt oberhalb der Stange oberhalb der Union']);
  this.executeCharTest('⩊', ['Union daneben und mit Union verbunden']);
  this.executeCharTest('⩋', ['Kreuzung neben und mit Kreuzung verbunden']);
  this.executeCharTest('⩌', ['Geschlossene Vereinigung mit Serifen']);
  this.executeCharTest('⩍', ['Geschlossener Schnittpunkt mit Serifen']);
  this.executeCharTest('⩎', ['Doppelter Quadratschnitt']);
  this.executeCharTest('⩏', ['Double Square Union']);
  this.executeCharTest('⩐', ['Closed Union mit Serifen und Smash-Produkten']);
  this.executeCharTest('⩑', ['Logisch und mit Punkt oben']);
  this.executeCharTest('⩒', ['Logisch oder mit Punkt oben']);
  this.executeCharTest('⩓', ['double logical and']);
  this.executeCharTest('⩔', ['double logical or']);
  this.executeCharTest('⩕', ['Zwei durchschneiden logisch und']);
  this.executeCharTest('⩖', ['Zwei sich überschneidende logische Oder']);
  this.executeCharTest('⩗', ['Abfallend groß oder']);
  this.executeCharTest('⩘', ['Abfallend groß und']);
  this.executeCharTest('⩙', ['Logisch oder Überlappend Logisch Und']);
  this.executeCharTest('⩚', ['Logisch und mit Middle Stem']);
  this.executeCharTest('⩛', ['Logisch oder mit Middle Stem']);
  this.executeCharTest('⩜', ['Logisch und mit Horizontalstrich']);
  this.executeCharTest('⩝', ['Logisch oder mit Horizontalstrich']);
  this.executeCharTest('⩞', ['Logisch und mit Double Overbar']);
  this.executeCharTest('⩟', ['Logisch und mit Underbar']);
  this.executeCharTest('⩠', ['Logisch und mit Double Underbar']);
  this.executeCharTest('⩡', ['kleines Vee mit Underbar']);
  this.executeCharTest('⩢', ['Logisch oder mit Double Overbar']);
  this.executeCharTest('⩣', ['Logisch oder mit doppelter Unterleiste']);
  this.executeCharTest('⩤', ['Z-Notation Domain Antirestriction']);
  this.executeCharTest('⩥', ['Z Notationsbereich Antirestriction']);
  this.executeCharTest('⩦', ['Gleichheitszeichen mit Punkt unten']);
  this.executeCharTest('⩧', ['Identisch mit dem obigen Punkt']);
  this.executeCharTest('⩨', ['Dreifacher Horizontalbalken mit doppeltem vertikalem Hub']);
  this.executeCharTest('⩩', ['Dreifacher Horizontalbalken mit dreifachem vertikalem Hub']);
  this.executeCharTest('⩪', ['Tilde-Operator mit Punkt oben']);
  this.executeCharTest('⩫', ['Tilde-Operator mit steigenden Punkten']);
  this.executeCharTest('⩬', ['Ähnlich Minus Ähnlich']);
  this.executeCharTest('⩭', ['Kongruent mit Punkt oben']);
  this.executeCharTest('⩮', ['Entspricht Asterisk']);
  this.executeCharTest('⩯', ['Fast gleichwertig mit dem Circumflex Accent']);
  this.executeCharTest('⩰', ['Ungefähr gleich oder gleich zu']);
  this.executeCharTest('⩱', ['Gleichheitszeichen über Pluszeichen']);
  this.executeCharTest('⩲', ['Pluszeichen über Gleichheitszeichen']);
  this.executeCharTest('⩳', ['Gleichheitszeichen über Tilde-Operator']);
  this.executeCharTest('⩴', ['Doppelpunkt gleich']);
  this.executeCharTest('⩵', ['double equal']);
  this.executeCharTest('⩶', ['Drei aufeinander folgende Gleichheitszeichen']);
  this.executeCharTest('⩷', ['Gleichheitszeichen mit zwei Punkten oben und zwei Punkten unten']);
  this.executeCharTest('⩸', ['Gleichwertig mit vier Punkten oben']);
  this.executeCharTest('⩹', ['Weniger als mit Circle Inside']);
  this.executeCharTest('⩺', ['Größer als mit Kreis nach innen']);
  this.executeCharTest('⩻', ['Weniger als mit Fragezeichen oben']);
  this.executeCharTest('⩼', ['Größer als mit Fragezeichen oben']);
  this.executeCharTest('⩽', ['Weniger als oder schräg gleich']);
  this.executeCharTest('⩾', ['Größer als oder schräg gleich']);
  this.executeCharTest('⩿', ['Weniger als oder schräg gleich mit Punkt nach innen']);
  this.executeCharTest('⪀', ['Größer als oder schräg gleich mit Punkt nach innen']);
  this.executeCharTest('⪁', ['Weniger als oder schräg gleich mit Punkt oben']);
  this.executeCharTest('⪂', ['Größer als oder schräg gleich mit Punkt oben']);
  this.executeCharTest('⪃', ['Weniger als oder schräg gleich mit Punkt oben rechts']);
  this.executeCharTest('⪄', ['Größer als oder schräg gleich mit Punkt oben links']);
  this.executeCharTest('⪅', ['Weniger als oder ungefähr']);
  this.executeCharTest('⪆', ['Größer als oder ungefähr']);
  this.executeCharTest('⪇', ['Kleiner als aber nicht gleich']);
  this.executeCharTest('⪈', ['Größer als aber nicht gleich']);
  this.executeCharTest('⪉', ['Kleiner als aber nicht ungefähr gleich']);
  this.executeCharTest('⪊', ['Größer als aber nicht ungefähr gleich']);
  this.executeCharTest('⪋', ['Weniger als aber größer als oben']);
  this.executeCharTest('⪌', ['Größer als aber weniger als unten und größer als oben']);
  this.executeCharTest('⪍', ['Weniger als oben ähnlich oder gleich']);
  this.executeCharTest('⪎', ['Größer als oben ähnlich oder gleich']);
  this.executeCharTest('⪏', ['Weniger als oben ähnlich oben größer als']);
  this.executeCharTest('⪐', ['Größer als oben Ähnlich oben']);
  this.executeCharTest('⪑', ['less than greater than or equal to']);
  this.executeCharTest('⪒', ['greater than less than or equal to']);
  this.executeCharTest('⪓', ['Weniger als oben schräg gleich oben Größer als oben schräg gleich']);
  this.executeCharTest('⪔', ['Größer als oben schräg gleich oben kleiner als oben schräg gleich groß']);
  this.executeCharTest('⪕', ['Schräg gleich oder kleiner als']);
  this.executeCharTest('⪖', ['Schräg gleich oder größer als']);
  this.executeCharTest('⪗', ['Schräg gleich oder kleiner als mit innenliegendem Punkt']);
  this.executeCharTest('⪘', ['Schräg gleich oder größer als mit Punkt nach innen']);
  this.executeCharTest('⪙', ['Gleich oder kleiner als']);
  this.executeCharTest('⪚', ['Gleich oder größer als']);
  this.executeCharTest('⪛', ['Doppelte Linie schräg gleich oder kleiner als']);
  this.executeCharTest('⪜', ['Doppelte Linie schräg gleich oder größer als']);
  this.executeCharTest('⪝', ['Äquivalent oder kleiner als']);
  this.executeCharTest('⪞', ['Ähnlich oder größer als']);
  this.executeCharTest('⪟', ['Ähnlich oben Weniger als Gleiches Gleichheitszeichen']);
  this.executeCharTest('⪠', ['Ähnlich oben größer als oben Gleichheitszeichen']);
  this.executeCharTest('⪡', ['Verschachteltes kleiner als']);
  this.executeCharTest('⪢', ['Verschachteltes größer als']);
  this.executeCharTest('⪣', ['Doppelt verschachtelt, weniger als mit Unterleiste']);
  this.executeCharTest('⪤', ['less than greater than overlay']);
  this.executeCharTest('⪥', ['Größer als weniger als']);
  this.executeCharTest('⪦', ['Weniger als durch Kurve geschlossen']);
  this.executeCharTest('⪧', ['Größer als durch Kurve geschlossen']);
  this.executeCharTest('⪨', ['Weniger als dann geschlossen durch Kurve oberhalb der gleichen Neigung']);
  this.executeCharTest('⪩', ['Größer als geschlossen durch Kurve oberhalb der gleichen Neigung']);
  this.executeCharTest('⪪', ['kleiner als']);
  this.executeCharTest('⪫', ['Größer als']);
  this.executeCharTest('⪬', ['kleiner als oder gleich']);
  this.executeCharTest('⪭', ['Größer als oder gleich']);
  this.executeCharTest('⪮', ['difference between (variant']);
  this.executeCharTest('⪯', ['Stellt über dem einzeiligen Gleichheitszeichen ein']);
  this.executeCharTest('⪰', ['Erfolg über dem einzeiligen Gleichheitszeichen']);
  this.executeCharTest('⪱', ['Vorangehende Single-Line ist nicht gleich']);
  this.executeCharTest('⪲', ['Erfolg über Single-Line nicht gleich']);
  this.executeCharTest('⪳', ['Vorangegangenes Gleichheitszeichen']);
  this.executeCharTest('⪴', ['Erfolgreich über Gleichheitszeichen']);
  this.executeCharTest('⪵', ['precedes but not equal to']);
  this.executeCharTest('⪶', ['succeeds but not equal to']);
  this.executeCharTest('⪷', ['Vorangegangenes fast gleich zu']);
  this.executeCharTest('⪸', ['Erreicht über fast gleich viel']);
  this.executeCharTest('⪹', ['Vorangegangene nicht annähernd gleich']);
  this.executeCharTest('⪺', ['Erreicht oben nicht annähernd gleich']);
  this.executeCharTest('⪻', ['Doppelter Vorgänger']);
  this.executeCharTest('⪼', ['Doppelter Erfolg']);
  this.executeCharTest('⪽', ['Teilmenge mit Punkt']);
  this.executeCharTest('⪾', ['Superset mit Punkt']);
  this.executeCharTest('⪿', ['Teilmenge mit Pluszeichen unten']);
  this.executeCharTest('⫀', ['Superset mit Pluszeichen unten']);
  this.executeCharTest('⫁', ['Teilmenge mit Multiplikationszeichen unten']);
  this.executeCharTest('⫂', ['Superset mit Multiplikationszeichen unten']);
  this.executeCharTest('⫃', ['Teilmenge oder gleich mit dem obigen Punkt']);
  this.executeCharTest('⫄', ['Superset von oder gleich mit Punkt oben']);
  this.executeCharTest('⫅', ['Teilmenge des obigen Gleichheitszeichens']);
  this.executeCharTest('⫆', ['Superset des obigen Gleichheitszeichens']);
  this.executeCharTest('⫇', ['approximate subset of']);
  this.executeCharTest('⫈', ['approximate superset of']);
  this.executeCharTest('⫉', ['Teilmenge von oben fast gleich']);
  this.executeCharTest('⫊', ['Superset von oben fast gleichwertig']);
  this.executeCharTest('⫋', ['Teilmenge von oben nicht gleich']);
  this.executeCharTest('⫌', ['Superset von oben nicht gleich']);
  this.executeCharTest('⫍', ['Platz links Feldbetreiber geöffnet']);
  this.executeCharTest('⫎', ['Rechteckige Box mit offener Box']);
  this.executeCharTest('⫏', ['Geschlossener Teilsatz']);
  this.executeCharTest('⫐', ['Superset geschlossen']);
  this.executeCharTest('⫑', ['Geschlossene Untermenge oder gleich']);
  this.executeCharTest('⫒', ['Superset geschlossen oder gleich']);
  this.executeCharTest('⫓', ['subset over superset']);
  this.executeCharTest('⫔', ['superset over subset']);
  this.executeCharTest('⫕', ['subset over subset']);
  this.executeCharTest('⫖', ['superset over superset']);
  this.executeCharTest('⫗', ['Superset neben dem Subset']);
  this.executeCharTest('⫘', ['Superset Neben und Joined von Dash mit Subset']);
  this.executeCharTest('⫙', ['Element der Öffnung nach unten']);
  this.executeCharTest('⫚', ['Heugabel mit T-Stück']);
  this.executeCharTest('⫛', ['Transversalschnitt']);
  this.executeCharTest('⫝̸', ['Gabelung']);
  this.executeCharTest('⫝', ['Nicht Gabeln']);
  this.executeCharTest('⫞', ['Kurzer Linker Tack']);
  this.executeCharTest('⫟', ['Kurzer Down Tack']);
  this.executeCharTest('⫠', ['Short Up Tack']);
  this.executeCharTest('⫡', ['Rechtwinklig zu S']);
  this.executeCharTest('⫢', ['Vertikales Dreifach-Drehkreuz']);
  this.executeCharTest('⫣', ['Doppelter vertikaler Balken linkes Drehkreuz']);
  this.executeCharTest('⫤', ['double left turnstile vertical bar']);
  this.executeCharTest('⫥', ['Doppelter vertikaler Balken Doppelter linker Drehkreuz']);
  this.executeCharTest('⫦', ['Long Dash von Left Member von Double Vertical']);
  this.executeCharTest('⫧', ['Short Down Tack mit Overbar']);
  this.executeCharTest('⫨', ['perpendicular over bar']);
  this.executeCharTest('⫩', ['Short Up Tack Über Short Down Tack']);
  this.executeCharTest('⫪', ['Double Down Tack']);
  this.executeCharTest('⫫', ['Verdoppeln Sie Tack']);
  this.executeCharTest('⫬', ['Doppelstrich nicht unterschreiben']);
  this.executeCharTest('⫭', ['Umgekehrter Doppelstrich nicht unterschrieben']);
  this.executeCharTest('⫮', ['Teilt sich nicht mit umgekehrten Negationsschrägstrich']);
  this.executeCharTest('⫯', ['Vertikale Linie mit Kreis oben']);
  this.executeCharTest('⫰', ['Vertikale Linie mit Kreis unten']);
  this.executeCharTest('⫱', ['Down Tack mit Kreis unten']);
  this.executeCharTest('⫲', ['Parallel zum horizontalen Anschlag']);
  this.executeCharTest('⫳', ['Parallel zu Tilde Operator']);
  this.executeCharTest('⫴', ['Dreifache vertikale Balken-Binärbeziehung']);
  this.executeCharTest('⫵', ['Dreifacher vertikaler Strich mit horizontalem Hub']);
  this.executeCharTest('⫶', ['Triple Colon Operator']);
  this.executeCharTest('⫷', ['Dreifach verschachtelt weniger als']);
  this.executeCharTest('⫸', ['Dreifach verschachteltes Größeres als']);
  this.executeCharTest('⫹', ['Doppellinie schräg, weniger als oder gleich']);
  this.executeCharTest('⫺', ['Doppelte Linie schräg größer als oder gleich']);
  this.executeCharTest('⫻', ['Dreifache Schrägstrich-Binärbeziehung']);
  this.executeCharTest('⫼', ['Großer dreifacher vertikaler Barbediener']);
  this.executeCharTest('⫽', ['Doppelter Schrägstrich-Operator']);
  this.executeCharTest('⫾', ['Weiße vertikale Leiste']);
  this.executeCharTest('⫿', ['N-Ary White Vertical Bar']);
  this.executeCharTest('〜', ['Wave Dash']);
  this.executeCharTest('︐', ['Präsentationsformular für vertikales Komma']);
  this.executeCharTest('︓', ['Präsentationsformular für vertikalen Doppelpunkt']);
  this.executeCharTest('︔', ['Präsentationsformular für vertikales Semikolon']);
  this.executeCharTest('︕', ['Präsentationsformular für vertikales Ausrufezeichen']);
  this.executeCharTest('︖', ['Präsentationsformular für vertikales Fragezeichen']);
  this.executeCharTest('︙', ['Präsentationsformular für vertikale horizontale Ellipsen']);
  this.executeCharTest('︰', ['Präsentationsformular für vertikalen Zwei-Punkt-Leader']);
  this.executeCharTest('︱', ['Präsentationsformular für Vertical Em Dash']);
  this.executeCharTest('︲', ['Präsentationsformular für Vertical En Dash']);
  this.executeCharTest('︳', ['Präsentationsformular für Vertical Low Line']);
  this.executeCharTest('︴', ['Präsentationsformular für Vertical Wavy Low Line']);
  this.executeCharTest('﹅', ['Sesampunkt']);
  this.executeCharTest('﹆', ['Weißer Sesam Punkt']);
  this.executeCharTest('﹉', ['Gestrichelte Überlänge']);
  this.executeCharTest('﹊', ['Centreline Overline']);
  this.executeCharTest('﹋', ['Wellenförmige Überlänge']);
  this.executeCharTest('﹌', ['Doppelte Wellenlinie']);
  this.executeCharTest('﹍', ['Gestrichelte Low Line']);
  this.executeCharTest('﹎', ['Mittellinie Low Line']);
  this.executeCharTest('﹏', ['Wellenförmige Low Line']);
  this.executeCharTest('﹐', ['kleines Komma']);
  this.executeCharTest('﹒', ['kleiner Punkt']);
  this.executeCharTest('﹔', ['kleines Semikolon']);
  this.executeCharTest('﹕', ['kleiner Doppelpunkt']);
  this.executeCharTest('﹖', ['kleines Fragezeichen']);
  this.executeCharTest('﹗', ['kleines Ausrufezeichen']);
  this.executeCharTest('﹘', ['kleiner Em Dash']);
  this.executeCharTest('﹟', ['kleines Nummernzeichen']);
  this.executeCharTest('﹠', ['kleines kaufmännisches']);
  this.executeCharTest('﹡', ['kleines Sternchen']);
  this.executeCharTest('﹢', ['kleines Pluszeichen']);
  this.executeCharTest('﹣', ['kleiner Bindestrich-Minus']);
  this.executeCharTest('﹤', ['kleines weniger als Zeichen']);
  this.executeCharTest('﹥', ['kleines Größeres als Zeichen']);
  this.executeCharTest('﹦', ['kleines Gleichheitszeichen']);
  this.executeCharTest('﹨', ['kleiner umgekehrter Schrägstrich']);
  this.executeCharTest('﹩', ['kleines Dollarzeichen']);
  this.executeCharTest('﹪', ['kleines Prozentzeichen']);
  this.executeCharTest('﹫', ['kleine kommerzielle bei']);
  this.executeCharTest('！', ['vollbreites Ausrufezeichen']);
  this.executeCharTest('＂', ['vollbreites Anführungszeichen']);
  this.executeCharTest('＃', ['vollbreites Nummernzeichen']);
  this.executeCharTest('＄', ['vollbreites Dollarzeichen']);
  this.executeCharTest('％', ['vollbreites Prozentzeichen']);
  this.executeCharTest('＆', ['vollbreites kaufmännisches und']);
  this.executeCharTest('＇', ['vollbreites Apostroph']);
  this.executeCharTest('＊', ['vollbreiter Stern']);
  this.executeCharTest('＋', ['vollbreites Plus']);
  this.executeCharTest('，', ['vollbreites Komma']);
  this.executeCharTest('－', ['vollbreites Minus']);
  this.executeCharTest('．', ['vollbreiter Punkt']);
  this.executeCharTest('／', ['Schrägstrich mit voller Breite']);
  this.executeCharTest('：', ['vollbreiter Doppelpunkt']);
  this.executeCharTest('；', ['vollbreites Semikolon']);
  this.executeCharTest('＜', ['Weniger als das gesamte Zeichen']);
  this.executeCharTest('＝', ['vollbreites Gleichspannungszeichen']);
  this.executeCharTest('＞', ['Fullwidth Mehr als Zeichen']);
  this.executeCharTest('？', ['vollbreites Fragezeichen']);
  this.executeCharTest('＠', ['Fullwidth Commercial at']);
  this.executeCharTest('＼', ['Umgekehrter Schrägstrich mit voller Breite']);
  this.executeCharTest('＾', ['Circumflex-Akzent mit voller Breite']);
  this.executeCharTest('＿', ['vollbreites Low Line']);
  this.executeCharTest('｀', ['vollbreiter Gravis Akzent']);
  this.executeCharTest('｜', ['vollbreites Vertikale Linie']);
  this.executeCharTest('～', ['vollbreite Tilde']);
  this.executeCharTest('￠', ['vollbreites Cent-Zeichen']);
  this.executeCharTest('￡', ['vollbreites Pfundzeichen']);
  this.executeCharTest('￢', ['vollbreite nicht Symbol']);
  this.executeCharTest('￣', ['vollbreiter Überstrich']);
  this.executeCharTest('￤', ['vollbreite gestrichelte Linie']);
  this.executeCharTest('￥', ['vollbreites Yen-Zeichen']);
  this.executeCharTest('￦', ['vollbreites Won-Zeichen']);
  this.executeCharTest('￨', ['Halbbreite bildet leicht vertikal']);
  this.executeCharTest('￭', ['Schwarzes Quadrat mit halber Breite']);
  this.executeCharTest('￮', ['Weißer Kreis mit halber Breite']);
  this.executeCharTest(' ', ['Leerzeichen']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('­', ['weicher Trennstrich']);
  this.executeCharTest(' ', ['En Quad']);
  this.executeCharTest(' ', ['Em Quad']);
  this.executeCharTest(' ', ['En Space']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', ['Raum für drei Per-Em']);
  this.executeCharTest(' ', ['Raum für vier pro Em']);
  this.executeCharTest(' ', ['Six-Per-Em Space']);
  this.executeCharTest(' ', ['Raum darstellen']);
  this.executeCharTest(' ', ['Interpunktionsraum']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('​', ['​']);
  this.executeCharTest('‌', ['Nullbreite ohne Joiner']);
  this.executeCharTest('‍', ['Zero Width Joiner']);
  this.executeCharTest('‎', ['Markierung von links nach rechts']);
  this.executeCharTest('‏', ['Markierung von rechts nach links']);
  this.executeCharTest(' ', ['Trennzeichen']);
  this.executeCharTest(' ', ['Absatztrennzeichen']);
  this.executeCharTest('‪', ['Einbetten von links nach rechts']);
  this.executeCharTest('‫', ['Einbetten von rechts nach links']);
  this.executeCharTest('‬', ['Pop Richtungsformatierung']);
  this.executeCharTest('‭', ['Von links nach rechts überschreiben']);
  this.executeCharTest('‮', ['Von rechts nach links überschreiben']);
  this.executeCharTest(' ', ['Schmaler No-Break-Bereich']);
  this.executeCharTest(' ', [' ']);
  this.executeCharTest('⁠', ['Word Joiner']);
  this.executeCharTest('⁡', ['von']);
  this.executeCharTest('⁢', [' ']);
  this.executeCharTest('⁣', ['⁣']);
  this.executeCharTest('⁤', ['Unsichtbares Plus']);
  this.executeCharTest('⁪', ['Symmetrisches Austauschen verhindern']);
  this.executeCharTest('⁫', ['Aktivieren Sie das symmetrische Austauschen']);
  this.executeCharTest('⁮', ['Nationale Ziffernformen']);
  this.executeCharTest('⁯', ['Nominale Ziffernformen']);
  this.executeCharTest('﻿', ['Nullbreite Leerzeichen']);
  this.executeCharTest('￹', ['Interlinearer Anmerkungsanker']);
  this.executeCharTest('￺', ['Separator für interlineare Anmerkungen']);
  this.executeCharTest('￻', ['Interlinear Annotation Terminator']);
  this.executeCharTest('⏨', ['Dezimalexponentensymbol']);
  this.executeCharTest('★', ['Schwarzer Stern']);
  this.executeCharTest('☆', ['weißer Stern']);
  this.executeCharTest('⚪', ['Mittlerer weißer Kreis']);
  this.executeCharTest('⚫', ['Mittlerer schwarzer Kreis']);
  this.executeCharTest('✅', ['Weißes schweres Häkchen']);
  this.executeCharTest('✓', ['Häkchen']);
  this.executeCharTest('✔', ['Schweres Häkchen']);
  this.executeCharTest('✕', ['Multiplikation X']);
  this.executeCharTest('✖', ['Schwere Multiplikation X']);
  this.executeCharTest('✗', ['Stimmzettel X']);
  this.executeCharTest('✘', ['Schwerer Stimmzettel X']);
  this.executeCharTest('✛', ['Center Cross öffnen']);
  this.executeCharTest('✜', ['Schweres offenes Mittelkreuz']);
  this.executeCharTest('✠', ['Malteserkreuz']);
  this.executeCharTest('✡', ['Davidstern']);
  this.executeCharTest('✢', ['Vier Teardrop-Spoked Asterisk']);
  this.executeCharTest('✣', ['Vier Ballon-Speichen-Sternchen']);
  this.executeCharTest('✤', ['Schwere Vier-Ballon-Speichen-Sternchen']);
  this.executeCharTest('✥', ['Vier Club-Spoked Asterisk']);
  this.executeCharTest('✦', ['Schwarzer vierzackiger Stern']);
  this.executeCharTest('✧', ['Weißer vierzackiger Stern']);
  this.executeCharTest('✨', ['Funkelt']);
  this.executeCharTest('✩', ['Stress umrissener weißer Stern']);
  this.executeCharTest('✪', ['Eingekreister weißer Stern']);
  this.executeCharTest('✫', ['Open Center Black Star']);
  this.executeCharTest('✬', ['Schwarzer Center White Star']);
  this.executeCharTest('✭', ['Schwarzer Stern umrissen']);
  this.executeCharTest('✮', ['Schwerer umrissener schwarzer Stern']);
  this.executeCharTest('✯', ['Sternrad Stern']);
  this.executeCharTest('✰', ['Beschatteter weißer Stern']);
  this.executeCharTest('✱', ['Schwerer Stern']);
  this.executeCharTest('✲', ['Öffnen Sie Center Asterisk']);
  this.executeCharTest('✳', ['Acht Speichen-Sternchen']);
  this.executeCharTest('✴', ['Achtzackiger schwarzer Stern']);
  this.executeCharTest('✵', ['Achtzackiger Sternradstern']);
  this.executeCharTest('✶', ['Sechszackiger schwarzer Stern']);
  this.executeCharTest('✹', ['Zwölf schwarzer Stern']);
  this.executeCharTest('✺', ['Sechzehn Spitzen Sternchen']);
  this.executeCharTest('✻', ['Teardrop-Spoked Sternchen']);
  this.executeCharTest('✼', ['Open Center Teardrop-Spoked Sternchen']);
  this.executeCharTest('✽', ['Schwerer Tropfen-Speichen-Sternchen']);
  this.executeCharTest('✾', ['Sechs Petalled Schwarzweiss-Florette']);
  this.executeCharTest('✿', ['Schwarze Florette']);
  this.executeCharTest('❀', ['Weiße Florette']);
  this.executeCharTest('❁', ['Acht Petalled umrissene schwarze Florette']);
  this.executeCharTest('❂', ['Eingekreistes offenes Zentrum Achtstern']);
  this.executeCharTest('❃', ['Schweres, tropfenbesetztes Nadelrad-Sternchen']);
  this.executeCharTest('❄', ['Schneeflocke']);
  this.executeCharTest('❅', ['Feste Trifoliate-Schneeflocke']);
  this.executeCharTest('❆', ['Schwere Chevron-Schneeflocke']);
  this.executeCharTest('❇', ['Funkeln']);
  this.executeCharTest('❈', ['Schweres Funkeln']);
  this.executeCharTest('❉', ['Ballon-Speichen-Sternchen']);
  this.executeCharTest('❊', ['Acht Teardrop-Spoked Propeller Sternchen']);
  this.executeCharTest('❋', ['Schwere Acht Teardrop-Spoked Propeller Sternchen']);
  this.executeCharTest('❌', ['Cross Mark']);
  this.executeCharTest('❍', ['Beschatteter weißer Kreis']);
};


sre.DefaultCharGermanTest.prototype.testDefaultFunctions = function() {
  this.executeCharTest('deg', ['Grad']);
  this.executeCharTest('det', ['Determinante von']);
  this.executeCharTest('dim', ['Dimension']);
  this.executeCharTest('hom', ['Homomorphismus']);
  this.executeCharTest('Hom', ['Homomorphismus']);
  this.executeCharTest('ker', ['Kern']);
  this.executeCharTest('Tr', ['Spur']);
  this.executeCharTest('tr', ['Spur']);
  this.executeCharTest('log', ['Logarithmus']);
  this.executeCharTest('ln', ['natürlicher Logarithmus']);
  this.executeCharTest('lg', ['Logarithmus zur Basis 10']);
  this.executeCharTest('exp', ['Exponent']);
  this.executeCharTest('expt', ['Exponent']);
  this.executeCharTest('gcd', ['größter gemeinsamer Teiler']);
  this.executeCharTest('lcm', ['kleinstes gemeinsames Vielfaches']);
  this.executeCharTest('arg', ['Argument']);
  this.executeCharTest('im', ['der Imaginärteil der komplexen Zahl']);
  this.executeCharTest('re', ['der Realteil der komplexen Zahl']);
  this.executeCharTest('inf', ['Infimum']);
  this.executeCharTest('lim', ['Limes']);
  this.executeCharTest('lim inf', ['Limes inferior']);
  this.executeCharTest('liminf', ['Limes inferior']);
  this.executeCharTest('lim sup', ['Limes superior']);
  this.executeCharTest('limsup', ['Limes superior']);
  this.executeCharTest('max', ['Maximum']);
  this.executeCharTest('min', ['Minimum']);
  this.executeCharTest('sup', ['Supremum']);
  this.executeCharTest('injlim', ['Colimes']);
  this.executeCharTest('inj lim', ['Colimes']);
  this.executeCharTest('projlim', ['projektiver Limes']);
  this.executeCharTest('proj lim', ['projektiver Limes']);
  this.executeCharTest('mod', ['modulo']);
  this.executeCharTest('Pr', ['Wahrscheinlichkeit']);
  this.executeCharTest('cosh', ['Kosinus hyperbolicus']);
  this.executeCharTest('coth', ['Kotangens hyperbolicus']);
  this.executeCharTest('csch', ['Kosekans hyperbolicus']);
  this.executeCharTest('sech', ['Sekans hyperbolicus']);
  this.executeCharTest('sinh', ['Sinus hyperbolicus']);
  this.executeCharTest('tanh', ['Tangens hyperbolicus']);
  this.executeCharTest('arcosh', ['Areakosinus hyperbolicus']);
  this.executeCharTest('arccosh', ['Areakosinus hyperbolicus']);
  this.executeCharTest('arcoth', ['Areakotangens hyperbolicus']);
  this.executeCharTest('arccoth', ['Areakotangens hyperbolicus']);
  this.executeCharTest('arcsch', ['Areakosekans hyperbolicus']);
  this.executeCharTest('arccsch', ['Areakosekans hyperbolicus']);
  this.executeCharTest('arsech', ['Areasekans hyperbolicus']);
  this.executeCharTest('arcsech', ['Areasekans hyperbolicus']);
  this.executeCharTest('arsinh', ['Areasinus hyperbolicus']);
  this.executeCharTest('arcsinh', ['Areasinus hyperbolicus']);
  this.executeCharTest('artanh', ['Areatangens hyperbolicus ']);
  this.executeCharTest('arctanh', ['Areatangens hyperbolicus ']);
  this.executeCharTest('cos', ['Kosinus']);
  this.executeCharTest('cosine', ['Kosinus']);
  this.executeCharTest('cot', ['Kotangens']);
  this.executeCharTest('csc', ['Kosekans']);
  this.executeCharTest('sec', ['Sekans']);
  this.executeCharTest('sin', ['Sinus']);
  this.executeCharTest('sine', ['Sinus']);
  this.executeCharTest('tan', ['Tangens']);
  this.executeCharTest('arccos', ['Arkuskosinus']);
  this.executeCharTest('arccot', ['Arkuskotangens']);
  this.executeCharTest('arccsc', ['Arkuskosekans']);
  this.executeCharTest('arcsec', ['Arkussekans']);
  this.executeCharTest('arcsin', ['Arkussinus']);
  this.executeCharTest('arctan', ['Arkustangens']);
};


sre.DefaultCharGermanTest.prototype.testDefaultUnits = function() {
  this.executeUnitTest('ha', ['Hektar']);
  this.executeUnitTest('W', ['Watt']);
  this.executeUnitTest('w', ['Watt']);
  this.executeUnitTest('kw', ['Kilowatt']);
  this.executeUnitTest('kW', ['Kilowatt']);
  this.executeUnitTest('mw', ['Milliwatt']);
  this.executeUnitTest('mW', ['Milliwatt']);
  this.executeUnitTest('kwh', ['Kilowattstunde']);
  this.executeUnitTest('kWh', ['Kilowattstunde']);
  this.executeUnitTest('J', ['Joule']);
  this.executeUnitTest('N', ['Newton']);
  this.executeUnitTest('A', ['Ampere']);
  this.executeUnitTest('V', ['Volt']);
  this.executeUnitTest('µΩ', ['Mikroohm']);
  this.executeUnitTest('mΩ', ['Milliohm']);
  this.executeUnitTest('Ω', ['Ohm']);
  this.executeUnitTest('Ohm', ['Ohm']);
  this.executeUnitTest('kΩ', ['Kiloohm']);
  this.executeUnitTest('KΩ', ['Kiloohm']);
  this.executeUnitTest('MΩ', ['Megaohm']);
  this.executeUnitTest('GΩ', ['Gigaohm']);
  this.executeUnitTest('ft', ['Fuß']);
  this.executeUnitTest('ft.', ['Fuß']);
  this.executeUnitTest('in', ['Zoll']);
  this.executeUnitTest('in.', ['Zoll']);
  this.executeUnitTest('mi', ['Meile']);
  this.executeUnitTest('mi.', ['Meile']);
  this.executeUnitTest('yd', ['Yard']);
  this.executeUnitTest('yd.', ['Yard']);
  this.executeUnitTest('n.m.', ['nautische Meile']);
  this.executeUnitTest('mm', ['Millimeter']);
  this.executeUnitTest('cm', ['Zentimeter']);
  this.executeUnitTest('m', ['Meter']);
  this.executeUnitTest('km', ['Kilometer']);
  this.executeUnitTest('b', ['Bit']);
  this.executeUnitTest('B', ['Byte']);
  this.executeUnitTest('KB', ['Kilobyte']);
  this.executeUnitTest('MB', ['Megabyte']);
  this.executeUnitTest('GB', ['Gigabyte']);
  this.executeUnitTest('TB', ['Terabyte']);
  this.executeUnitTest('doz', ['Dutzend']);
  this.executeUnitTest('doz.', ['Dutzend']);
  this.executeUnitTest('dz', ['Dutzend']);
  this.executeUnitTest('dz.', ['Dutzend']);
  this.executeUnitTest('kt', ['Knoten']);
  this.executeUnitTest('kt.', ['Knoten']);
  this.executeUnitTest('mph', ['Meilen pro Stunde']);
  this.executeUnitTest('rpm', ['Umdrehungen pro Minute']);
  this.executeUnitTest('kmh', ['Kilometer pro Stunde']);
  this.executeUnitTest('F', ['Farad']);
  this.executeUnitTest('F.', ['Farad']);
  this.executeUnitTest('°F', ['Farad']);
  this.executeUnitTest('C', ['Celsius']);
  this.executeUnitTest('°C', ['Celsius']);
  this.executeUnitTest('K', ['Kelvin']);
  this.executeUnitTest('°K', ['Kelvin']);
  this.executeUnitTest('ns', ['Nanosekunde']);
  this.executeUnitTest('µs', ['Microsekunde']);
  this.executeUnitTest('ms', ['Millisekunde']);
  this.executeUnitTest('s', ['Sekunde']);
  this.executeUnitTest('min', ['Minute']);
  this.executeUnitTest('h', ['Stunde']);
  this.executeUnitTest('hr', ['Stunde']);
  this.executeUnitTest('cu', ['Kubik']);
  this.executeUnitTest('cu.', ['Kubik']);
  this.executeUnitTest('bbl.', ['Fass']);
  this.executeUnitTest('bbl', ['Fass']);
  this.executeUnitTest('fl. oz.', ['Fluid ounce']);
  this.executeUnitTest('fl oz', ['Fluid ounce']);
  this.executeUnitTest('gal', ['Gallone']);
  this.executeUnitTest('gal.', ['Gallone']);
  this.executeUnitTest('pt', ['Pint']);
  this.executeUnitTest('pt.', ['Pint']);
  this.executeUnitTest('qt', ['Quart']);
  this.executeUnitTest('qt.', ['Quart']);
  this.executeUnitTest('tbsp', ['Esslöffel']);
  this.executeUnitTest('tbsp.', ['Esslöffel']);
  this.executeUnitTest('Tbsp', ['Esslöffel']);
  this.executeUnitTest('Tbsp.', ['Esslöffel']);
  this.executeUnitTest('tsp', ['Teelöffel']);
  this.executeUnitTest('tsp.', ['Teelöffel']);
  this.executeUnitTest('cc', ['Kubikzentimeter']);
  this.executeUnitTest('ccm', ['Kubikzentimeter']);
  this.executeUnitTest('kl', ['Kiloliter']);
  this.executeUnitTest('l', ['Liter']);
  this.executeUnitTest('ml', ['Milliliter']);
  this.executeUnitTest('oz', ['Unze']);
  this.executeUnitTest('oz.', ['Unze']);
  this.executeUnitTest('lb', ['Pfund']);
  this.executeUnitTest('lb.', ['Pfund']);
  this.executeUnitTest('LT', ['Long ton']);
  this.executeUnitTest('L.T.', ['Long ton']);
  this.executeUnitTest('g', ['Gramm']);
  this.executeUnitTest('gr', ['Gramm']);
  this.executeUnitTest('kg', ['Kilogramm']);
  this.executeUnitTest('mcg', ['Mikrogramm']);
  this.executeUnitTest('µg', ['Mikrogramm']);
  this.executeUnitTest('mg', ['Milligramm']);
  this.executeUnitTest('t', ['Tonne']);
  this.executeUnitTest('T', ['Tonne']);
};
